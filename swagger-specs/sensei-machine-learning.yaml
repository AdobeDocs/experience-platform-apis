openapi: 3.0.1
info:
  title: Sensei Machine Learning API
  description: "Sensei Machine Learning API provides a mechanism for data scientists to organize and manage ML services from algorithm onboarding through experimentation and to service deployment.\n\nRelated documentation:\n  * [Data Science Workspace documentation](http://www.adobe.com/go/data-science-overview-en)\n  \nVisualize API calls with Postman (a free, third-party software):\n  * [Sensei Machine Learning API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Sensei%20Machine%20Learning%20API.postman_collection.json)\n  * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)\n  * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)\n\
    \n\n**API paths**: \n  * PLATFORM Gateway URL: https://<span>platform.adobe.io/ \n  * Base path for this API: /data/sensei\n  * Example of a complete path: https://<span>platform.adobe.io/data/sensei/engines\n\
    \n**Required headers**:\n  * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).\n  * All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, \"prod\"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.\n  * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`. \n\  
    \n**API error handling**: \n  - Refer to the Experience Platform API troubleshooting guide for [FAQs](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#faq), [API status codes](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#api-status-codes), and [request header errors](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#request-header-errors)."
  version: "1.0"
servers:
- url: //{environment}.adobe.io/data/sensei
  variables:
    environment:
      default: platform
      enum: 
        - platform
        - platform-stage
tags:
- name: Engines
  description: "Engines act as an umbrella entity holding all machine learning instances. This is tied to a Docker image, Java archive, or EGG file which contains machine  learning logic to train and score a Model."
- name: MLInstances
  description: MLInstances represent the combination of a specific Engine with particular set of configurations. An instance is often use-case specific for a customer or client.
- name: MLServices
  description: An MLService is a published trained model that provides your organization with the ability to access and reuse previously developed models. A key feature of MLServices is the ability to automate training and scoring on a scheduled basis.
- name: Experiments
  description: "A data scientist conducts multiple experiments to arrive at a high-performing Model while training. This can include changing datasets, features, learning parameters, and hardware."
- name: Models
  description: Allows machine learning Model management and registration (Model artifact that is created by the training process).
- name: Insights
  description: Insights contain metrics which are used to empower a data scientist to evaluate and choose optimal ML Models by displaying relevant evaluation metrics.
paths:
  /engines:
    get:
      tags:
      - Engines
      summary: List all engines
      description: "Lists all engines providing mechanisms for pagination, filtering, and sorting."
      operationId: retrieveEngines
      parameters:
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: start
        in: query
        description: Start value for pagination. Indicates the starting index for the items to return.
        schema:
          type: string
      - name: limit
        in: query
        description: Limit value for pagination. Indicates the requested number of items to return. The service may return a different number of items than requested.
        schema:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          default: 25
      - name: orderby
        in: query
        description: Sort order for pagination. Indicates the fields and direction to use for sorting in priority order.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          default: "[\"-updated\"]"
      - name: property
        in: query
        description: Property matching expression for filtering paginated results. Indicates the comparison expression that items must match in order to be returned.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          x-summary: "Success"
          description: List of Engines
          content:
            application/vnd.adobe.platform.sensei+json;profile=engineListing.v1.json:
              schema:
                $ref: '#/components/schemas/EngineListing'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    post:
      tags:
      - Engines
      summary: Create a new Engine
      description: Creates a new Engine
      operationId: createEngine
      parameters:
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                engine:
                  type: string
                  description: Engine entity description
                  x-content-type: application/vnd.adobe.platform.sensei+json;profile=engine.v1.json
                defaultArtifact:
                  type: string
                  description: "The binary Engine artifact (e.g. JAR, EGG) used for all operations by default"
                  format: binary
                  x-content-type: application/octet-stream
                preprocessOverrideArtifact:
                  type: string
                  description: "The binary Engine artifact (e.g. JAR, EGG) used for the 'preprocess' operation"
                  format: binary
                  x-content-type: application/octet-stream
                featurePipelineOverrideArtifact:
                  type: string
                  description: "The binary Engine artifact (e.g. JAR, EGG) used for the 'preprocess' operation"
                  format: binary
                  x-content-type: application/octet-stream
                trainOverrideArtifact:
                  type: string
                  description: "The binary Engine artifact (e.g. JAR, EGG) used for the 'train' operation"
                  format: binary
                  x-content-type: application/octet-stream
                batchScoreOverrideArtifact:
                  type: string
                  description: "The binary Engine artifact (e.g. JAR, EGG) used for the 'batchScore' operation"
                  format: binary
                  x-content-type: application/octet-stream
                validateOverrideArtifact:
                  type: string
                  description: "The binary Engine artifact (e.g. JAR, EGG) used for the 'validate' operation"
                  format: binary
                  x-content-type: application/octet-stream
                evaluateOverrideArtifact:
                  type: string
                  description: "The binary Engine artifact (e.g. JAR, EGG) used for the 'evaluate' operation"
                  format: binary
                  x-content-type: application/octet-stream
                publishOverrideArtifact:
                  type: string
                  description: "The binary Engine artifact (e.g. JAR, EGG) used for the 'publish' operation"
                  format: binary
                  x-content-type: application/octet-stream
      responses:
        201:
          x-summary: "Success"
          description: Creation successful
          headers:
            Location:
              description: URL indicating the location of the created Engine resource
              schema:
                type: string
          content:
            application/vnd.adobe.platform.sensei+json;profile=engine.v1.json:
              schema:
                $ref: '#/components/schemas/Engine'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        415:
          x-summary: "Unsupported media type"
          description: Unsupported Media Type. The server refuses to accept the request because the payload format is in an unsupported format.
          content: {}
        422:
          x-summary: "Unprocessable entity"
          description: Unprocessable Entity. Client sent a correct request that contained invalid values for one or more parameters.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /engines/dockerRegistry:
    get:
      tags:
      - Engines
      summary: Get Docker registry information
      description: Get Docker registry information
      operationId: retrieveDockerRegistryInfo
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Docker Registry Information
          content:
            application/vnd.adobe.platform.sensei+json;profile=enginesDockerRegistryInfo.v1.json:
              schema:
                $ref: '#/components/schemas/EnginesDockerRegistryInfo'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /engines/{engineId}:
    get:
      tags:
      - Engines
      summary: Retrieve an Engine
      description: Retrieves a specific Engine
      operationId: retrieveEngine
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: engineId
        in: path
        description: The identifier of the Sensei Engine
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Engine object
          content:
            application/vnd.adobe.platform.sensei+json;profile=engine.v1.json:
              schema:
                $ref: '#/components/schemas/Engine'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    put:
      tags:
      - Engines
      summary: Update an Engine
      description: Updates a specific Engine
      operationId: updateEngine
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: engineId
        in: path
        description: The identifier of the Sensei Engine
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: Optional header field with ETag value provided by client
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/vnd.adobe.platform.sensei+json;profile=engine.v1.json
        required: true
        schema:
          type: string
      requestBody:
        description: Engine object to be updated
        content:
          application/vnd.adobe.platform.sensei+json;profile=engine.v1.json:
            schema:
              $ref: '#/components/schemas/Engine'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: Engine object
          content:
            application/vnd.adobe.platform.sensei+json;profile=engine.v1.json:
              schema:
                $ref: '#/components/schemas/Engine'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: engine
    delete:
      tags:
      - Engines
      summary: Delete an existing Engine
      description: Deletes a specific Engine
      operationId: deleteEngine
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: engineId
        in: path
        description: The identifier of the Sensei Engine
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Engine deleted successfully
          content:
            application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json:
              schema:
                $ref: '#/components/schemas/SenseiApiResponse'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /mlInstances:
    get:
      tags:
      - MLInstances
      summary: List MLInstances
      description: MLInstances may be searched by name or tags.
      operationId: listMLInstances
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: start
        in: query
        description: Start value for pagination. Indicates the starting index for the items to return.
        schema:
          type: string
      - name: limit
        in: query
        description: Limit value for pagination. Indicates the requested number of items to return. The service may return a different number of items than requested.
        schema:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          default: 25
      - name: orderby
        in: query
        description: Sort order for pagination. Indicates the fields and direction to use for sorting in priority order.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          default: "[\"-updated\"]"
      - name: property
        in: query
        description: Property matching expression for filtering paginated results. Indicates the comparison expression that items must match in order to be returned.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          x-summary: "Success"
          description: List of MLInstances
          content:
            application/vnd.adobe.platform.sensei+json;profile=mlInstanceListing.v1.json:
              schema:
                $ref: '#/components/schemas/MLInstanceListing'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    post:
      tags:
      - MLInstances
      summary: Add a new MLInstance.
      description: Creates a new MLInstance of an Engine
      operationId: createMLInstance
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json
        required: true
        schema:
          type: string
      requestBody:
        description: MLInstance object that needs to be added. Note that a valid `engineId` has to be listed in the object.
        content:
          application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json:
            schema:
              $ref: '#/components/schemas/MLInstance'
        required: true
      responses:
        201:
          x-summary: "Success"
          description: Creation successful
          headers:
            Location:
              description: URL indicating the location of the created MLInstance resource
              schema:
                type: string
          content:
            application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json:
              schema:
                $ref: '#/components/schemas/MLInstance'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        415:
          x-summary: "Unsupported media type"
          description: Unsupported Media Type. The server refuses to accept the request because the payload format is in an unsupported format.
          content: {}
        422:
          x-summary: "Unprocessable entity"
          description: Unprocessable Entity. Client sent a correct request that contained invalid values for one or more parameters.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: mlInstance
    delete:
      tags:
      - MLInstances
      summary: Delete MLinstances by engineId
      description: Deletes all MLinstances for provided engineId.
      operationId: deleteMLInstances
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: engineId
        in: query
        description: The engineId for which MLinstances should be deleted
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Successful operation
          content:
            application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json:
              schema:
                $ref: '#/components/schemas/SenseiApiResponse'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        410:
          x-summary: "Resource gone"
          description: Resource gone. The requested resource has been permanently removed.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
  /mlInstances/{mlInstanceId}:
    get:
      tags:
      - MLInstances
      summary: Retrieve an MLInstance
      operationId: retrieveMLInstance
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: mlInstanceId
        in: path
        description: The identifier of the Sensei ML instance
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: MLInstance object
          content:
            application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json:
              schema:
                $ref: '#/components/schemas/MLInstance'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    put:
      tags:
      - MLInstances
      summary: Update a MLInstance by ID.
      operationId: updateMLInstance
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: mlInstanceId
        in: path
        description: The identifier of the Sensei ML instance
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: Optional header field with ETag value provided by client
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json
        required: true
        schema:
          type: string
      requestBody:
        description: MLInstance object to be updated
        content:
          application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json:
            schema:
              $ref: '#/components/schemas/MLInstance'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: MLInstance object
          content:
            application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json:
              schema:
                $ref: '#/components/schemas/MLInstance'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the
            server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: mlInstance
    delete:
      tags:
      - MLInstances
      summary: Delete an MLInstance
      operationId: deleteMLInstance
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: mlInstanceId
        in: path
        description: The identifier of the Sensei ML instance
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: MLInstance deleted successfully
          content:
            application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json:
              schema:
                $ref: '#/components/schemas/SenseiApiResponse'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /experiments:
    get:
      tags:
      - Experiments
      summary: Retrieve an MLInstance's experiments
      operationId: retrieveExperiments
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: start
        in: query
        description: Start value for pagination. Indicates the starting index for the items to return.
        schema:
          type: string
      - name: limit
        in: query
        description: Limit value for pagination. Indicates the requested number of items to return. The service may return a different number of items than requested.
        schema:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          default: 25
      - name: orderby
        in: query
        description: Sort order for pagination. Indicates the fields and direction to use for sorting in priority order.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          default: "[\"-updated\"]"
      - name: property
        in: query
        description: Property matching expression for filtering paginated results. Indicates the comparison expression that items must match in order to be returned.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          x-summary: "Success"
          description: List of Experiments
          content:
            application/vnd.adobe.platform.sensei+json;profile=experimentListing.v1.json:
              schema:
                $ref: '#/components/schemas/ExperimentListing'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    post:
      tags:
      - Experiments
      summary: Create an experiment
      operationId: createExperiment
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json
        required: true
        schema:
          type: string
      requestBody:
        description: Experiment object that needs to be created
        content:
          application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      responses:
        201:
          x-summary: "Success"
          description: Creation successful
          headers:
            Location:
              description: URL indicating the location of the created Experiment resource
              schema:
                type: string
          content:
            application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json:
              schema:
                $ref: '#/components/schemas/Experiment'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        415:
          x-summary: "Unsupported media type"
          description: Unsupported Media Type. The server refuses to accept the request because the payload format is in an unsupported format.
          content: {}
        422:
          x-summary: "Unprocessable entity"
          description: Unprocessable Entity. Client sent a correct request that contained invalid values for one or more parameters.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: experiment
    delete:
      tags:
      - Experiments
      summary: Delete experiments by mlInstanceId
      description: Deletes all experiments for the provided mlInstance.
      operationId: deleteExperiments
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: mlInstanceId
        in: query
        description: The mlInstanceId for which experiments should be deleted
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Successful operation
          content:
            application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json:
              schema:
                $ref: '#/components/schemas/SenseiApiResponse'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        410:
          x-summary: "Resource gone"
          description: Resource gone. The requested resource has been permanently
            removed.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
  /experiments/{experimentId}:
    get:
      tags:
      - Experiments
      summary: Retrieve an experiment
      operationId: retrieveExperiment
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: The identifier of the experiment
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Returns the Experiment object
          content:
            application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json:
              schema:
                $ref: '#/components/schemas/Experiment'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    put:
      tags:
      - Experiments
      summary: Update an experiment
      operationId: updateExperiment
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: The identifier of the experiment
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: Optional header field with ETag value provided by client
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json
        required: true
        schema:
          type: string
      requestBody:
        description: Experiment object to be updated
        content:
          application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: Returns the experiment object
          content:
            application/vnd.adobe.platform.sensei+json;profile=experiment.v1.json:
              schema:
                $ref: '#/components/schemas/Experiment'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: experiment
    delete:
      tags:
      - Experiments
      summary: Delete an experiment
      operationId: deleteExperiment
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: The identifier of the experiment
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Experiment deleted successfully
          content:
            application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json:
              schema:
                $ref: '#/components/schemas/SenseiApiResponse'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /experiments/{experimentId}/runs:
    get:
      tags:
      - Experiments
      summary: List experiment runs
      operationId: listExperimentRuns
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: The identifier of the experiment
        required: true
        schema:
          type: string
      - name: start
        in: query
        description: Start value for pagination. Indicates the starting index for the items to return.
        schema:
          type: string
      - name: limit
        in: query
        description: Limit value for pagination. Indicates the requested number of items to return. The service may return a different number of items than requested.
        schema:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          default: 25
      - name: orderby
        in: query
        description: Sort order for pagination. Indicates the fields and direction to use for sorting in priority order.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          default: "[\"-updated\"]"
      - name: property
        in: query
        description: Property matching expression for filtering paginated results. Indicates the comparison expression that items must match in order to be returned.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          x-summary: "Success"
          description: List of engines
          content:
            application/vnd.adobe.platform.sensei+json;profile=experimentRunListing.v1.json:
              schema:
                $ref: '#/components/schemas/ExperimentRunListing'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    post:
      tags:
      - Experiments
      summary: Create an experiment run
      operationId: createExperimentRun
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: The identifier of the experiment
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json
        required: true
        schema:
          type: string
      requestBody:
        description: Run object that needs to be added
        content:
          application/vnd.adobe.platform.sensei+json;profile=experimentRun.v1.json:
            schema:
              $ref: '#/components/schemas/ExperimentRun'
        required: true
      responses:
        201:
          x-summary: "Success"
          description: Creation successful
          headers:
            Location:
              description: URL indicating the location of the created ExperimentRun
                resource
              schema:
                type: string
          content:
            application/vnd.adobe.platform.sensei+json;profile=experimentRun.v1.json:
              schema:
                $ref: '#/components/schemas/ExperimentRun'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        415:
          x-summary: "Unsupported media type"
          description: Unsupported Media Type. The server refuses to accept the request because the payload format is in an unsupported format.
          content: {}
        422:
          x-summary: "Unprocessable entity"
          description: Unprocessable Entity. Client sent a correct request that contained invalid values for one or more parameters.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: Run
  /experiments/{experimentId}/runs/{experimentRunId}:
    get:
      tags:
      - Experiments
      summary: Retrieve experiment run information
      operationId: retrieveExperimentRun
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: The identifier of the experiment
        required: true
        schema:
          type: string
      - name: experimentRunId
        in: path
        description: The identifier of the experiment run
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Returns the run status and info
          content:
            application/vnd.adobe.platform.sensei+json;profile=experimentRun.v1.json:
              schema:
                $ref: '#/components/schemas/ExperimentRun'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /experiments/{experimentId}/runs/{experimentRunId}/status:
    get:
      tags:
      - Experiments
      summary: Retrieve an experiment run status
      operationId: retrieveExperimentRunStatus
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: The identifier of the experiment
        required: true
        schema:
          type: string
      - name: experimentRunId
        in: path
        description: The identifier of the experiment run
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Returns the run status and info
          content:
            application/vnd.adobe.platform.sensei+json;profile=experimentRunStatus.v1.json:
              schema:
                $ref: '#/components/schemas/RunStatus'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /models:
    get:
      tags:
      - Models
      summary: List all Models.
      description: "List all Models providing mechanisms for pagination, filtering, and sorting."
      operationId: listModels
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: start
        in: query
        description: Start value for pagination. Indicates the starting index for the items to return.
        schema:
          type: string
      - name: limit
        in: query
        description: Limit value for pagination. Indicates the requested number of items to return. The service may return a different number of items than requested.
        schema:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          default: 25
      - name: orderby
        in: query
        description: Sort order for pagination. Indicates the fields and direction to use for sorting in priority order.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          default: "[\"-updated\"]"
      - name: property
        in: query
        description: Property matching expression for filtering paginated results. Indicates the comparison expression that items must match in order to be returned.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          x-summary: "Success"
          description: List of Models
          content:
            application/vnd.adobe.platform.sensei+json;profile=modelListing.v1.json:
              schema:
                $ref: '#/components/schemas/ModelListing'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    post:
      tags:
      - Models
      summary: Create a Model.
      description: Creates a Model for a particular Engine and MLinstance
      operationId: createModel
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                modelArtifact:
                  type: string
                  description: The artifact containing the Model
                  format: binary
                  x-content-type: application/octet-stream
                model:
                  type: string
                  description: Model object that needs to be created
                  x-content-type: application/vnd.adobe.platform.sensei+json;profile=model.v1.json
      responses:
        201:
          x-summary: "Success"
          description: Creation successful
          headers:
            Location:
              description: URL indicating the location of the created Model resource
              schema:
                type: string
          content:
            application/vnd.adobe.platform.sensei+json;profile=model.v1.json:
              schema:
                $ref: '#/components/schemas/Model'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        415:
          x-summary: "Unsupported media type"
          description: Unsupported Media Type. The server refuses to accept the request because the payload format is in an unsupported format.
          content: {}
        422:
          x-summary: "Unprocessable entity"
          description: Unprocessable Entity. Client sent a correct request that contained invalid values for one or more parameters.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /models/{modelId}:
    get:
      tags:
      - Models
      summary: Retrieve a Model
      description: Retrieves a specific Model
      operationId: retrieveModel
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: modelId
        in: path
        description: The identifier of the trained or published Model
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Returns the Model object
          content:
            application/vnd.adobe.platform.sensei+json;profile=model.v1.json:
              schema:
                $ref: '#/components/schemas/Model'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    put:
      tags:
      - Models
      summary: Update a Model
      description: Update an existing Model
      operationId: updateModel
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: modelId
        in: path
        description: The identifier of the trained or published Model
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: Optional header field with ETag value provided by client
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json
        required: true
        schema:
          type: string
      requestBody:
        description: Model object to be updated
        content:
          application/vnd.adobe.platform.sensei+json;profile=model.v1.json:
            schema:
              $ref: '#/components/schemas/Model'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: Returns the updated Model object
          content:
            application/vnd.adobe.platform.sensei+json;profile=model.v1.json:
              schema:
                $ref: '#/components/schemas/Model'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: model
    delete:
      tags:
      - Models
      summary: Delete a Model
      description: Deletes a specific Model
      operationId: deleteModel
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: modelId
        in: path
        description: The identifier of the trained or published Model
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Model deleted successfully
          content:
            application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json:
              schema:
                $ref: '#/components/schemas/SenseiApiResponse'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /models/{modelId}/artifact:
    get:
      tags:
      - Models
      summary: Retrieve a binary Model artifact
      operationId: retrieveModelArtifact
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: modelId
        in: path
        description: The identifier of the trained or published Model
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Returns the binary Model artifact
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /models/{modelId}/transcodings:
    get:
      tags:
      - Models
      summary: List a model's transcodings
      operationId: retrieveModelTranscodings
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: modelId
        in: path
        description: The identifier of the trained or published Model
        required: true
        schema:
          type: string
      - name: start
        in: query
        description: Start value for pagination. Indicates the starting index for the items to return.
        schema:
          type: string
      - name: limit
        in: query
        description: Limit value for pagination. Indicates the requested number of items to return. The service may return a different number of items than requested.
        schema:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          default: 25
      - name: orderby
        in: query
        description: Sort order for pagination. Indicates the fields and direction to use for sorting in priority order.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          default: "[\"-updated\"]"
      - name: property
        in: query
        description: Property matching expression for filtering paginated results. Indicates the comparison expression that items must match in order to be returned.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          x-summary: "Success"
          description: List of Model Transcodings
          content:
            application/vnd.adobe.platform.sensei+json;profile=modelTranscodingListing.v1.json:
              schema:
                $ref: '#/components/schemas/ModelTranscodingListing'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    post:
      tags:
      - Models
      summary: Create a new transcoding
      operationId: createModelTranscoding
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: modelId
        in: path
        description: The identifier of the trained or published Model
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json
        required: true
        schema:
          type: string
      requestBody:
        description: Model transcoding to be created
        content:
          application/vnd.adobe.platform.sensei+json;profile=modelTranscoding.v1.json:
            schema:
              $ref: '#/components/schemas/ModelTranscoding'
        required: true
      responses:
        201:
          x-summary: "Success"
          description: Creation successful
          headers:
            Location:
              description: URL indicating the location of the created Model resource
              schema:
                type: string
          content:
            application/vnd.adobe.platform.sensei+json;profile=modelTranscoding.v1.json:
              schema:
                $ref: '#/components/schemas/ModelTranscoding'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        415:
          x-summary: "Unsupported media type"
          description: Unsupported Media Type. The server refuses to accept the request because the payload format is in an unsupported format.
          content: {}
        422:
          x-summary: "Unprocessable entity"
          description: Unprocessable Entity. Client sent a correct request that contained invalid values for one or more parameters.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: model
  /models/{modelId}/transcodings/{modelTranscodingId}:
    get:
      tags:
      - Models
      summary: Retrieve a Model transcoding
      operationId: retrieveModelTranscoding
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: modelId
        in: path
        description: The identifier of the trained or published Model
        required: true
        schema:
          type: string
      - name: modelTranscodingId
        in: path
        description: The identifier of the transcoded Model artifact
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Returns the Model object
          content:
            application/vnd.adobe.platform.sensei+json;profile=modelTranscoding.v1.json:
              schema:
                $ref: '#/components/schemas/ModelTranscoding'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /insights:
    get:
      tags:
      - Insights
      summary: List all insights
      description: Lists all insights for all experiment runs
      operationId: retrieveInsights
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: start
        in: query
        description: Start value for pagination. Indicates the starting index for the items to return.
        schema:
          type: string
      - name: limit
        in: query
        description: Limit value for pagination. Indicates the requested number of items to return. The service may return a different number of items than requested.
        schema:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          default: 25
      - name: orderby
        in: query
        description: Sort order for pagination. Indicates the fields and direction to use for sorting in priority order.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          default: "[\"-updated\"]"
      - name: property
        in: query
        description: Property matching expression for filtering paginated results. Indicates the comparison expression that items must match in order to be returned.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          x-summary: "Success"
          description: List of insights
          content:
            application/vnd.adobe.platform.sensei+json;profile=insightListing.v1.json:
              schema:
                $ref: '#/components/schemas/InsightListing'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    post:
      tags:
      - Insights
      summary: Create a new Model insight
      description: Creates a new Model insight
      operationId: createInsights
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/vnd.adobe.platform.sensei+json;profile=mlInstance.v1.json
        required: true
        schema:
          type: string
      requestBody:
        description: Insight object that needs to be added
        content:
          application/vnd.adobe.platform.sensei+json;profile=insight.v1.json:
            schema:
              $ref: '#/components/schemas/Insight'
        required: true
      responses:
        201:
          x-summary: "Success"
          description: Creation successful
          headers:
            Location:
              description: URL indicating the location of the created Engine resource
              schema:
                type: string
          content:
            application/vnd.adobe.platform.sensei+json;profile=insight.v1.json:
              schema:
                $ref: '#/components/schemas/Insight'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        415:
          x-summary: "Unsupported media type"
          description: Unsupported Media Type. The server refuses to accept the request because the payload format is in an unsupported format.
          content: {}
        422:
          x-summary: "Unprocessable entity"
          description: Unprocessable Entity. Client sent a correct request that contained invalid values for one or more parameters.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: insight
  /insights/{insightId}:
    get:
      tags:
      - Insights
      summary: Retrieve an insight
      description: Retrieves a specific insight
      operationId: retrieveInsight
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: insightId
        in: path
        description: The identifier of the Sensei Insight
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Insight object
          content:
            application/vnd.adobe.platform.sensei+json;profile=insight.v1.json:
              schema:
                $ref: '#/components/schemas/Insight'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /insights/metrics:
    get:
      tags:
      - Insights
      summary: List default metrics for algorithms
      description: Lists all default metrics available for algorithms
      operationId: retrieveMetrics
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: algorithm
        in: query
        description: The identifier of the algorithm type
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: List of metrics
          content:
            application/vnd.adobe.platform.sensei+json;profile=defaultMetricsListing.v1.json:
              schema:
                $ref: '#/components/schemas/DefaultMetricsListing'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
  /mlServices:
    get:
      tags:
      - MLServices
      summary: List all filtered MLServices
      description: MLServices may be searched by name or tags.
      operationId: retrieveMLServices
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: start
        in: query
        description: Start value for pagination. Indicates the starting index for the items to return.
        schema:
          type: string
      - name: limit
        in: query
        description: Limit value for pagination. Indicates the requested number of items to return. The service may return a different number of items than requested.
        schema:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          default: 25
      - name: orderby
        in: query
        description: Sort order for pagination. Indicates the fields and direction to use for sorting in priority order.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          default: "[\"-updated\"]"
      - name: property
        in: query
        description: Property matching expression for filtering paginated results. Indicates the comparison expression that items must match in order to be returned.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          x-summary: "Success"
          description: List of MLServices
          content:
            application/vnd.adobe.platform.sensei+json;profile=mlServiceListing.v1.json:
              schema:
                $ref: '#/components/schemas/MLServiceListing'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    post:
      tags:
      - MLServices
      summary: Create an MLService
      description: Creates a new MLService of an MLInstance
      operationId: createMLService
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      requestBody:
        description: MLService object that needs to be added. Note that a valid `mlInstanceId`
          has to be listed in the object.
        content:
          application/vnd.adobe.platform.sensei+json;profile=mlService.v1.json:
            schema:
              $ref: '#/components/schemas/MLService'
        required: true
      responses:
        201:
          x-summary: "Success"
          description: Creation successful
          headers:
            Location:
              description: URL indicating the location of the created MLService resource
              schema:
                type: string
          content:
            application/vnd.adobe.platform.sensei+json;profile=mlService.v1.json:
              schema:
                $ref: '#/components/schemas/MLService'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        415:
          x-summary: "Unsupported media type"
          description: Unsupported Media Type. The server refuses to accept the request because the payload format is in an unsupported format.
          content: {}
        422:
          x-summary: "Unprocessable entity"
          description: Unprocessable Entity. Client sent a correct request that contained invalid values for one or more parameters.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: mlService
    delete:
      tags:
      - MLServices
      summary: Delete all MLServices
      description: Deletes all MLServices for provided mlInstanceId
      operationId: deleteMLServices
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: mlInstanceId
        in: query
        description: The mlInstanceId for which MLServices should be deleted
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: Successful operation
          content:
            application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json:
              schema:
                $ref: '#/components/schemas/SenseiApiResponse'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        410:
          x-summary: "Resource gone"
          description: Resource gone. The requested resource has been permanently
            removed.
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
  /mlServices/{serviceId}:
    get:
      tags:
      - MLServices
      summary: Retrieve an MLService
      operationId: retrieveMLService
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: serviceId
        in: path
        description: The identifier of the Sensei Service
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: MLService object
          content:
            ? ""
            : schema:
                $ref: '#/components/schemas/MLService'
            application/vnd.adobe.platform.sensei+json;profile=mlService.v1.json:
              schema:
                $ref: '#/components/schemas/MLService'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
    put:
      tags:
      - MLServices
      summary: Update an MLService
      operationId: updateMLService
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: serviceId
        in: path
        description: The identifier of the Sensei Service
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: Optional header field with ETag value provided by client
        schema:
          type: string
      requestBody:
        description: MLService object to be updated
        content:
          application/vnd.adobe.platform.sensei+json;profile=mlService.v1.json:
            schema:
              $ref: '#/components/schemas/MLService'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: MLService object
          content:
            application/vnd.adobe.platform.sensei+json;profile=mlService.v1.json:
              schema:
                $ref: '#/components/schemas/MLService'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
      x-codegen-request-body-name: mlService
    delete:
      tags:
      - MLServices
      summary: Delete an MLService
      operationId: deleteMLService
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
        required: true
        schema:
          type: string
      - name: serviceId
        in: path
        description: The identifier of the Sensei Service
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: MLService deleted successfully
          content:
            application/vnd.adobe.platform.sensei+json;profile=api-response.v1.json:
              schema:
                $ref: '#/components/schemas/SenseiApiResponse'
        "400":
          x-summary: "Bad request"
          description: Bad Request. The request is malformed.
          content: {}
        "401":
          x-summary: "Unauthorized"
          description: Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource.
          content: {}
        "403":
          x-summary: "Forbidden"
          description: Forbidden. That combination of arguments is not allowed.
          content: {}
        404:
          x-summary: "Not found"
          description: The resource the client is looking for isn't there.
          content: {}
        "406":
          x-summary: "Not acceptable"
          description: Not Acceptable. Unacceptable content type. The caller sent an <b>Accept</b> header for a content type which does not exist on the server
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
        "502":
          x-summary: "Bad gateway"
          description: Bad Gateway. This is an indicator that the search back-end did not send a valid response.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: Service Unavailable. This is an indicator of a potential server overload.
          content: {}
        504:
          x-summary: "Gateway timeout"
          description: Gateway Timeout. This is an indicator that the search back-end did not complete a response within an allowed time period.
          content: {}
components:
  schemas:
    EngineListing:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/EngineSummary'
        _page:
          $ref: '#/components/schemas/PagingInformationAttributes'
        _links:
          $ref: '#/components/schemas/EngineListingLinks'
    EngineListingLinks:
      allOf:
      - $ref: '#/components/schemas/PagingNavigationAttributes'
      - type: object
        properties:
          self:
            $ref: '#/components/schemas/LinkObject'
          createEngine:
            $ref: '#/components/schemas/LinkObject'
    EnginesDockerRegistryInfo:
      type: object
      properties:
        host:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
        password:
          type: string
          readOnly: true
    EngineSummary:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        documentationUrl:
          type: string
        type:
          type: string
        iconUrl:
          type: string
          description: Url of the thumbnail image
        gitRepo:
          type: string
        algorithm:
          type: string
        language:
          type: array
          items:
            type: string
            enum:
            - Python
            - Java
            - Scala
            - R
            - C++
        mlLibrary:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: object
          properties:
            displayName:
              type: string
            avatar:
              type: string
            userId:
              type: string
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          default: false
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/LinkObject'
    Engine:
      allOf:
      - $ref: '#/components/schemas/EngineSummary'
      - type: object
        properties:
          artifacts:
            type: object
            properties:
              default:
                type: object
                properties:
                  image:
                    $ref: '#/components/schemas/MLEngineArtifact'
                  defaultMLInstanceConfigs:
                    $ref: '#/components/schemas/MLInstanceTaskList'
              overrides:
                type: array
                items:
                  $ref: '#/components/schemas/MLEngineArtifactOverride'
          tags:
            type: object
            additionalProperties:
              type: string
          _links:
            type: object
            properties:
              self:
                $ref: '#/components/schemas/LinkObject'
              getEngine:
                $ref: '#/components/schemas/LinkObject'
              createMLInstance:
                $ref: '#/components/schemas/LinkObject'
              listMLInstances:
                $ref: '#/components/schemas/LinkObject'
    MLEngineArtifact:
      required:
      - location
      - name
      - packagingType
      type: object
      properties:
        location:
          type: string
        reference:
          $ref: '#/components/schemas/ArtifactReference'
        name:
          type: string
        executionType:
          type: string
        packagingType:
          type: string
          default: docker
          enum:
          - docker
          - jar
          - egg
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    MLEngineArtifactOverride:
      required:
      - artifact
      - defaultMLInstanceConfigs
      - id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        artifact:
          $ref: '#/components/schemas/MLEngineArtifact'
        defaultMLInstanceConfigs:
          $ref: '#/components/schemas/MLInstanceTask'
    ArtifactReference:
      required:
      - artifactId
      type: object
      properties:
        artifactId:
          type: string
        version:
          type: string
    MLInstanceListing:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/MLInstanceSummary'
        _page:
          $ref: '#/components/schemas/PagingInformationAttributes'
        _links:
          $ref: '#/components/schemas/MLInstanceListingLinks'
    MLInstanceListingLinks:
      allOf:
      - $ref: '#/components/schemas/PagingNavigationAttributes'
      - type: object
        properties:
          self:
            $ref: '#/components/schemas/LinkObject'
          createMLInstance:
            $ref: '#/components/schemas/LinkObject'
    MLInstanceSummary:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        engineId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: object
          properties:
            displayName:
              type: string
            avatar:
              type: string
            userId:
              type: string
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          default: false
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/LinkObject'
    MLInstance:
      allOf:
      - $ref: '#/components/schemas/MLInstanceSummary'
      - type: object
        properties:
          tags:
            type: object
            additionalProperties:
              type: string
          tasks:
            $ref: '#/components/schemas/MLInstanceTaskList'
          _links:
            type: object
            properties:
              self:
                $ref: '#/components/schemas/LinkObject'
              getMLInstance:
                $ref: '#/components/schemas/LinkObject'
              deleteMLInstance:
                $ref: '#/components/schemas/LinkObject'
              getEngine:
                $ref: '#/components/schemas/LinkObject'
              listExperiments:
                $ref: '#/components/schemas/LinkObject'
              createExperiment:
                $ref: '#/components/schemas/LinkObject'
    MLInstanceTaskList:
      type: array
      items:
        $ref: '#/components/schemas/MLInstanceTask'
    MLInstanceTask:
      type: object
      properties:
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/MLInstanceTaskParameter'
        specification:
          $ref: '#/components/schemas/TaskSpec'
        datasets:
          type: object
          properties:
            inputs:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
                    format: urn
                  diskSizeInGB:
                    type: integer
                  resType:
                    type: string
                    enum:
                    - dataset
                    - model
                    - genericFile
                  downloadRequired:
                    type: boolean
                  refInput:
                    type: object
                    properties:
                      experimentRunId:
                        type: string
                      taskName:
                        type: string
                      outputName:
                        type: string
                  metadata:
                    type: object
                    additionalProperties:
                      type: object
                      properties: {}
            outputs:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
                    format: urn
                  diskSizeInGB:
                    type: integer
                  resType:
                    type: string
                    enum:
                    - dataset
                    - model
                    - genericFile
                  uploadRequired:
                    type: boolean
                  generatedURI:
                    type: string
                  metadata:
                    type: object
                    additionalProperties:
                      type: object
                      properties: {}
      description: A single execution unit of Sensei
    TaskSpec:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ContainerTaskSpec
          - SparkTaskSpec
      description: Refer to ContainerTaskSpec and SparkTaskSpec definitions for the specific types of TaskSpec
      discriminator:
        propertyName: type
    MLInstanceTaskParameter:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        secret:
          type: boolean
      description: A parameter passed to an MLInstanceTask
    ExperimentListing:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentSummary'
        _page:
          $ref: '#/components/schemas/PagingInformationAttributes'
        _links:
          $ref: '#/components/schemas/ExperimentListingLinks'
    ExperimentListingLinks:
      allOf:
      - $ref: '#/components/schemas/PagingNavigationAttributes'
      - type: object
        properties:
          self:
            $ref: '#/components/schemas/LinkObject'
          createExperiment:
            $ref: '#/components/schemas/LinkObject'
    ExperimentSummary:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        mlInstanceId:
          type: string
        mlInstanceQuery:
          type: string
        description:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: object
          properties:
            displayName:
              type: string
            avatar:
              type: string
            userId:
              type: string
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          default: false
        createdByService:
          type: boolean
          default: false
        workflowId:
          type: string
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/LinkObject'
    Experiment:
      allOf:
      - $ref: '#/components/schemas/ExperimentSummary'
      - type: object
        properties:
          tags:
            type: object
            additionalProperties:
              type: string
          template:
            $ref: '#/components/schemas/ExperimentTemplate'
          _links:
            type: object
            properties:
              self:
                $ref: '#/components/schemas/LinkObject'
              getExperiment:
                $ref: '#/components/schemas/LinkObject'
              createExperimentRun:
                $ref: '#/components/schemas/LinkObject'
              listExperimentRuns:
                $ref: '#/components/schemas/LinkObject'
    ExperimentTemplate:
      type: object
      properties:
        experimentRunId:
          type: string
        tasks:
          $ref: '#/components/schemas/MLInstanceTaskList'
        schedule:
          type: object
          properties:
            cron:
              type: string
            startTime:
              type: string
              format: datetime
            endTime:
              type: string
              format: datetime
        notification:
          type: object
          properties:
            email:
              type: string
            emailOnRetry:
              type: boolean
            emailOnFailure:
              type: boolean
    ExperimentRunListing:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentRunSummary'
        _page:
          $ref: '#/components/schemas/PagingInformationAttributes'
        _links:
          $ref: '#/components/schemas/ExperimentRunListingLinks'
    ExperimentRunListingLinks:
      allOf:
      - $ref: '#/components/schemas/PagingNavigationAttributes'
      - type: object
        properties:
          self:
            $ref: '#/components/schemas/LinkObject'
          createExperimentRun:
            $ref: '#/components/schemas/LinkObject'
    ExperimentRunSummary:
      required:
      - experimentId
      type: object
      properties:
        id:
          type: string
        mode:
          type: string
        description:
          type: string
        experimentId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: object
          properties:
            displayName:
              type: string
            avatar:
              type: string
            userId:
              type: string
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          default: false
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/LinkObject'
    ExperimentRun:
      allOf:
      - $ref: '#/components/schemas/ExperimentRunSummary'
      - type: object
        properties:
          tasks:
            $ref: '#/components/schemas/MLInstanceTaskList'
          runChain:
            type: object
            properties:
              preprocessTaskId:
                type: string
                format: urn
              trainTaskId:
                type: string
                format: urn
              batchScoreTaskId:
                type: string
                format: urn
              validateTaskId:
                type: string
                format: urn
              evaluateTaskId:
                type: string
                format: urn
    RunStatus:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        experimentRunId:
          type: string
        description:
          type: string
        deleted:
          type: boolean
          default: false
        status:
          type: object
          properties:
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/Status'
    Status:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        state:
          type: string
          enum:
          - PENDING
          - RUNNING
          - ABORTED
          - FAILED
          - RETRY
          - DONE
        logs:
          type: string
        tasklogs:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/TaskLog'
        message:
          type: string
        started:
          type: string
          format: datetime
        ended:
          type: string
          format: datetime
    TaskLog:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
    ModelListing:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/ModelSummary'
        _page:
          $ref: '#/components/schemas/PagingInformationAttributes'
        _links:
          $ref: '#/components/schemas/ModelListingLinks'
    ModelListingLinks:
      allOf:
      - $ref: '#/components/schemas/PagingNavigationAttributes'
      - type: object
        properties:
          self:
            $ref: '#/components/schemas/LinkObject'
          createModel:
            $ref: '#/components/schemas/LinkObject'
    ModelSummary:
      required:
      - experimentRunId
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        experimentId:
          type: string
        experimentRunId:
          type: string
        description:
          type: string
        modelArtifactUri:
          type: string
        state:
          type: array
          items:
            type: string
            enum:
            - trained
            - published
            - transcoded
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: object
          properties:
            displayName:
              type: string
            avatar:
              type: string
            userId:
              type: string
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          default: false
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/LinkObject'
    Model:
      allOf:
      - $ref: '#/components/schemas/ModelSummary'
      - type: object
        properties:
          tags:
            type: object
            additionalProperties:
              type: string
    ModelTranscodingListing:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/ModelTranscodingSummary'
        _page:
          $ref: '#/components/schemas/PagingInformationAttributes'
        _links:
          $ref: '#/components/schemas/ModelTranscodingListingLinks'
    ModelTranscodingListingLinks:
      allOf:
      - $ref: '#/components/schemas/PagingNavigationAttributes'
      - type: object
        properties:
          self:
            $ref: '#/components/schemas/LinkObject'
          createService:
            $ref: '#/components/schemas/LinkObject'
    ModelTranscodingSummary:
      required:
      - modelId
      type: object
      properties:
        id:
          type: string
        modelId:
          type: string
        targetFormat:
          type: string
          enum:
          - CoreML
          - TF
          - K2
          - Deepnet
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: object
          properties:
            displayName:
              type: string
            avatar:
              type: string
            userId:
              type: string
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          default: false
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/LinkObject'
    ModelTranscoding:
      allOf:
      - $ref: '#/components/schemas/ModelTranscodingSummary'
      - type: object
        properties:
          _links:
            type: object
            properties:
              self:
                $ref: '#/components/schemas/LinkObject'
              getModelTranscoding:
                $ref: '#/components/schemas/LinkObject'
    InsightListing:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/Insight'
        _page:
          $ref: '#/components/schemas/PagingInformationAttributes'
        _links:
          $ref: '#/components/schemas/InsightListingLinks'
    InsightListingLinks:
      allOf:
      - $ref: '#/components/schemas/PagingNavigationAttributes'
      - type: object
        properties:
          self:
            $ref: '#/components/schemas/LinkObject'
          createService:
            $ref: '#/components/schemas/LinkObject'
    Insight:
      type: object
      properties:
        id:
          type: string
        context:
          $ref: '#/components/schemas/InsightContext'
        events:
          $ref: '#/components/schemas/InsightEvent'
        metrics:
          $ref: '#/components/schemas/InsightMetricList'
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/LinkObject'
    InsightContext:
      type: object
      properties:
        clientId:
          type: string
        notebookId:
          type: string
        experimentId:
          type: string
        engineId:
          type: string
        mlInstanceId:
          type: string
        experimentRunId:
          type: string
        modelId:
          type: string
        dataSetId:
          type: string
    InsightEvent:
      type: object
      properties:
        name:
          type: string
        eventValues:
          type: object
          additionalProperties:
            type: string
    InsightMetricList:
      type: array
      items:
        $ref: '#/components/schemas/InsightMetric'
    InsightMetric:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueType:
          type: string
    MLServiceListing:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/MLServiceSummary'
        _page:
          $ref: '#/components/schemas/PagingInformationAttributes'
        _links:
          $ref: '#/components/schemas/MLServiceListingLinks'
    MLServiceListingLinks:
      allOf:
      - $ref: '#/components/schemas/PagingNavigationAttributes'
      - type: object
        properties:
          self:
            $ref: '#/components/schemas/LinkObject'
          createMLInstance:
            $ref: '#/components/schemas/LinkObject'
    MLServiceSummary:
      required:
      - mlInstanceId
      - name
      - scoringDataSetId
      - scoringSchedule
      - scoringTimeframe
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        mlInstanceId:
          type: string
        trainingExperimentId:
          type: string
        trainingExperimentRunId:
          type: string
        trainingDataSetId:
          type: string
        trainingTimeframe:
          type: integer
          format: int32
        scoringExperimentId:
          type: string
        scoringDataSetId:
          type: string
        scoringTimeframe:
          type: integer
          format: int32
        trainingSchedule:
          type: object
          properties:
            startTime:
              type: string
              format: datetime
            endTime:
              type: string
              format: datetime
            cron:
              type: string
        scoringSchedule:
          type: object
          properties:
            startTime:
              type: string
              format: datetime
            endTime:
              type: string
              format: datetime
            cron:
              type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: object
          properties:
            displayName:
              type: string
            avatar:
              type: string
            userId:
              type: string
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          default: false
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/LinkObject'
    MLService:
      allOf:
      - $ref: '#/components/schemas/MLServiceSummary'
      - type: object
        properties:
          tags:
            type: object
            additionalProperties:
              type: string
          _links:
            type: object
            properties:
              self:
                $ref: '#/components/schemas/LinkObject'
              getMLService:
                $ref: '#/components/schemas/LinkObject'
              deleteMLService:
                $ref: '#/components/schemas/LinkObject'
              getMLInstance:
                $ref: '#/components/schemas/LinkObject'
    DefaultMetrics:
      type: object
      properties:
        algorithm:
          type: string
        defaultMetrics:
          type: array
          items:
            type: string
    DefaultMetricsListing:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/DefaultMetrics'
    LinkObject:
      required:
      - href
      type: object
      properties:
        href:
          type: string
          description: Either an URI (RFC3986) or an URI Template (RFC6570) in which
            case the linkObject SHOULD have a 'templated' attribute whose value is
            true
        templated:
          type: boolean
          description: "True if the link href is templated, false otherwise which is also the default"
          default: false
        type:
          type: string
          description: A hint to indicate the media type expected when dereferencing the target resource
        method:
          type: string
          description: "The HTTP method to be applied when using this link. This should be a valid HTTP method name such as GET, PUT, POST, PATCH, DELETE where GET implies support for HEAD as well"
          default: GET
        title:
          type: string
          description: A label with a human-readable identifier (as defined by RFC5988)
        hrefLang:
          type: string
          description: The language of the target resource (as defined by RFC5988)
    PagingInformationAttributes:
      type: object
      properties:
        orderby:
          type: string
          readOnly: true
        property:
          type: string
          readOnly: true
        start:
          type: string
          readOnly: true
        totalCount:
          type: integer
          format: int64
          readOnly: true
        count:
          type: integer
          format: int64
          readOnly: true
        next:
          type: string
          readOnly: true
    PagingNavigationAttributes:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/LinkObject'
        page:
          $ref: '#/components/schemas/LinkObject'
    SenseiApiResponse:
      type: object
      properties:
        type:
          type: string
          readOnly: true
          example: https://platform.adobe.io/data/foundation/ml/problems/illegal-argument
        title:
          type: string
          readOnly: true
          example: Illegal Argument
        status:
          type: integer
          format: int32
          readOnly: true
          example: 400
        detail:
          type: string
          readOnly: true
          example: Model specification name must not be empty
        additionalDetails:
          type: object
          additionalProperties:
            type: string
  parameters:
    xApiKey:
      name: x-api-key
      in: header
      description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
      required: true
      schema:
        type: string
    x-sandbox-name:
      name: x-sandbox-name
      in: header
      description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
      required: true
      schema:
        type: string
    startQueryParam:
      name: start
      in: query
      description: Start value for pagination. Indicates the starting index for the items to return.
      schema:
        type: string
    limitQueryParam:
      name: limit
      in: query
      description: Limit value for pagination. Indicates the requested number of items to return. The service may return a different number of items than requested.
      schema:
        maximum: 100
        minimum: 0
        type: integer
        format: int32
        default: 25
    orderbyQueryParam:
      name: orderby
      in: query
      description: Sort order for pagination. Indicates the fields and direction to use for sorting in priority order.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        default: "[\"-updated\"]"
    propertyQueryParam:
      name: property
      in: query
      description: Property matching expression for filtering paginated results. Indicates the comparison expression that items must match in order to be returned.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    algorithmQueryParam:
      name: algorithm
      in: query
      description: The identifier of the algorithm type
      schema:
        type: string
    engineIdPathParam:
      name: engineId
      in: path
      description: The identifier of the Sensei Engine
      required: true
      schema:
        type: string
    mlInstanceIdPathParam:
      name: mlInstanceId
      in: path
      description: The identifier of the Sensei ML instance
      required: true
      schema:
        type: string
    experimentIdPathParam:
      name: experimentId
      in: path
      description: The identifier of the experiment
      required: true
      schema:
        type: string
    experimentRunIdPathParam:
      name: experimentRunId
      in: path
      description: The identifier of the experiment run
      required: true
      schema:
        type: string
    experimentTemplateIdPathParam:
      name: experimentTemplateId
      in: path
      description: The identifier of the experimentTemplate
      required: true
      schema:
        type: string
    modelIdPathParam:
      name: modelId
      in: path
      description: The identifier of the trained or published Model
      required: true
      schema:
        type: string
    modelTranscodingIdPathParam:
      name: modelTranscodingId
      in: path
      description: The identifier of the transcoded Model artifact
      required: true
      schema:
        type: string
    mlServiceIdPathParam:
      name: serviceId
      in: path
      description: The identifier of the Sensei Service
      required: true
      schema:
        type: string
    insightIdPathParam:
      name: insightId
      in: path
      description: The identifier of the Sensei Insight
      required: true
      schema:
        type: string
    gwImsOrgIdHeaderParam:
      name: x-gw-ims-org-id
      in: header
      description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
      required: true
      schema:
        type: string
    ifMatchHeaderParam:
      name: If-Match
      in: header
      description: Optional header field with ETag value provided by client
      schema:
        type: string
    authHeaderParam:
      name: Authorization
      in: header
      description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \" (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
      required: true
      schema:
        type: string
x-original-swagger-version: "2.0"
