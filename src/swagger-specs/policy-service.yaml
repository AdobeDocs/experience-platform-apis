swagger: '2.0'
info:
  version: '1.0'
  title: Policy Service API
  description: >-
    Adobe Experience Platform Data Governance simplifies and streamlines the process of categorizing data and creating data usage policies. Once data labels have been applied and data usage policies are in place, marketing actions can be evaluated to ensure the correct use of data.
    
    
    The Policy Service API is used to programmatically manage data usage labels, policies, and marketing actions. The API also provides endpoints to evaluate marketing actions against specific data usage labels to test for policy violations.

    - Related documentation:
      - [Data Governance documentation](http://www.adobe.com/go/data-governance-overview-en)

    - Visualize API calls with Postman (a free, third-party software):
      - [Policy Service API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Policy%20Service%20API.postman_collection.json)
      - [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
      - [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    - API paths:
      - PLATFORM Gateway URL: https://<span>platform.adobe.io/
      - Base path for this API: /data/foundation/dulepolicy
      - Example of a complete path: https://<span>platform.adobe.io/data/foundation/dulepolicy/labels/custom

    - Required headers:
      - All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      - All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
      - All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

basePath: /data/foundation/dulePolicy
host: platform.adobe.io
tags:
  - name: Labels
    description: Data usage labels allow you to categorize datasets and fields according to usage policies that apply to that data.
  - name: Policies
    description: Data usage policies are rules that describe the kinds of marketing actions that are allowed or not allowed to be performed on data within Adobe Experience Platform.
  - name: Enabled core policies
    description: Unless explicitly indicated otherwise, only enabled policies participate in evaluation. The Policy Service API maintains a list of enabled core policies for your organization that you can manage using single API calls.
  - name: Marketing actions
    description: Marketing actions, in the context of Data Governance, are actions that an Experience Platform data consumer takes, for which there is a need to check for violations of data usage policies.
  - name: Policy evaluation
    description: The policy evaluation endpoints allow you to test a marketing action against specific labels or against datasets and fields to check for policy violations.

consumes:
  - application/json
produces:
  - application/json
paths:
  '/labels/core':
    get:
      summary: List core labels
      description: >-
        >**NOTE**: For more information on using this operation, see the [labels endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/labels.html) on Experience League.
      operationId: listCoreLabels
      tags:
        - Labels
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/propertyQuery'
        - $ref: '#/parameters/orderbyQuery'
        - $ref: '#/parameters/startQuery'
        - $ref: '#/parameters/limitQuery'
      responses:
        '200':
          description: A successful response returns a list of core labels.
          schema:
            $ref: '#/definitions/LabelsPage'
  '/labels/core/{LABEL_NAME}':
    get:
      summary: Retrieve a core label
      description: >-
        >**NOTE**: For more information on using this operation, see the [labels endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/labels.html) on Experience League.
      operationId: retrieveCoreLabel
      tags:
        - Labels
      parameters:
        - $ref: '#/parameters/coreLabelName'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: A successful response returns the details of the retrieved core label.
          schema:
            $ref: '#/definitions/LabelsResponse'
        '404':
          description: No core label was found for the given name.
          schema:
            $ref: '#/definitions/CoreNotFoundError'
  '/labels/custom':
    get:
      summary: List custom labels
      description: >-
        >**NOTE**: For more information on using this operation, see the [labels endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/labels.html) on Experience League.
      operationId: listCustomLabels
      tags:
        - Labels
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/propertyQuery'
        - $ref: '#/parameters/orderbyQuery'
        - $ref: '#/parameters/startQuery'
        - $ref: '#/parameters/limitQuery'
      responses:
        '200':
          description: A list of custom labels.
          schema:
            $ref: '#/definitions/CustomLabelsPage'
  '/labels/custom/{LABEL_NAME}':
    get:
      summary: Retrieve a custom label
      description: >-
        >**NOTE**: For more information on using this operation, see the [labels endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/labels.html) on Experience League.
      operationId: retrieveCustomLabel
      tags:
        - Labels
      parameters:
        - $ref: '#/parameters/customLabelName'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: A successful response returns the details of the retrieved custom label.
          schema:
            $ref: '#/definitions/CustomLabelsResponse'
        '404':
          description: No custom label was found for the given name.
          schema:
            $ref: '#/definitions/CustomNotFoundError'
    put:
      summary: Create or update a custom label
      description: >-
        You can use this endpoint to create or update a custom label. If the label with the given name does not exist, the custom label will be created. If the label with the given name does exist, the custom label will be updated.


        >**NOTE**: For more information on using this operation, see the [labels endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/labels.html) on Experience League.
      operationId: createUpdateCustomLabel
      tags:
        - Labels
      parameters:
        - $ref: '#/parameters/customLabelName'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/CustomLabelRequest'
      responses:
        '200':
          description: If the label name indicated by the request path exists in the system, the existing entity is updated. A successful response returns details of the label, indicating the label was successfully updated.
          schema:
            $ref: '#/definitions/CustomLabelsResponse'
        '201':
          description: If the label name indicated by the request path does not exist in the system, a new entity is created. A successful response returns details of the label, indicating the label was successfully created.
          schema:
            $ref: '#/definitions/CustomLabelsResponse'
        '400':
          description: >-
            There was an error regarding the fields sent in the request payload. This occurs if either of the required fields ("name" or "category") are missing or malformed.
          schema:
            $ref: '#/definitions/CreateLabelError'
  /policies/core:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/propertyQuery'
      - $ref: '#/parameters/orderbyQuery'
      - $ref: '#/parameters/startQuery'
      - $ref: '#/parameters/limitQuery'
      - $ref: '#/parameters/labelsQuery'
      - $ref: '#/parameters/marketingActionQuery'
    get:
      summary: List core policies
      operationId: listCorePolicies
      description: >-
        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      tags:
        - Policies
      responses:
        '200':
          description: A successful response returns all core policies.
          schema:
            $ref: '#/definitions/PoliciesPage'
  '/policies/core/{POLICY_ID}':
    parameters:
      - name: POLICY_ID
        in: path
        required: true
        description: The ID of the policy to be retrieved.
        type: string
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
    get:
      summary: Retrieve a core policy
      description: >-
        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      operationId: retrieveCorePolicy
      tags:
        - Policies
      responses:
        '200':
          description: A successful response returns the details of the retrieved policy.
          schema:
            $ref: '#/definitions/CorePolicyResponse'
        '404':
          description: No policy was found for the given ID.
          schema:
            $ref: '#/definitions/CorePolicyNotFound'
  /policies/custom:
    get:
      summary: List custom policies
      description: >-
        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      operationId: listCustomPolicies
      tags:
        - Policies
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/propertyQuery'
        - $ref: '#/parameters/orderbyQuery'
        - $ref: '#/parameters/startQuery'
        - $ref: '#/parameters/limitQuery'
        - $ref: '#/parameters/labelsQuery'
        - $ref: '#/parameters/marketingActionQuery'
      responses:
        '200':
          description: A successful response returns a list of custom policies.
          schema:
            $ref: '#/definitions/CustomPoliciesPage'
    post:
      summary: Create a custom policy
      description: >-
        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      operationId: createCustomPolicy
      tags:
        - Policies
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/contentType'
        - name: policy
          description: The custom policy to be created.
          required: true
          in: body
          schema:
            $ref: '#/definitions/PolicyRequest'
      responses:
        '201':
          description: A successful response returns the details of newly created policy.
          schema:
            $ref: '#/definitions/CustomPolicyResponse'
        '400':
          description: One or more of the required fields in the request body were either missing or malformed.
          schema:
            $ref: '#/definitions/CreatePolicyError'
  '/policies/custom/{POLICY_ID}':
    get:
      summary: Retrieve a custom policy
      description: >-
        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      operationId: retrieveCustomPolicy
      tags:
        - Policies
      parameters:
        - name: POLICY_ID
          in: path
          required: true
          description: The ID of the custom policy being retrieved.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: A successful response returns details of the retrieved custom policy.
          schema:
            $ref: '#/definitions/PolicyResponse'
        '404':
          description: No policy was found for the given ID.
          schema:
            $ref: '#/definitions/CustomPolicyNotFound'
    put:
      summary: Update a custom policy
      description: >-
        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      operationId: updateCustomPolicy
      tags:
        - Policies
      parameters:
        - name: POLICY_ID
          in: path
          required: true
          description: The ID of the policy being updated.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/contentType'
        - name: body
          description: 'The updated information for the policy, in its entirety.'
          required: true
          in: body
          schema:
            $ref: '#/definitions/PolicyRequest'
      responses:
        '200':
          description: A successful response returns details of the updated policy.
          schema:
            $ref: '#/definitions/PolicyResponse'
        '400':
          description: One or more of the required fields in the request body were either missing or malformed.
          schema:
            $ref: '#/definitions/CreatePolicyError'
        '404':
          description: No policy was found for the given ID.
          schema:
            $ref: '#/definitions/CustomPolicyNotFound'
    patch:
      summary: Update one or more attributes of a custom policy
      description: >-
        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      operationId: patchCustomPolicy
      tags:
        - Policies
      parameters:
        - name: POLICY_ID
          in: path
          required: true
          description: The ID of the policy being updated.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/contentType'
        - name: body
          description: Use JSON Patch to update a portion of a policy.
          required: true
          in: body
          schema:
            $ref: '#/definitions/PolicyPatchRequest'
      responses:
        '200':
          description: A successful response returns the details of updated policy.
          schema:
            $ref: '#/definitions/PolicyPatchResponse'
        '400':
          description: One or more of the required fields in the request body were either missing or malformed.
          schema:
            $ref: '#/definitions/CreatePolicyError'
        '404':
          description: No policy was found for the given ID.
          schema:
            $ref: '#/definitions/CustomPolicyNotFound'
    delete:
      summary: Delete a custom policy
      description: >-
        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      operationId: deleteCustomPolicy
      tags:
        - Policies
      parameters:
        - name: POLICY_ID
          in: path
          required: true
          description: The ID of the policy to be deleted.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: A successful response returns HTTP Status 200 (OK) with an empty body, indicating the entity was deleted.
        '404':
          description: No policy was found for the given ID.
          schema:
            $ref: '#/definitions/CustomPolicyNotFound'
  /marketingActions/core:
    get:
      summary: List core marketing actions
      description: >-
        >**NOTE**: For more information on using this operation, see the [marketing actions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/marketing-actions.html) on Experience League.
      operationId: listCoreMarketingActions
      tags:
        - Marketing actions
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/propertyQuery'
        - $ref: '#/parameters/orderbyQuery'
        - $ref: '#/parameters/startQuery'
        - $ref: '#/parameters/limitQuery'
      responses:
        '200':
          description: A successful response returns a list of core marketing actions.
          schema:
            $ref: '#/definitions/CoreMarketingActionsPage'
  '/marketingActions/core/{MARKETING_ACTION_NAME}':
    get:
      summary: Retrieve a core marketing action
      description: >-
        >**NOTE**: For more information on using this operation, see the [marketing actions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/marketing-actions.html) on Experience League.
      operationId: retrieveCoreMarketingAction
      tags:
        - Marketing actions
      parameters:
        - name: MARKETING_ACTION_NAME
          in: path
          required: true
          description: The name of the marketing action to be retrieved.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: A successful response returns the details of the retrieved marketing action.
          schema:
            $ref: '#/definitions/CoreMarketingActionResponse'
        '404':
          description: No marketing action was found for the given name.
          schema:
            $ref: '#/definitions/CoreMarketingActionNotFound'
  '/marketingActions/core/{MARKETING_ACTION_NAME}/constraints':
    get:
      summary: Evaluate a core marketing action based on data usage labels
      description: >-
        This call returns a set of constraints that would govern an attempt to perform the given marketing action on a hypothetical source of data containing specific data usage labels.
        
        
        You can also evaluate a marketing action based on the labels contained in an actual dataset in your data stores. See the POST method for this endpoint for more information.


        >**NOTE**: For more information on using this operation, see the [policy evaluation endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/evaluation.html) on Experience League.
      operationId: evaluateCoreMarketingActionUsingLabels
      tags:
        - Policy evaluation
      parameters:
        - name: MARKETING_ACTION_NAME
          in: path
          required: true
          description: The name of the marketing action to test data usage labels against.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/labelsConstraintsQuery'
        - $ref: '#/parameters/includeDraftConstraintsQuery'
      responses:
        '200':
          description: >-
            A successful response returns the constraints on attempting to perform this marketing action on data bearing the given set of data usage labels, including the set of policies that would be violated.
          schema:
            $ref: '#/definitions/CoreLabelsConstraints'
        '404':
          description: No marketing action was found for the given name.
          schema:
            $ref: '#/definitions/CoreMarketingActionNotFound'
    post:
      summary: Evaluate a core marketing action based on datasets and/or fields
      description: >-
        This call returns a set of constraints that would govern an attempt to perform the given marketing action on an existing data source in Platform. The source data (typically a dataset) is specified by the `entityType` and `entityId` of the elements in the request body. In the case of a dataset entity, a set of fields may also be specified in the `entityMeta` to indicate that only those fields from that dataset should be used in the evaluation. The returned constraints take the form of a set of policies that would be violated by attempting the marketing action on the dataset(s) and/or field(s).
        
        
        You can also evaluate a marketing action based on a defined set of usage labels instead of testing against an actual data source. See the GET method for this endpoint for more information.


        >**NOTE**: For more information on using this operation, see the [policy evaluation endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/evaluation.html) on Experience League.
      operationId: evaluateCoreMarketingActionUsingDatasets
      tags:
        - Policy evaluation
      parameters:
        - name: MARKETING_ACTION_NAME
          in: path
          required: true
          description: The name of the marketing action to test against datasets or fields.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/contentType'
        - $ref: '#/parameters/includeDraftConstraintsQuery'
        - name: body
          description: An array that lists the entities for which to retrieve labels. This can include dataset IDs and individual fields within those datasets.
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityLabelRequest'
      responses:
        '200':
          description: >-
            A successful response returns the constraints on attempting to perform this marketing action on the given set of datasets and/or fields, including the set of policies that would be violated.
          schema:
            $ref: '#/definitions/CoreDatasetConstraintResponse'
        '400':
          description: One or more of the required fields in the request body were either missing or malformed.
          schema:
            $ref: '#/definitions/MarketingActionConstraintsError'
        '404':
          description: No marketing action was found for the given name.
          schema:
            $ref: '#/definitions/CoreMarketingActionNotFound'
  /marketingActions/custom:
    get:
      summary: List custom marketing actions
      description: >-
        >**NOTE**: For more information on using this operation, see the [marketing actions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/marketing-actions.html) on Experience League.
      operationId: listCustomMarketingActions
      tags:
        - Marketing actions
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/propertyQuery'
        - $ref: '#/parameters/orderbyQuery'
        - $ref: '#/parameters/startQuery'
        - $ref: '#/parameters/limitQuery'
      responses:
        '200':
          description: A successful response returns a list of custom marketing actions.
          schema:
            $ref: '#/definitions/MarketingActionsPageCustom'
  '/marketingActions/custom/{MARKETING_ACTION_NAME}':
    get:
      summary: Retrieve a custom marketing action
      description: >-
        >**NOTE**: For more information on using this operation, see the [marketing actions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/marketing-actions.html) on Experience League.
      operationId: retrieveCustomMarketingAction
      tags:
        - Marketing actions
      parameters:
        - name: MARKETING_ACTION_NAME
          in: path
          required: true
          description: The name of the marketing action to be retrieved.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: A successful response returns the details of the marketing action.
          schema:
            $ref: '#/definitions/MarketingActionResponseCustom'
        '404':
          description: No marketing action was found for the given name.
          schema:
            $ref: '#/definitions/CustomMarketingActionNotFound'
    put:
      summary: Create or update a custom marketing action
      description: >-
        You can use this endpoint to create or update a custom marketing action. If the marketing action with the given name does not exist, it will create a new marketing action. If the marketing action with the given name exists, it will update the existing marketing action.

        >**NOTE**: For more information on using this operation, see the [marketing actions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/marketing-actions.html) on Experience League.
      operationId: createOrUpdateCustomMarketingAction
      tags:
        - Marketing actions
      parameters:
        - name: MARKETING_ACTION_NAME
          in: path
          required: true
          description: The name of the marketing action to be created or updated.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/contentType'
        - name: body
          description: Details for the new or updated marketing action.
          required: true
          in: body
          schema:
            $ref: '#/definitions/MarketingActionRequest'
      responses:
        '200':
          description: If the marketing action name indicated by the request path exists in the system, the existing entity is updated. A successful response returns details of the marketing action, indicating the entity was successfully updated.
          schema:
            $ref: '#/definitions/MarketingActionResponse'
        '201':
          description: If the marketing action name indicated by the request path does not exist in the system, a new entity is created. A successful response returns details of the marketing action, indicating the entity was successfully created.
          schema:
            $ref: '#/definitions/MarketingActionResponse'
        '400':
          description: >-
             There was an error regarding the fields sent in the request payload. This occurs if the required "name" field is missing or malformed.
          schema:
            $ref: '#/definitions/CreateMarketingActionError'
    delete:
      summary: Delete a custom marketing action
      description: >-
        >**NOTE**: For more information on using this operation, see the [marketing actions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/marketing-actions.html) on Experience League.
      operationId: deleteCustomMarketingAction
      tags:
        - Marketing actions
      parameters:
        - name: MARKETING_ACTION_NAME
          in: path
          required: true
          description: The name of the marketing action to be deleted.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: A successful response returns an empty body, indicating the entity was deleted.
        '404':
          description: No marketing action was found for the given name.
          schema:
            $ref: '#/definitions/CustomMarketingActionNotFound'
  '/marketingActions/custom/{MARKETING_ACTION_NAME}/constraints':
    get:
      summary: Evaluate a custom marketing action based on data usage labels
      description: >-
        This call returns a set of constraints that would govern an attempt to perform the given marketing action on a hypothetical source of data containing specific data usage labels.
        
        
        You can also evaluate a marketing action based on the labels contained in an actual dataset in your data stores. See the POST method for this endpoint for more information.


        >**NOTE**: For more information on using this operation, see the [policy evaluation endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/evaluation.html) on Experience League.
      operationId: evaluateCustomMarketingActionUsingLabels
      tags:
        - Policy evaluation
      parameters:
        - name: MARKETING_ACTION_NAME
          in: path
          required: true
          description: The name of the marketing action to test data usage labels against.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/labelsConstraintsQuery'
        - $ref: '#/parameters/includeDraftConstraintsQuery'
      responses:
        '200':
          description: >-
            A successful response returns the constraints on attempting to perform this marketing action on data bearing the given set of data usage labels, including the set of policies that would be violated.
          schema:
            $ref: '#/definitions/CustomLabelsConstraints'
        '404':
          description: No marketing action was found for the given name.
          schema:
            $ref: '#/definitions/CustomMarketingActionNotFound'
    post:
      summary: Evaluate a custom marketing action based on datasets and/or fields
      description: >-
        This call returns a set of constraints that would govern an attempt to perform the given marketing action on an existing data source in Platform. The source data (typically a dataset) is specified by the "entityType" and "entityId" of the elements in the request body. In the case of a dataset entity, a set of fields may also be specified in the "entityMeta" to indicate that only those fields from that dataset should be used in the evaluation. The returned constraints take the form of a set of policies that would be violated by attempting the marketing action on the dataset(s) and/or field(s).
        
        
        You can also evaluate a marketing action based on a defined set of usage labels instead of testing against an actual data source. See the GET method for this endpoint for more information.


        >**NOTE**: For more information on using this operation, see the [policy evaluation endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/evaluation.html) on Experience League.
      operationId: evaluateCustomMarketingActionUsingDatasets
      tags:
        - Policy evaluation
      parameters:
        - name: MARKETING_ACTION_NAME
          in: path
          required: true
          description: The name of the marketing action to test against datasets or fields.
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/contentType'
        - $ref: '#/parameters/includeDraftConstraintsQuery'
        - name: body
          description: An array that lists the entities for which to retrieve labels. This can include dataset IDs and individual fields within those datasets.
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityLabelRequest'
      responses:
        '200':
          description: >-
            A successful response returns the constraints on attempting to perform this marketing action on the given set of datasets and/or fields, including the set of policies that would be violated.
          schema:
            $ref: '#/definitions/CustomDatasetConstraintResponse'
        '400':
          description: A bad request; see response body for details
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No marketing action was found for the given name
          schema:
            $ref: '#/definitions/Error'
  '/bulk-eval':
    post:
      summary: Run multiple policy evaluation jobs in bulk
      description: This endpoint allows you to run a list of policy evaluations in bulk, so you don't have to call the **../{MARKETING_ACTION_NAME}/constraints** endpoint multiple times.
      operationId: bulkEval
      tags:
        - Policy evaluation
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: body
          description: >-
            An array of policy evaluation jobs to perform in bulk. Each job must evaluate based on one of the following:
            
            * A set of labels
            
            * A list of datasets and/or fields within those datasets
            
            
            To evaluate a marketing action based on both labels and datasets, you must include two separate jobs for that action: one that includes a **labels** array, and one that contains an **entityList** array.

            >**NOTE**: For more information on using this operation, see the [policy evaluation endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/evaluation.html#bulk) on Experience League.
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/BulkEvalRequest'
            example:
              - evalRef: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting/constraints
                includeDraft: false
                labels: [C1, C2, C3]
              - evalRef: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting/constraints
                includeDraft: false
                entityList:
                  - entityType: dataSet
                    entityId: 5b67f4dd9f6e710000ea9da4
                    entityMeta:
                      fields:
                        - address
      responses:
        '200':
          description: 'A successful response returns an array of evaluation results; one for each policy evaluation job sent in the request.'
          schema:
            type: array
            items:
              $ref: '#/definitions/BulkEvalResponse'
            example:
              - status: 200
                body:
                  timestamp: 1595866566165
                  clientId: "{CLIENT_ID}"
                  userId: "{USER_ID}"
                  imsOrg: "{IMS_ORG}"
                  sandboxName: prod
                  marketingActionRef: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting
                  duleLabels:
                    - C1
                    - C2
                    - C3
                  violatedPolicies: []
              - status: 200
                body:
                  timestamp: 1595866566165
                  clientId: "{CLIENT_ID}"
                  userId: "{USER_ID}"
                  imsOrg: "{IMS_ORG}"
                  sandboxName: prod
                  marketingActionRef: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting
                  duleLabels:
                    - C1
                    - C2
                  discoveredLabels:
                    - entityType: dataset
                      entityId: 5b67f4dd9f6e710000ea9da4
                      dataSetLabels:
                        connection:
                          labels: []
                        dataset:
                          labels:
                            - C1
                            - C2
                        fields: []
                  violatedPolicies:
                    - name: 'Email Policy'
                      status: 'DRAFT'
                      marketingActionRefs:
                        - 'https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting'
                      description: Conditions under which we won't send marketing-based email
                      deny:
                        operator: 'AND'
                        operands: 
                            - label: 'C1'
                            - label: 'C3'
                      id: '76131228-7654-11e8-adc0-fa7ae01bbebc'
                      imsOrg: '{IMS_ORG}'
                      created: 1529696681413
                      createdClient: '{CLIENT_ID}'
                      createdUser: '{USER_ID}'
                      updated: 1529697651972
                      updatedClient: '{CLIENT_ID}'
                      updatedUser: '{USER_ID}'
                      _links:
                        self:
                          href: './76131228-7654-11e8-adc0-fa7ae01bbebc'
                  
        '400':
          description: One or more of the required fields in the request body were either missing or malformed. This error typically occurs when one of the evaluation jobs in the payload contains both a **labels** array and an **entityList** array.
          schema:
            $ref: '#/definitions/MarketingActionConstraintsError'
  /enabledCorePolicies:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
    get:
      summary: List all enabled core policies
      operationId: listEnabledCorePolicies
      description: >-
        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      tags:
        - Enabled core policies
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: A list of enabled core policy IDs
          schema:
            $ref: '#/definitions/EnabledCorePoliciesResponse'
    put:
      summary: Create or update the list of enabled core policies
      description: >-
        You can use this endpoint to create or update the list of enabled core policies.


        >**NOTE**: For more information on using this operation, see the [policies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html) on Experience League.
      operationId: createOrUpdateEnabledCorePolicies
      tags:
        - Enabled core policies
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: body
          description: List of core policy IDs.
          required: true
          in: body
          schema:
            $ref: '#/definitions/EnabledCorePoliciesRequest'
      responses:
        '200':
          description: List of enabled core policies was successfully updated
          schema:
            $ref: '#/definitions/EnabledCorePoliciesResponse'
        '400':
          description: >-
            The request payload was malformed, or one of the provided policy IDs were not found.
          schema:
            $ref: '#/definitions/EnabledCorePoliciesError'
        '409':
          description: >-
            This policy update could not be completed because it would be violated by an existing lineage of entities.
          schema:
            $ref: '#/definitions/EnableCorePolicyViolation'
parameters:
  x-api-key:
    name: x-api-key
    description: 'The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).'
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: 'The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).'
    required: true
    type: string
    in: header
  x-sandbox-name:
    name: x-sandbox-name
    description: 'The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information.'
    required: true
    type: string
    in: header
  authorization:
    name: Authorization
    description: 'The access token which can be copied from your Experience Platform integration, prefixed with "Bearer ". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).'
    required: true
    type: string
    in: header
  contentType:
    name: Content-Type
    description: The type of content being sent in the body of the request. In POST, PUT, or PATCH requests to the Policy Service API, the value must be set to `application/json`.
    type: string
    required: true
    in: header
  coreLabelName:
    name: LABEL_NAME
    in: path
    required: true
    description: The name of the core label.
    type: string
  customLabelName:
    name: LABEL_NAME
    in: path
    required: true
    description: The name of the custom label.
    type: string
  propertyQuery:
    name: property
    description: >-
      Filters responses based on whether a specific property exists, or whose value passes a conditional expression (e.g. `?property=name==C1`). Only the `name` property is supported for core resources. For custom resources, additional supported property values include `status`, `created`, `createdClient`, `createdUser`, `updated`, `updatedClient`, and `updatedUser`. 
    required: false
    type: string
    in: query
  orderbyQuery:
    name: orderby
    description: >-
      A comma-separated list of properties by which the returned list of
      resources will be sorted.
    required: false
    type: array
    items:
      type: string
    in: query
  startQuery:
    name: start
    description: >-
      Indicates the pagination value for the returned list. This value should be obtained from a previous call's `_page.next` property. Should be omitted for a first page of results. 
    type: string
    in: query
  limitQuery:
    name: limit
    description: >-
      A positive integer, indicating the number of results to limit the response to.
    required: false
    type: integer
    in: query
  labelsQuery:
    name: duleLabels
    description: >-
      A comma-separated list of data usage label names. Using this parameter returns only those policies whose `deny` expression references any of the labels in the list.
    required: false
    type: array
    collectionFormat: csv
    items:
      type: string
    in: query
  marketingActionQuery:
    name: marketingAction
    description: >-
      Restricts returned policies to those that reference a given marketing action ID.
    required: false
    type: string
    in: query
  labelsConstraintsQuery:
    name: duleLabels
    description: >-
      A comma-separated list of data usage labels that would be present on data that you want to test for policy violations.
    required: true
    type: array
    collectionFormat: csv
    items:
      type: string
    in: query
  dataSetIdConstraintsQuery:
    name: dataSetId
    description: >-
      The ID of a dataSet to check if it can be used for the given marketing action. Data usage labels from this dataSet are collected, and then checked against the set of policies for violations.  Use of this query parameter is mutually exclusive with using the `duleLabels` parameter.
    required: false
    type: string
    in: query
  fieldsConstraintsQuery:
    name: fields
    description: >-
      A comma-separated list of field names within the dataSet specified by dataSetId.  Indicates that the caller wishes to consider only these fields from the dataSet, and thus any fields not included in this list will not have their data usage labels included.  All dataSet- and connection-level labels are still included.  Use of this query parameter must be accompanied by the `dataSetId` parameter.
    required: false
    type: array
    collectionFormat: csv
    items:
      type: string
    in: query
  includeDraftConstraintsQuery:
    name: includeDraft
    description: >-
      If true, the system checks for policy violations among policies with `DRAFT` status as well as `ENABLED` status. Otherwise, only `ENABLED` policies are checked.
    required: false
    type: boolean
    default: false
    in: query
definitions:
  PagingProperties:
    properties:
      _page:
        type: object
        description: Contains a `count` property for the number of resources returned.
        properties:
          count:
            type: integer
            description: The number of resources returned.
            example: 1
  PagingPropertiesCoreLabels:
    allOf:
      - $ref: '#/definitions/PagingProperties'
      - $ref: '#/definitions/_linksPagingCoreLabels'
  PagingPropertiesCustomLabels:
    allOf:
      - $ref: '#/definitions/PagingProperties'
      - $ref: '#/definitions/_linksPagingCustomLabels'
  PagingPropertiesCorePolicies:
    allOf:
      - $ref: '#/definitions/PagingProperties'
      - $ref: '#/definitions/_linksPagingCorePolicies'
  PagingPropertiesCustomPolicies:
    allOf:
      - $ref: '#/definitions/PagingProperties'
      - $ref: '#/definitions/_linksPagingCustomPolicies'
  ServiceProperties:
    properties:
      imsOrg:
        description: >-
          The ID of the IMS Organization which maintains this resource. If the resource is a core resource (defined by Adobe), this value is set to "core".
        type: string
        example: "{IMS_ORG}"
      sandboxName:
        description: >-
          The name of the Platform sandbox that contains the resource.
        type: string
        example: prod
      created:
        description: A timestamp in milliseconds when this resource was originally created.
        type: integer
        format: int64
        example: 1529696681413
      createdClient:
        description: The ID of the client that originally created this resource.
        type: string
        example: "{CLIENT_ID}"
      createdUser:
        description: The user that originally created this resource.
        type: string
        example: "{USER_ID}"
      updated:
        description: A timestamp when this resource was last updated.
        type: integer
        format: int64
        example: 1529697651972
      updatedClient:
        description: The ID of the client that last updated this resource.
        type: string
        example: "{CLIENT_ID}"
      updatedUser:
        description: The ID of the user that last updated this resource.
        type: string
        example: "{USER_ID}"
    allOf:
      - $ref: '#/definitions/_links'
  _links:
    type: object
    properties:
      _links:
        type: object
        description: >-
          Contains the URI reference that clients may use to obtain this resource.
        properties:
          self:
            type: object
            properties:
              href:
                type: string
                description: The URI reference that clients may use to obtain this resource. Typically this URL ends with the `name` or `id` property of the resource.
                format: uri
                example: https://platform.adobe.io:443/data/foundation/dulepolicy/policies/core/corepolicy_0003
  _linksMarketingAction:
    allOf:
      - $ref: '#/definitions/_links'
    example:
      _links:
        self:
          href: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/exportToThirdParty
  _linksPaging:
    type: object
    properties:
      _links:
        type: object
        description: >-
          Contains a templated URL for clients to obtain this resource.
        properties:
          _page:
            type: object
            properties:
              href:
                type: string
                description: The URL template.
                format: uri
              templated:
                type: string
                description: When present and set to `true`, indicates that this is a templated URL.
  _linksPagingCoreLabels:
    allOf:
      - $ref: '#/definitions/_linksPaging'
    example:
      _links:
        _page:
          href: https://platform.adobe.io:443/data/foundation/dulepolicy/labels/core?{?limit,start,property}
          templated: true
  _linksPagingCustomLabels:
    allOf:
      - $ref: '#/definitions/_linksPaging'
    example:
      _links:
        _page:
          href: https://platform.adobe.io:443/data/foundation/dulepolicy/labels/custom?{?limit,start,property}
          templated: true
  _linksPagingCorePolicies:
    allOf:
      - $ref: '#/definitions/_linksPaging'
    example:
      _links:
        _page:
          href: https://platform.adobe.io:443/data/foundation/dulepolicy/policies/core?{?limit,start,property}
          templated: true
  _linksPagingCustomPolicies:
    allOf:
      - $ref: '#/definitions/_linksPaging'
    example:
      _links:
        _page:
          href: https://platform.adobe.io:443/data/foundation/dulepolicy/policies/custom?{?limit,start,property}
  _linksPagingCoreMarketingActions:
    allOf:
      - $ref: '#/definitions/_linksPaging'
    example:
      _links:
        _page:
          href: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core?{?limit,start,property}
  _linksPagingCustomMarketingActions:
    allOf:
      - $ref: '#/definitions/_linksPaging'
    example:
      _links:
        _page:
          href: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/custom?{?limit,start,property}
  PolicyExpression:
    description: >-
      A boolean expression to be evaluated over the presence of data usage labels, referred to as a "policy expression". Note that a policy expression **must** consist of **either** a label **or** an operator and operands. Each operand in turn is itself a policy expression. You cannot specify both a label and an operator/operand in combination. See the [Policy Service API guide](https://experienceleague.adobe.com/docs/experience-platform/data-governance/api/policies.html?lang=en#create-policy) for more details on how to configure this property.
    properties:
      label:
        description: The name of a single data usage label that applies to the policy.
        type: string
        example: C1
      operator:
        description: >-
          Indicates the conditional relationship between the labels provided in the sibling operands array. Accepted values are:
            
            - `OR`: The expression resolves to true if any of the labels in the operands array are present.
            - `AND`: The expression only resolves to true if all of the labels in the operands array are present.
        type: string
        example: AND
        enum:
          - AND
          - OR
      operands:
        description: An array of objects, with each object representing either a single `label` or an additional pair of `operator` and `operands` properties. The presence of the labels and/or operations in an `operands` array resolves to true or false based on the value of its sibling operator property.
        type: array
        example:
          - label: C1
          - label: C3
        items:
          $ref: '#/definitions/PolicyExpression'
    example:
      operator: AND
      operands:
        - label: C1
        - operator: OR
          operands:
            - label: C3
            - label: C7
  PolicyRequest:
    allOf:
      - $ref: '#/definitions/PolicyBody'
    required:
      - name
      - status
      - marketingActionRefs
      - deny
  PolicyBody:
    properties:
      name:
        description: The name of the policy
        type: string
        example: Email Policy
      status:
        description: The status of the policy
        type: string
        enum:
          - DRAFT
          - ENABLED
          - DISABLED
        example: ENABLED
      marketingActionRefs:
        description: List of marketing action URI references to which this policy applies.
        type: array
        example:
          - https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting
        items:
          type: string
          format: uri
      description:
        description: A description of what this policy enforces. Specifically, the reasoning behind the denial of these marketing actions in the presence of the data usage labels.
        type: string
        example: Conditions under which we won't send marketing-based email
      deny:
        $ref: '#/definitions/PolicyExpression'
  CorePolicyResponse:
    allOf:
      - $ref: '#/definitions/PolicyBody'
      - $ref: '#/definitions/_links'
      - example:
          name: 'Restrict email targeting'
          status: ENABLED
          marketingActionRefs:
              - https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting
          description:
              Restrict use of data labeled C4 OR C5 for email targeting.
          deny:
            operator: OR
            operands:
              - label: C4
              - label: C5
          _links:
            self:
              href: https://platform-stage.adobe.io:443/data/foundation/dulepolicy/policies/core/corepolicy_0003
      - properties:
          id:
            type: string
            example: corepolicy_0003
            description: The ID of the core policy.
  CustomPolicyRequest:
    allOf:
      - $ref: '#/definitions/PolicyBody'
    example:
      name: Export Data to Third Party
      status: DRAFT
      marketingActionRefs:
      - https://platform.adobe.io/data/foundation/dulepolicy/marketingActions/custom/exportToThirdParty
      description: Conditions under which data cannot be exported to a third party
      deny:
        operator: OR
        operands:
        - label: C1
        - operator: AND
          operands:
          - label: C3
          - label: C7
  PolicyPatchResponse:
    allOf:
      - $ref: '#/definitions/PolicyResponse'
      - properties:
          name:
            example: Email Policy 001
  PolicyResponse:
    allOf:
      - type: object
        properties:
          id:
            description: The unique ID for this policy resource, as assigned by the service.
            type: string
            example: 76131228-7654-11e8-adc0-fa7ae01bbebc
      - $ref: '#/definitions/PolicyBody'
      - $ref: '#/definitions/ServiceProperties'
  PolicyResponseCustomEval:
    allOf:
      - $ref: '#/definitions/PolicyResponse'
      - properties:
          marketingActionRefs:
            example:
              - https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/custom/analyticsDB
          _links:
            properties:
              self:
                properties:
                  href:
                    example: https://platform.adobe.io:443/data/foundation/dulepolicy/policies/custom/emailPolicy
  CustomPolicyResponse:
    allOf:
      - $ref: '#/definitions/CustomPolicyRequest'
      - $ref: '#/definitions/PolicyResponseCustomEval'
  PoliciesPage:
    allOf:
      - $ref: '#/definitions/PagingPropertiesCorePolicies'
      - type: object
        properties:
          children:
            type: array
            items:
              $ref: '#/definitions/CorePolicyResponse'
    properties:
      _links:
        properties:
          _page:
            properties:
              href:
                example: https://platform.adobe.io:443/data/foundation/dulepolicy/policies/core?{?limit,start,property}
  CustomPoliciesPage:
    allOf:
      - $ref: '#/definitions/PagingPropertiesCustomPolicies'
      - type: object
        properties:
          children:
            type: array
            items:
              $ref: '#/definitions/CustomPolicyResponse'
  MarketingActionRequest:
    required:
      - name
    properties:
      name:
        description: The name of the marketing action, which also acts as its unique identifier.
        type: string
        example: analyticsDB
      description:
        description: A description for the marketing action.
        type: string
        example: Push data to external database for analytics.
  CoreMarketingActionResponse:
    properties:
      name:
        description: The name of the marketing action, which also acts as a unique identifier.
        type: string
        example: exportToThirdParty
      friendlyName:
        description: A friendly display name for for the marketing action.
        type: string
        example: Export to Third Party
    allOf:
      - $ref: '#/definitions/_linksMarketingAction'
  MarketingActionResponse:
    allOf:
      - $ref: '#/definitions/MarketingActionRequest'
      - $ref: '#/definitions/ServiceProperties'
  MarketingActionResponseCustom:
    allOf:
      - $ref: '#/definitions/MarketingActionResponse'
      - properties:
          _links:
            properties:
              self:
                properties:
                  href:
                    example: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/custom/analyticsDB
  DuleLabelsList:
    required:
      - labels
    properties:
      labels:
        description: >-
          A list of data usage labels discovered from the entity.
        type: array
        items:
          type: string
        example:
          - C1
          - C3
          - C7
  FieldsLabels:
    allOf:
      - type: object
        required:
          - path
        properties:
          path:
            description: The path to the field in the dataset's schema.
            type: string
            example: /emailAddress
      - $ref: '#/definitions/DuleLabelsList'
    example:
      path: /emailAddress
      labels:
        - C7
  CoreMarketingActionsPage:
    allOf:
      - $ref: '#/definitions/PagingProperties'
      - $ref: '#/definitions/_linksPagingCoreMarketingActions'
      - type: object
        properties:
          children:
            type: array
            description: Contains the returned marketing actions.
            items:
              $ref: '#/definitions/CoreMarketingActionResponse'
  MarketingActionsPage:
    allOf:
      - $ref: '#/definitions/PagingProperties'
      - type: object
        properties:
          children:
            type: array
            description: Contains the returned core marketing actions.
            items:
              $ref: '#/definitions/MarketingActionResponse'
  MarketingActionsPageCustom:
    allOf:
      - $ref: '#/definitions/PagingProperties'
      - type: object
        properties:
          children:
            type: array
            description: Contains the returned custom marketing actions.
            items:
              $ref: '#/definitions/MarketingActionResponseCustom'
  DataSetLabels:
    required:
      - connection
      - dataSet
      - fields
    properties:
      connection:
        allOf:
          - $ref: '#/definitions/DuleLabelsList'
        description: Connection-level fields discovered from the dataset.
        example:
          - C1
      dataSet:
        allOf:
          - $ref: '#/definitions/DuleLabelsList'
        description: Dataset-level fields discovered from the dataset.
        example:
          - C1
          - C3
      fields:
        type: array
        description: An array listing the paths to individual fields in the dataset and the labels that were discovered from them.
        items:
          $ref: '#/definitions/FieldsLabels'
        example:
          - path: /emailAddress
            labels:
              - C1
              - C3
              - C7
          - path: /fullName
            labels:
              - C1
              - C3
  DiscoveredLabels:
    allOf:
      - $ref: '#/definitions/EntityTypeAndId'
      - type: object
        properties:
          dataSetLabels:
            $ref: '#/definitions/DataSetLabels'
  MarketingActionConstraints:
    properties:
      timestamp:
        description: A timestamp when the response was generated.
        type: integer
        format: int64
        example: 1529699072556
      clientId:
        description: The ID of the client that requested the evaluation.
        type: string
        example: "{CLIENT_ID}"
      userId:
        description: The ID the user that requested the evaluation.
        type: string
        example: "{USER_ID}"
      imsOrg:
        description: The ID of the IMS Org that generated the evaluation.
        type: string
        example: "{IMS_ORG}"
      sandboxName:
        description: The name of the sandbox that the evaluation took place in.
        type: string
        example: "prod"
      marketingActionRef:
        description: The marketing action to which the evaluation applies.
        type: string
        format: uri
      duleLabels:
        description: >-
          List of data usage labels either specified in request (if using the GET method) or discovered from a provided dataset ID and optional fields (if using the POST method).
        type: array
        example:
          - C1
          - C3
        items:
          type: string
  CoreMarketingActionConstraints:
    allOf:
      - $ref: '#/definitions/MarketingActionConstraints'
      - properties:
          marketingActionRef:
            example: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting
  CustomMarketingActionConstraints:
    allOf:
      - $ref: '#/definitions/MarketingActionConstraints'
      - properties:
          marketingActionRef:
            example: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/custom/analyticsDB
  LabelsConstraints:
    properties:
      violatedPolicies:
        description: >-
          The list of policies that would be violated by attempting the given marketing action in the presence of the given set of data usage labels
        type: array
        items:
          $ref: '#/definitions/PolicyResponse'
  LabelsConstraintsCustom:
    properties:
      violatedPolicies:
        description: >-
          The list of policies that would be violated by attempting the given marketing action in the presence of the given set of data usage labels
        type: array
        items:
          $ref: '#/definitions/PolicyResponseCustomEval'
  CustomLabelsConstraints:
    allOf:
      - $ref: '#/definitions/CustomMarketingActionConstraints'
      - $ref: '#/definitions/LabelsConstraintsCustom'
  CoreLabelsConstraints:
    allOf:
      - $ref: '#/definitions/CoreMarketingActionConstraints'
      - $ref: '#/definitions/LabelsConstraints'
  DatasetConstraints:
    properties:
      discoveredLabels:
        description: The list of data usage labels discovered from the dataset or fields. 
        type: array
        items:
          $ref: '#/definitions/DiscoveredLabels'
      violatedPolicies:
        description: >-
          The list of policies that would be violated by attempting the given marketing action in the presence of the given set of data usage labels
        type: array
        items:
          $ref: '#/definitions/PolicyResponse'
  CustomDatasetConstraints:
    allOf:
      - $ref: '#/definitions/DatasetConstraints'
      - properties:
          violatedPolicies:
            items:
              $ref: '#/definitions/CustomPolicyResponse'
          marketingActionRef:
            example: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/custom/analyticsDB
  CoreDatasetConstraintResponse:
    allOf:
      - $ref: '#/definitions/CoreMarketingActionConstraints'
      - $ref: '#/definitions/CustomDatasetConstraints'
      - properties:
          marketingActionRef:
            example: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting
          duleLabels:
            example:
              - C1
              - C3
              - C7
  CustomDatasetConstraintResponse:
    allOf:
      - $ref: '#/definitions/CustomMarketingActionConstraints'
      - $ref: '#/definitions/CustomDatasetConstraints'
      - properties:
          marketingActionRef:
            example: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/custom/analyticsDB
          duleLabels:
            example:
              - C1
              - C3
              - C7
  EntityTypeAndId:
    required:
      - entityType
      - entityId
    properties:
      entityType:
        description: >-
          The type of entity on which to discover labels. Currently only `dataSet` is supported.
        type: string
        enum:
          - dataSet
        example: dataSet
      entityId:
        description: The ID of the dataset.
        type: string
        example: 5b1e3c867e6d2600003d5b49
  BulkEntityLabelRequest:
    type: array
    items:
      $ref: '#/definitions/EntityLabelRequest'
    example:
      - entityType: dataSet
        entityId: 5b1e3c867e6d2600003d5b49
        entityMeta:
          fields:
            - emailAddress
            - fullName
      - entityType: dataSet
        entityId: 5b67f4dd9f6e710000ea9da4
        entityMeta:
          fields:
            - ECID
  EntityLabelRequest:
    allOf:
      - $ref: '#/definitions/EntityTypeAndId'
      - type: object
        properties:
          entityMeta:
            type: object
            description: Provides additional metadata about the dataset entity. You can use this field to list optional fields to run the evaluation on.
            properties:
              fields:
                type: array
                description: A list of optional fields to run the evaluation on.
                items:
                  type: string
                example: [emailAddress, fullName]
  PolicyPatchRequest:
    allOf:
      - $ref: '#/definitions/PatchDocument'
    example:
      op: "replace"
      path: "/name"
      value: "Email Policy 001"
  PatchDocument:
    description: A JSON Patch document as defined by RFC 6902. See the [JSON Patch specification](https://datatracker.ietf.org/doc/html/rfc6902) for more information.
    required:
      - op
      - path
    properties:
      op:
        type: string
        description: The operation to be performed.
        enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
      path:
        type: string
        description: A JSON Pointer path to the resource field being updated.
      value:
        type: object
        description: The value to be used in the context of the patch operation.
  EnabledCorePoliciesError:
    allOf:
      - $ref: '#/definitions/BadRequestError'
      - properties:
          detail:
            example: Policy corepolicy_12345 not found
  CustomPolicyNotFound:
    allOf:
      - $ref: '#/definitions/NotFoundError'
      - example:
          detail: https://platform.adobe.io:443/policies/custom/12345 not found
  CorePolicyNotFound:
    allOf:
      - $ref: '#/definitions/NotFoundError'
      - example:
          detail: https://platform.adobe.io:443/policies/core/corepolicy_9999 not found
  CoreMarketingActionNotFound:
    allOf:
      - $ref: '#/definitions/NotFoundError'
      - example:
          detail: https://platform.adobe.io:443/marketingActions/core/marketingActionName not found
  CustomMarketingActionNotFound:
    allOf:
      - $ref: '#/definitions/NotFoundError'
      - example:
          detail: https://platform.adobe.io:443/marketingActions/custom/marketingActionName not found
  Error:
    properties:
      type:
        type: string
        description: A placeholder value for the error type.
        example: /placeholder/type/uri
      status:
        type: integer
        description: The HTTP status associated with the error.
        format: int32
      title:
        type: string
        description: The error title.
      detail:
        type: string
        description: A description of the error.
  NotFoundError:
    allOf:
      - $ref: '#/definitions/Error'
      - example:
          type: /placeholder/type/uri
          status: 404
          title: NotFound
  BadRequestError:
    allOf:
      - $ref: '#/definitions/Error'
      - example:
          type: /placeholder/type/uri
          status: 400
          title: BadRequest
  CreateMarketingActionError:
    allOf:
      - $ref: '#/definitions/BadRequestError'
      - example:
          detail: "Unable to parse MarketingActionRequest: No usable value for name. Did not find value which can be converted into java.lang.String"
  CreateLabelError:
    allOf:
      - $ref: '#/definitions/BadRequestError'
      - example:
          detail: "Unable to parse LabelRequest: No usable value for category. Did not find value which can be converted into java.lang.String."
  CreatePolicyError:
    allOf:
      - $ref: '#/definitions/BadRequestError'
      - example:
          detail: "Unable to parse PolicyRequest: No usable value for name. Did not find value which can be converted into java.lang.String"
  MarketingActionConstraintsError:
    allOf:
      - $ref: '#/definitions/BadRequestError'
      - example:
          detail: Constraints request must specify either duleLabels, or dataSetId (with optional fields), but not both
  CoreNotFoundError:
    allOf:
      - $ref: '#/definitions/NotFoundError'
      - properties:
          detail:
            example: https://platform.adobe.io:443/labels/core/C15 not found
  CustomNotFoundError:
    allOf:
      - $ref: '#/definitions/NotFoundError'
      - properties:
          detail:
            example: https://platform.adobe.io:443/labels/custom/L2 not found
  CustomLabelBody:
    allOf:
      - $ref: '#/definitions/LabelBody'
      - properties:
          name:
            example: L2
          category:
            example: Custom
            description: The category of the label. Possible values for core labels include `Contract`, `Identity`, and `Sensitive`. Custom labels use the `Custom` category.
          friendlyName:
            example: Purchase History Data
          description:
            example: Data containing information on past transactions
  CustomLabelRequest:
    required:
      - name
      - category
    allOf:
      - $ref: '#/definitions/LabelBody'
      - properties:
          category:
            example: Custom
            description: The category of the label. Must be set to `Custom` for custom labels.
  CoreLabelBody:
    allOf:
      - $ref: '#/definitions/LabelBody'
      - properties:
          category:
            example: Contract
            description: The category of the label. Possible values for core labels include `Contract`, `Identity`, and `Sensitive`. Custom labels use the `Custom` category.
  LabelBody:
    properties:
      name:
        description: A unique name for the label, which also acts as its identifier.
        type: string
        example: C1
      category:
        
        type: string
        example: Contract
      friendlyName:
        description: A short, friendly name that can be displayed for the label in user interfaces.
        type: string
        example: Aggregate export only
      description:
        description: A description of the label's use case.
        type: string
        example: Data can only be exported from Adobe Experience Cloud in an aggregated form without including individual or device identifiers.
  LabelsResponse:
    allOf:
      - $ref: '#/definitions/CoreLabelBody'
      - $ref: '#/definitions/_links'
  CustomLabelsResponse:
    allOf:
      - $ref: '#/definitions/CustomLabelBody'
      - $ref: '#/definitions/ServiceProperties'
  LabelsPage:
    allOf:
      - $ref: '#/definitions/PagingPropertiesCoreLabels'
      - type: object
        properties:
          children:
            type: array
            description: A list of the returned labels.
            items:
              $ref: '#/definitions/LabelsResponse'
  CustomLabelsPage:
    allOf:
      - $ref: '#/definitions/PagingPropertiesCustomLabels'
      - type: object
        properties:
          children:
            type: array
            description: A list of the returned labels.
            items:
              $ref: '#/definitions/CustomLabelsResponse'
  BulkEvalRequest:
    description: >-
      An individual request to perform policy evaluation as part of a bulk of such requests.
    required:
      - evalRef
    properties:
      evalRef:
        type: string
        description: >-
          The constraints URL to be evaluated. Should be of the form `../marketingActions/core/{MARKETING_ACTION_NAME}/constraints`.  This evalRef provides a way to specify the marketing action name as well as whether it is a core or custom marketing action. Only the portion of this URL after the `/marketingActions` component is significant; any prefix to this is ignored.
        example: https://platform.adobe.io:443/data/foundation/dulepolicy/marketingActions/core/emailTargeting/constraints
      includeDraft:
        description: >-
          If true, the system checks for policy violations among policies with "DRAFT" status as well as "ENABLED" status. Otherwise, only "ENABLED" policies are checked.
        type: boolean
        default: false
      labels:
        description: >-
          List of labels to evaluate against the constraints. Any one request may contain either `labels` or `entityList`, not both.
        type: array
        items:
          type: string
        example:
          - C1
          - C2
          - C3
      entityList:
        description: >-
          List of entities on which to retrieve labels in order to perform this evaluation. Any one request may contain either `labels` or `entityList`, not both.
        type: array
        items:
          $ref: '#/definitions/BulkEntityLabelRequest'
  BulkEvalResponse:
    description: >-
      A response element to a bulk request. Each response element corresponds to a request element in the same order within the bulk request. A response element represents either a successful evaluation or some sort of error. For a successful evaluation, the status will be 200, and the body property will contain the MarketingActionConstraints describing the results of the evaluation. For an error, the status will be either a 4xx or 5xx code, and the error property will contain details about the error.
    required:
      - status
    properties:
      status:
        description: >-
          HTTP response status that would be returned for this policy evaluation if it were evaluated as a single request.
        type: integer
      body:
        $ref: '#/definitions/MarketingActionConstraints'
      error:
        $ref: '#/definitions/Error'
  EnabledCorePoliciesBody:
    properties:
      policyIds:
        type: array
        items:
          type: string
  EnabledCorePoliciesRequest:
    required:
      - policyIds
    allOf:
      - $ref: '#/definitions/EnabledCorePoliciesBody'
      - properties:
          policyIds:
            description: A list of core policy IDs that you want to enable for this IMS Organization and sandbox.
            example:
              - "corepolicy_0001"
              - "corepolicy_0002"
              - "corepolicy_0003"
              - "corepolicy_0004"
              - "corepolicy_0005"
              - "corepolicy_0006"
              - "corepolicy_0007"
              - "corepolicy_0008"
  EnabledCorePoliciesResponse:
    allOf:
      - $ref: '#/definitions/EnabledCorePoliciesBody'
      - $ref: '#/definitions/ServiceProperties'
      - properties:
          policyIds:
            description: A list of enabled core policies for this IMS Organization and sandbox.
            example:
              - "corepolicy_0001"
              - "corepolicy_0002"
              - "corepolicy_0003"
              - "corepolicy_0004"
              - "corepolicy_0005"
              - "corepolicy_0006"
              - "corepolicy_0007"
              - "corepolicy_0008"
          createdUser:
            example: "{CLIENT_ID}"
          updatedUser:
            example: "{CLIENT_ID}"
          _links:
            properties:
              self:
                properties:
                  href:
                    example: https://platform.adobe.io:443/data/foundation/dulepolicy/enabledCorePolicies
  EnableCorePolicyViolation:
    allOf:
      - $ref: '#/definitions/ViolationsError'
      - properties:
          detail:
            example: Enabling this list of policies will cause violations.
  ViolationsError:
    allOf:
      - $ref: '#/definitions/Error'
      - properties:
          status:
            example: 409
          title: 
            example: Violations Error
          detail:
            example: The attempted action will cause violations.
      - type: object
        properties:
          violations:
            type: array
            description: A list of violation events, one for each marketing action that resulted in policy violations.
            items:
              $ref: '#/definitions/UpdateViolation'
  UpdateViolation:
    properties:
      enforcementRef:
        type: string
        description: The attempted marketing action that caused the violation(s) to occur.
        example: "/dulepolicy/marketingActions/core/exportToThirdParty/constraints"
      entities:
        type: array
        description: A list of entities that are associated with the violation, including their applied data usage labels.
        items:
          $ref: '#/definitions/Entity'
      violatedPolicies:
        type: array
        description: A list of policies that were violated as a result of the attempted marketing action.
        items:
          $ref: '#/definitions/PolicyResponse'
  Entity:
    properties:
      name:
        type: string
        description: The name of the entity.
        example: "Default Merge Policy"
      entityId:
        $ref: '#/definitions/EntityId'
      _etag:
        description: The entity tag (ETag) used to prevent dirty writes.
        type: string
      parents:
        type: array
        description: A list of entities that have a parent relationship with the current entity.
        items:
          $ref: '#/definitions/EntityId'
      labels:
        type: array
        description: A list of labels that have been applied to the entity.
        items:
          type: string
          example: "C1"
      options:
        type: array
        items:
          $ref: '#/definitions/OptionName'
        description: An array that allows you to specify which `optionalLabels` to include. To include all options, use null. To exclude all options use an empty list (i.e. []). To include specific options, list the options to include (i.e. [{option1, option2}])
      optionalLabels:
        type: array
        items:
          type: object
          properties:
            option:
              $ref: '#/definitions/OptionName'
            labels:
              type: array
              items:
                type: string
                example: "C1"
      flattenedLabels:
        type: object
        properties:
          labels:
            type: array
            items:
              type: string
              example: "C1"
          entities:
            type: array
            items:
              $ref: '#/definitions/Entity'
      enforcementRefs:
        type: array
        items:
          type: string
          example: "/dulepolicy/marketingActions/core/<maRef1>/constraints"
      selfRef:
        type: string
        example: "https://platform.adobe.io/data/foundation/pes/entities/UPS:mergepolicy:5161238b-1e42-4072-a847-7d46f8004caf"
  EntityId:
    properties:
      namespace:
        type: string
        example: "UPS"
      type:
        type: string
        example: "mergepolicy"
      id:
        type: string
        example: "5161238b-1e42-4072-a847-7d46f8004caf"
  OptionName:
    properties:
      id:
        type: string
        example: "https://ns.adobe.com/ddgduleint/schemas/3d2cb5a144bcc3becbba1e197fa25c1e"
      contentType:
        type: string
        example: "application/vnd.adobe.xed-full+json;version=1"
      schemaPath:
        type: string
        example: "/properties/person/properties/name/properties/fullName"