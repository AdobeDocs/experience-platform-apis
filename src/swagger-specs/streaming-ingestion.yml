openapi: 3.0.1
info:
  title: Streaming Ingestion API
  description: |-
    Using this endpoint you can bring your data into Adobe Experience
    Platform through streaming ingestion. Streaming ingestion
    lets users send data to Platform in real time from client and server-side devices.

    - Related Documentation:
      - [Data ingestion documentation](http://www.adobe.com/go/data-ingestion-overview-en)
      - [Batch ingestion API reference](https://developer.adobe.com/experience-platform-apis/references/batch-ingestion))

    - Visualize API calls with Postman (a free, third-party software):
      - [Data Ingestion Service API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Data%20Ingestion%20API.postman_collection.json)
      - [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
      - [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    -API paths
      - Base path for streaming ingestion APIs:
        - Data inlet management: https://<span>platform.adobe.io/data/core/edge
        - Data collection: https://<span>dcs.adobedc.net/
        - Example of a complete path for batch ingestion: https://<span>platform.adobe.io/data/foundation/import/batches
        - Example of a complete path for streaming ingestion: https://<span>dcs.adobedc.net/collection/{CONNECTION_ID}

    - Required headers:
      - All calls require `Content-Type` and `x-sandbox-name`. Authorized/authenticated accounts will need the 
      `Authorization` header. For more information on how to obtain the `Authorization` value, see the 
      [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
  version: "1.0"
servers:
- url: https://dcs.adobedc.net/
tags:
- name: Streaming Ingestion
  description: Streaming ingestion allows you to send data from client and server-side
    devices to Experience Platform in real-time. It drives Real-Time Customer Profile
    by creating personalized experiences.
paths:
  /collection/{CONNECTION_ID}:
    post:
      tags:
      - Streaming Ingestion
      summary: Send individual messages to Adobe Experience Platform
      operationId: sendMessage
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer ". For more information on how to obtain
          this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: The media type being sent in the request payload. For JSON formatted
          payloads the value must be set to application/json. The endpoint also accepts
          payloads encoded in Smile format, which requires the value to be set to
          application/x-jackson-smile.
        required: true
        schema:
          type: string
          enum:
          - application/json
          - application/x-jackson-smile
      - name: CONNECTION_ID
        in: path
        description: The ID of the streaming connection you want to stream data to.
        required: true
        schema:
          type: string
      - name: syncValidation
        in: query
        description: |-
          An optional query parameter, intended for development purposes. If it is set to `true`, it can be used for immediate feedback to determine if the request was successfully sent. By default, this value is set to `false`.

           Please note that requests using this query parameter are __limited__ to 60 requests per minute, per CONNECTION_ID.
        schema:
          type: boolean
          enum:
          - true
          - false
      requestBody:
        description: The data that you want to ingest to Platform.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/streamingMessage'
        required: true
      responses:
        200:
          description: The data was successfully ingested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingIngestionResponse'
        400:
          description: There was a problem with the request. See the response body
            for a more specific error message.
          content: {}
        401:
          description: Access is unauthorized. The user needs to provide a valid bearer
            token.
          content: {}
        403:
          description: Access is forbidden.
          content: {}
        413:
          description: The payload is larger than 1 MB.
          content: {}
        429:
          description: Too many requests. The service is experiencing high loads.
          content: {}
        500:
          description: An internal server error has ocurred.
          content: {}
        503:
          description: The service is currently unavailable. Clients should retry
            at least three times using an exponential back-off strategy.
          headers:
            Retry-After:
              description: Specifies the number of seconds to retry after.
              schema:
                type: integer
          content: {}
      x-codegen-request-body-name: body
  /collection/batch/{CONNECTION_ID}:
    post:
      tags:
      - Streaming Ingestion
      summary: Send multiple messages to Adobe Experience Platform
      operationId: postBatchOfStreamingMessages
      description: This endpoint can receive multiple messages. The message format remains 
        identical to the one sent in a POST request to `/collection/{CONNECTION_ID}`.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer ". For more information on how to obtain
          this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: The media type being sent in the request payload. For JSON formatted
          payloads the value must be set to `application/json`. The endpoint also accepts
          payloads encoded in Smile format, which requires the value to be set to `application/x-jackson-smile`.
        required: true
        schema:
          type: string
          enum:
          - application/json
          - application/x-jackson-smile
      - name: CONNECTION_ID
        in: path
        description: The ID of the streaming connection you want to stream data to.
        required: true
        schema:
          type: string
      requestBody:
        description: The data that you want to ingest to Platform.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchMessage'
        required: true
      responses:
        207:
          description: A multi-status code. The recipient needs to consult the contents
            of the multi-status response body for further information about the success
            or failure of the method execution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseDTO'
        400:
          description: There was a problem with the request. See the response body
            for a more specific error message.
          content: {}
        401:
          description: Access is unauthorized. The user needs to provide a valid bearer
            token.
          content: {}
        403:
          description: Access is forbidden.
          content: {}
        413:
          description: The payload is larger than 1 MB.
          content: {}
        429:
          description: Too many requests. The service is experiencing high loads.
          content: {}
        500:
          description: An internal server error has occurred.
          content: {}
        503:
          description: The service is currently unavailable. Clients should retry
            at least three times using an exponential back-off strategy.
          headers:
            Retry-After:
              description: Specifies the number of seconds to retry after.
              schema:
                type: integer
          content: {}
      x-codegen-request-body-name: body
components:
  schemas:
    streamingMessage:
      required:
      - DATASET_ID
      - IMS_ORG_ID
      - SCHEMA_ID
      - SCHEMA_VERSION
      type: object
      # lines 230-252 need to be rewritten
      properties:
        TENANT_ID:
          type: string
          description: The tenant ID ensures that the resources you create are properly
            namespaced and contained within your organization.
        SCHEMA_ID:
          type: string
          description: The ID of the schema that is created.
        SCHEMA_VERSION:
          type: string
          description: The version of the schema that is created.
        IMS_ORG_ID:
          type: string
          description: Your organization ID can be found under the integration
            details in the Adobe Developer Console.
        DATASET_ID:
          type: string
          description: The ID of the dataset that you want to publish to.
        SOURCE_NAME:
          type: string
          description: An optional name for your source. If this value is missing,
            the streaming message will automatically add the source ID from the streaming
            connection definition.
      description: The message that you want to ingest.
      example:
        header:
          schemaRef:
            id: https://ns.adobe.com/{TENANT_ID}/schemas/{SCHEMA_ID}
            contentType: application/vnd.adobe.xed-full+json;version={SCHEMA_VERSION}
          imsOrgId: '5C1328435BF324E90A49402A@AdobeOrg'
          datasetId: '5da9452f7de80400007jc52a'
          createdAt: "1526283801869"
          source:
            name: 'Google BigQuery Base Connection'
        body:
          xdmMeta:
            schemaRef:
              id: https://ns.adobe.com/{TENANT_ID}/schemas/{SCHEMA_ID}
              contentType: application/vnd.adobe.xed-full+json;version={SCHEMA_VERSION}
          xdmEntity:
            person:
              name:
                firstName: Jane
                middleName: F
                lastName: Doe
              birthDate: 1969-03-14
              gender: female
            workEmail:
              primary: true
              address: janedoe@example.com
              type: work
              status: active
    StreamingIngestionResponse:
      type: object
      properties:
        inletID:
          type: string
          description: The ID of the previously created streaming endpoint.
        xactionId:
          type: string
          description: The `xactionID` is a unique, server-side generated identifier 
            for the XDM record that you just sent. This ID helps with debugging and 
            for Adobe to trace this record's lifecycle through it's various systems.
        receivedTimeMs:
          type: integer
          description: The timestamp in **milliseconds** that shows the time at which
            the request was received.
          format: int32
      example:
        inletId: '667b41cf2dbf3509927da1ebf7e93c20afa727cc8d8373e51da18b62e1b985ec'
        xactionId: 1532625558467:0001:13
        receivedTimeMs: "1551307525735"
    BatchMessage:      
      type: object
      description: The batch message to be published to Platform.
      properties:
        messages:
          $ref: '#/components/schemas/BatchMessageArray'
          
          # items:
          #   required:
          #     - DATASET_ID
          #     - IMS_ORG_ID
          #     - SCHEMA_ID
          #     - SCHEMA_VERSION
          #   type: object
          #   properties:
          #     TENANT_ID:
          #       type: string
          #       description: The tenant ID ensures that the resources you create are properly
          #         namespaced and contained within your organization.
          #     SCHEMA_ID:
          #       type: string
          #       description: The ID of the schema that is created.
          #     SCHEMA_VERSION:
          #       type: string
          #       description: The version of the schema that is created.
          #     IMS_ORG_ID:
          #       type: string
          #       description: Your organization ID can be found under the integration
          #         details in the Adobe Developer Console.
          #     DATASET_ID:
          #       type: string
          #       description: The ID of the dataset that you want to publish to.
          #     SOURCE_NAME:
          #       type: string
          #       description: An optional name for your source. If this value is missing,
          #         the streaming message will automatically add the source ID from the streaming
          #         connection definition.
      # example:
      #   messages:
      #   - header:
      #       schemaRef:
      #         id: https://ns.adobe.com/{TENANT_ID}/schemas/{SCHEMA_ID}
      #         contentType: application/vnd.adobe.xed-full+json;version={SCHEMA_VERSION}
      #       imsOrgId: '5C1328435BF324E90A49402A@AdobeOrg'
      #       datasetId: '5da9452f7de80400007jc52a'
      #     body:
      #       xdmMeta:
      #         schemaRef:
      #           id: https://ns.adobe.com/{TENANT_ID}/schemas/{SCHEMA_ID}
      #           contentType: application/vnd.adobe.xed-full+json;version={SCHEMA_VERSION}
      #       xdmEntity:
      #         _id: 9af5adcc-db9c-4692-b826-65d3abe68c22
      #         timestamp: 2019-02-23T22:07:01Z
      #         environment:
      #           browserDetails:
      #             userAgent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML,
      #               like Gecko) Chrome/29.0.1547.57 Safari/537.36 OPR/16.0.1196.62
      #             acceptLanguage: en-US
      #             cookiesEnabled: "true"
      #             javaScriptVersion: "1.6"
      #             javaEnabled: true
      #           colorDepth: 32
      #           viewportHeight: 799
      #           viewportWidth: 414
      #         productListItems:
      #         - SKU: CC
      #           name: Fernie Snow
      #           quantity: 30
      #           priceTotal: 7.8
      #         commerce:
      #           productViews:
      #             value: 1
      #         _experience:
      #           campaign:
      #             message:
      #               profileSnapshot:
      #                 workEmail:
      #                   address: janedoe@example.com
    BatchMessageArray:
      type: array
      description: The array of messages to be published.
      items:
        type: object
        properties:
          header:
            type: object
            description: This payload header describes the payload information and is 
              necessary for the transport and reconstruction of the original resource. 
              It ensures that the packet is received at it's destination.
            properties: 
              schemaRef:
                $ref: '#/components/schemas/SchemaReference'
              imsOrgId:
                type: string
                description: Your organization ID. It can be found under the integration details in the Adobe Developer Console.
              datasetId:
                type: string
                description: The ID of the dataset that you want to publish to.
              flowId: 
                type: string
                description: The dataflow ID. This is useful when there are 
                  multiple dataflows created for the streaming endpoint/inlet.
              source: 
                type: object
                description: Information regarding the source of the data to be ingested.
                properties:
                  name:
                    type: string
                    description: An optional name for your source. If this value is missing,
                      the streaming message will automatically add the source ID from the streaming
                      connection definition.
            example:
              schemaRef:
                id: https://ns.adobe.com/{TENANT_ID}/schemas/{SCHEMA_ID}
                contentType: application/vnd.adobe.xed-full+json;version={SCHEMA_VERSION}
              imsOrgId: '5C1328435BF324E90A49402A@AdobeOrg'
              datasetId: '5da9452f7de80400007jc52a'
              flowId: 69f188b6-af07-4587-8061-e94d34637b41
              source:
                name: "Streaming dataflow - 06/07/2022 3:09 PM"
          body:
            $ref: '#/components/schemas/BatchMessageBody'
    BatchMessageBody:
      type: object
      description: The payload body contains information on the data that you want to send.
      properties:
        xdmMeta:
          type: object 
          description: The `schemaRef` included in `xdmMeta` must match the schema reference 
            included in the header and also the `DATASET_ID` referenced in the request.
            This allows it to pass DCCS validation and be successfully ingested into Platform.
          properties:
            schemaRef:
              $ref: '#/components/schemas/SchemaReference'
        xdmEntity:
          type: object
          description:  
            Information on the specific entity described by the schema. The `xdmEntity` object 
            contains the payload you want to send to Platform. It must conform to the schema 
            referenced in the `schemaRef` property.
          properties:
            _atag: 
              type: string
              description: 
                Properties that relate to the XDM entity. These vary depending on 
                the schema used. Fields that are prefixed with an underscore like _id, _repo, 
                and _timestamp are system-generated values that are automatically added to each 
                record when they’re ingested into the system.
            _id: 
              type: string
              description: 
                Properties that relate to the XDM entity. These vary depending on 
                the schema used. Fields that are prefixed with an underscore like _id, _repo, 
                and _timestamp are system-generated values that are automatically added to each 
                record when they’re ingested into the system. 
      example:
        xdmMeta:
          schemaRef:
            id: https://ns.adobe.com/{TENANT_ID}/schemas/{SCHEMA_ID}
            contentType: application/vnd.adobe.xed-full+json;version={SCHEMA_VERSION}
        xdmEntity:
          _id: 9af5adcc-db9c-4692-b826-65d3abe68c22
          timestamp: 2019-02-23T22:07:01Z
          environment:
            browserDetails:
              userAgent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML,
                like Gecko) Chrome/29.0.1547.57 Safari/537.36 OPR/16.0.1196.62
              acceptLanguage: en-US
              cookiesEnabled: "true"
              javaScriptVersion: "1.6"
              javaEnabled: true
            colorDepth: 32
            viewportHeight: 799
            viewportWidth: 414
          productListItems:
          - SKU: CC
            name: Fernie Snow
            quantity: 30
            priceTotal: 7.8
          commerce:
            productViews:
              value: 1
          _experience:
            campaign:
              message:
                profileSnapshot:
                  workEmail:
                    address: janedoe@example.com
    SchemaReference:
      type: object
      description: A reference to the schema of the data sent in the request.
      properties:
        id:
          type: string
          description: This is an automatically generated ID for that schema.
        contentType:
          type: string
          description: The media type of the resource.
      example:
        id: https://ns.adobe.com/{TENANT_ID}/schemas/{SCHEMA_ID}
        contentType: application/vnd.adobe.xed-full+json;version={SCHEMA_VERSION}
    BatchResponseDTO:
      type: object
      properties:
        inletId:
          type: string
          description: The streaming connection where the message is going to be published
            to.
          example: 9b0cb233972f3b0092992284c7353f5eead496218e8441a79b25e9421ea127f5
        batchId:
          type: string
          description: The universal unique identifier (UUID) assigned to the batch messages.
          example: 1565638336649:1750:244
        receivedTimeMs:
          type: integer
          description: The timestamp in **milliseconds** when Adobe Experience Platform 
            Data Collection received the message.
          example: 1565638336705
        responses:
          type: array
          description: The response object.
          items:
            $ref: '#/components/schemas/BatchResponseMessage'
      description: The batch message to be published to Adobe Experience Platform Data Collection.
    BatchResponseMessage:
      type: object
      properties:
        xactionId:
          type: string
          description: The universal unique identifier (UUID) assigned to the message.
          example: 1565650704337:2124:92:3
      description: The response to an ingested batch.
