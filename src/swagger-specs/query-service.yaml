openapi: 3.0.1
info:
  title: Query Service API
  description: |-
    Experience Query Service gives you the ability to use standard SQL to query data on Adobe Experience Platform to support many different use cases. It is a serverless tool which allows you to join any datasets in Experience Data Lake and capture the query results as a new dataset for use in reporting, Data Science Workspace, or for ingestion into Real-time Customer Profile. Related Documentation:
      * [Query Service documentation](http://www.adobe.com/go/query-service-home-en)
    Visualize API calls with Postman (a free, third-party software):
      * [Query Service API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Query%20Service%20API.postman_collection.json)
      * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
      * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)
    API paths:
      * PLATFORM Gateway URL: https://<span>platform.adobe.io/
      * Base path for this API: /data/foundation/query
      * Example of a complete path: https://<span>platform.adobe.io/data/foundation/query/queries

    Required headers:
      * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      * All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
      * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.
  version: "1.0"
servers:
- url: //platform.adobe.io/data/foundation/query
tags:
- name: Queries
  description: Queries let you use standard SQL to query data in Adobe Experience
    Platform. For example, you can join any number of datasets in Experience Data
    Lake and capture the results as a new dataset.
- name: Connections
  description: Retrieves connection parameters for the interactive interface.
- name: Schedules
  description: Schedules let you perform SQL functions from a start date to an end
    date.
- name: Query-Templates
  description: Query templates let you create, store and execute any of the query
    as adhoc or schedule service.
paths:
  /connection_parameters:
    get:
      tags:
      - Connections
      summary: Retrieve connection parameters
      description: This endpoint retrieves the connection parameters which are used
        for the interactive interface.
      operationId: retrieveConnectionParameters
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      responses:
        200:
          description: Connection Parameters Response for interactive interface
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection_parameters'
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /queries:
    get:
      tags:
      - Queries
      summary: List queries
      operationId: listQueries
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: orderby
        in: query
        description: |-
          Specifies the field by which to order results. The supported fields are created and updated. The default value is **descending** order, thereby listing the most recent result first for both `created` and `updated`.

          For example, \`orderby=created\` will sort results by created in ascending order. Adding a - before created (\`orderby=-created\`) will sort items by created in descending order.
          Note: The plus sign (+) has to be escaped with %2B.  Example: `orderby=%2Bcreated` for the ascending created order.
        schema:
          type: string
      - name: limit
        in: query
        description: The `limit` parameter takes a positive integer (between 0 and
          500). The integer specifies the page size limit to control the number of
          results that are included in a page. The default value is 20.
        schema:
          type: integer
      - name: start
        in: query
        description: |-
          Offsets the response list, using zero-based numbering. For example, `start=2` will return a list starting from the third listed query. The default value is 0. When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the orderby field. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.
        schema:
          type: string
      - name: property
        in: query
        description: "\"Comma-separated filters. Examples below are given with unsafe\
          \ HTML characters for clarity, but all content MUST be HTML escaped.\nList\
          \ of properties that allow filtering with all operators: created updated\
          \ state id List of supported operators: '>'  (greater than) '<'  (less than)\
          \ '>=' (greater than or equal to) '<=' (less than or equal to) '==' (equal\
          \ to) '!=' (not equal to) '~' (contains) Examples with filters that support\
          \ all operators:\n    * Get query with match on id:\n    id==6ebd9c2d-494d-425a-aa91-24033f3abeec\n\
          \    * Get me queries created after a timestamp, and with a specific state:\n\
          \    created>=2017-04-05T13:30:00Z,state==IN_PROGRESS\nFiltering is also\
          \ allowed with limited operators on the following properties: * the referenced_datasets\
          \ and userId property. This filter only allows the '==' equal to operator,\
          \ and up to 10 dataset ids can be included by using the '||' logical OR\
          \ operator. \n       Example: referenced_datasets==aabbcc||ddeeff\n* the\
          \ SQL property. This filter only allows the '~' contains operator, and only\
          \ one SQL string WITHOUT COMMA (,) can be included.\n       Example: sql~SELECT\
          \ c1\n* the templateId property: This filter only allows the '==' equal\
          \ to operator, and only one template ID can be included. \n       Example:\
          \ templateId=3e61c592-05de-422e-99be-24712c07fc29\n* the templateName property:\
          \ This filter only allows the '~' contains operator, and only one templateName\
          \ can be included. \n       Example: templateName~sample-template-name \n\
          * the client property. This filter only allows the '==' equal to operator,\
          \ and only one SQL string WITHOUT COMMA (,) can be included.\n       Example:\
          \ client==API\n* the scheduleId and scheduleRunId properties. These filters\
          \ only allow the '==' equal to operator.\n       Example: scheduleId==bWFudWFsX18yMDE4LTEwLTEyVDA0OjM2OjE5LjkzNzI2Nw==,scheduleRunId==manual__2018-10-12T05:11:40.816520\n\
          Example of a complex search with multiple filters:\n    * Get me queries\
          \ that utilize two specific datasets,submitted by a particular user, and\
          \ that include the string 'SELECT c1' in the SQL body: referenced_datasets==aabbcc||ddeeff,userId=1234@AdobeId,sql~SELECT\
          \ c1\""
        schema:
          type: string
      - name: excludeSoftDeleted
        in: query
        description: Indicates whether a query which has been soft deleted should
          be included. The boolean's default value is true. For example, `excludeSoftDeleted=false`
          will include soft deleted queries.
        schema:
          type: boolean
      - name: excludeHidden
        in: query
        description: Indicates whether non-user driven queries should be displayed.
          Having this value set to false will **include** non-user driven queries,
          such as CURSOR definitions, FETCH, or metadata queries. The boolean's default
          value is true.
        schema:
          type: boolean
      - name: isPrevLink
        in: query
        description: Field indicating whether the URI is a previous link. The default
          value is `false`.
        schema:
          type: boolean
      responses:
        200:
          description: Query List Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_list'
        401:
          description: Unauthorized
          content: {}
        404:
          description: The resource is not found.
          content: {}
        500:
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Queries
      summary: Create a query
      operationId: createQuery
      parameters:
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: Content-Type
        in: header
        description: The type of content being sent in the body of the request. When
          sending requests that include payloads to the Query Service API, this header
          must be included with a value of `application/json`.
        required: true
        schema:
          type: string
      requestBody:
        description: Query to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_def'
        required: true
      responses:
        202:
          description: Query status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query'
        400:
          description: Bad Request. The payload may be malformed, or the SQL statement
            has been found to be syntactically incorrect.
          content: {}
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: query
  /queries/{queryid}:
    get:
      tags:
      - Queries
      summary: Retrieve a query
      operationId: retrieveQuery
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: queryid
        in: path
        description: The ID value of the query you want to retrieve.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Query status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Query not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    patch:
      tags:
      - Queries
      summary: Request cancellation or query soft delete
      operationId: deleteQuery
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: queryid
        in: path
        description: The ID value of the query you want to delete.
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: The type of content being sent in the body of the request. When
          sending requests that include payloads to the Query Service API, this header
          must be included with a value of `application/json`.
        required: true
        schema:
          type: string
      requestBody:
        description: Requested operation
        content:
          application/json:
            schema:
              type: object
              properties:
                op:
                  type: string
                  enum:
                  - cancel
                  - soft_delete
        required: true
      responses:
        202:
          description: Query termination request submitted successfully
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not found
          content: {}
        409:
          description: Query termination request failed because the job might already
            have terminated
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: operation
  /schedules:
    get:
      tags:
      - Schedules
      summary: List schedules
      description: This endpoint to lists of all scheduled queries for your IMS Organization.
      operationId: listSchedules
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: orderby
        in: query
        description: |-
          Specifies the field by which to order results. The supported fields are created and updated. The default value is **descending** order, thereby listing the most recent result first for both `created` and `updated`.

          For example, \`orderby=created\` will sort results by created in ascending order. Adding a - before created (\`orderby=-created\`) will sort items by created in descending order. Note: The plus sign (+) has to be escaped with %2B.  Example: `orderby=%2Bcreated` for the ascending created order.
        schema:
          type: string
      - name: limit
        in: query
        description: The `limit` parameter takes a positive integer (between 0 and
          500). The integer specifies the page size limit to control the number of
          results that are included in a page. The default value is 20.
        schema:
          type: integer
      - name: start
        in: query
        description: |-
          Offsets the response list, using zero-based numbering. For example, `start=2` will return a list starting from the third listed query. The default value is 0. When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the orderby field. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.
        schema:
          type: string
      - name: property
        in: query
        description: "Filters results based on the provided fields. Use commas to\
          \ chain multiple sets of filters. The filters **must** be HTML escaped however,\
          \ the examples below are given using unsafe HTML characters for clarity.\
          \  \n\nThe supported fields are `created`, `updated`, `templateId`, and\
          \ `userId`.  The list of supported operators are > (greater than), < (less\
          \ than), and == (equal to). \n\nFor example: \n* `created>2017-04-05T13:30:00Z`\
          \ will return all schedules created after the given timestamp.\n* `userId==6ebd9c2d-494d-425a-aa91-24033f3abeec`\
          \ will return all scheduled queries where the user ID matches the one specified.\
          \ The `templateId` and `userId` properties **only** allow filtering with\
          \ the '==' equal to operator. For example:\n* `templateId==123412354` *\
          \ `userId==123412354\"`"
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      responses:
        200:
          description: Schedules List Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules_list'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Schedules
      summary: Create a scheduled query
      description: This endpoint creates a scheduled query for your IMS Organization.
        When you create a scheduled query in the API, you can also see it in the Query
        Editor.
      operationId: createSchedule
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      requestBody:
        description: Schedule to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schedules_create_request'
        required: true
      responses:
        202:
          description: Schedules Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules'
        400:
          description: Bad Request. The payload may be malformed, or the SQL statement
            has been found to be syntactically incorrect.
          content: {}
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: schedule
  /schedules/{schedulesId}:
    get:
      tags:
      - Schedules
      summary: Retrieve a schedule
      description: This endpoint retrieves the scheduled query for your IMS Organization
        that matches the `{scheduleId}` provided.
      operationId: retrieveSchedule
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Schedules Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Query not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    delete:
      tags:
      - Schedules
      summary: Delete a schedule
      description: You can delete a specified scheduled query by making a DELETE request
        to the `/schedules` endpoint and providing the ID of the scheduled query you
        want to delete in the request path.
      operationId: deleteSchedule
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: The ID value of the scheduled query you want to retrieve.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Schedule deleted successfully.
          content: {}
        400:
          description: Please disable the schedule before requesting delete operation.
            OR, There are active run(s) for this schedule, please wait for completion
            before requesting delete operation.
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    patch:
      tags:
      - Schedules
      summary: Update a schedule
      operationId: updateSchedule
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      requestBody:
        description: List of patch operations
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: array
                  items:
                    $ref: '#/components/schemas/schedule_patch_operation'
        required: true
      responses:
        202:
          description: Request to patch accepted
          content: {}
        400:
          description: Schedule already in the state request OR Schedule is in Inactive
            state. Please try after sometime.
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /schedules/{schedulesId}/runs:
    get:
      tags:
      - Schedules
      summary: List all runs for a schedule
      operationId: listScheduleRuns
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: orderby
        in: query
        description: |-
          Specifies the field by which to order results. The supported fields are created and updated. The default value is **descending** order, thereby listing the most recent result first for both `created` and `updated`.

          For example, \`orderby=created\` will sort results by created in ascending order. Adding a - before created (\`orderby=-created\`) will sort items by created in descending order. Note: The plus sign (+) has to be escaped with %2B.  Example: `orderby=%2Bcreated` for the ascending created order.
        schema:
          type: string
      - name: limit
        in: query
        description: The `limit` parameter takes a positive integer (between 0 and
          500). The integer specifies the page size limit to control the number of
          results that are included in a page. The default value is 20.
        schema:
          type: integer
      - name: start
        in: query
        description: |-
          Offsets the response list, using zero-based numbering. For example, `start=2` will return a list starting from the third listed query. The default value is 0. When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the orderby field. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.
        schema:
          type: string
      - name: property
        in: query
        description: 'Comma-separated filters. Examples below are given with unsafe
          HTML characters for clarity, but all content MUST be HTML escaped. Properties
          that allow filtering : created Supported operators: ''>''  (greater than)
          ''<''  (less than) state Supported operators: ''=='' (equal to) ''!='' (not
          equal to) externalTrigger List of supported operators: ''=='' (equal to)
          Examples with filters that support all operators: * Get me  runs created
          after a timestamp: created>2017-04-05T13:30:00Z * Get me  runs that have
          failed: state==FAILED * Get me runs that were manually triggered, and that
          succeeded: externalTrigger==true,state==SUCCESS'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Schedules Run Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules_run_list'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Schedules
      summary: Trigger an immediate run of a scheduled query
      operationId: triggerScheduleRun
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      responses:
        202:
          description: Request to trigger run of a scheduled query accepted
          content: {}
        400:
          description: Schedule is disabled. Immediate run cannot be triggered
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /schedules/{schedulesId}/runs/{runId}:
    get:
      tags:
      - Schedules
      summary: Retrieve details of a query schedule run
      operationId: retrieveScheduledQueryRun
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: The required ID value of the scheduled query whose run you wish
          to retrieve details of.
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: The required ID value of the run you wish to retrieve.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Schedules Run Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules_run_details'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    patch:
      tags:
      - Schedules
      summary: Cancel a run of a scheduled query
      operationId: cancelScheduledQueryRun
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: The required ID value of the scheduled query whose run you wish
          to retrieve details of.
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: The required ID value of the run you wish to retrieve.
        required: true
        schema:
          type: string
      requestBody:
        description: Requested operation
        content:
          application/json:
            schema:
              type: object
              properties:
                op:
                  type: string
                  description: The method to be used.
                  enum:
                  - cancel
        required: true
      responses:
        202:
          description: Request to cancel run of a scheduled query accepted
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: operation
  /query-templates:
    get:
      tags:
      - Query-Templates
      summary: List query templates
      description: Provides a list of all query templates for your IMS Organization.
      operationId: listQueryTemplates
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: isPrevLink
        in: query
        description: Field indicating whether the URI is a previous link. The default
          value is `false`.
        schema:
          type: boolean
      - name: orderby
        in: query
        description: |-
          Specifies the field by which to order results. The supported fields are created and updated. The default value is **descending** order, thereby listing the most recent result first for both `created` and `updated`.

          For example, \`orderby=created\` will sort results by created in ascending order. Adding a - before created (\`orderby=-created\`) will sort items by created in descending order.
          Note: The plus sign (+) has to be escaped with %2B.  Example: `orderby=%2Bcreated` for the ascending created order.
        schema:
          type: string
      - name: limit
        in: query
        description: The `limit` parameter takes a positive integer (between 0 and
          500). The integer specifies the page size limit to control the number of
          results that are included in a page. The default value is 20.
        schema:
          type: integer
      - name: start
        in: query
        description: |-
          Offsets the response list, using zero-based numbering. For example, `start=2` will return a list starting from the third listed query. The default value is 0. When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the orderby field. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.
        schema:
          type: string
      - name: property
        in: query
        description: |-
          "Comma-separated filters. List of properties that allow filtering: name userId lastUpdatedBy Supported operators:
              '~' (contains). This operator can only be used on the name property.
              '==' (equal to). This operator can be used on both the userId and the lastUpdatedBy properties.
          Example: property=name~Sample query Example: property=userId=={USER_ID}"
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template_list'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Query-Templates
      summary: Create a query template
      description: You can create a query template by making a POST request to the
        `/query-templates` endpoint.
      operationId: createQueryTemplate
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      requestBody:
        description: Query template to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_template_def'
        required: true
      responses:
        202:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template'
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: queryTemplate
  /query-templates/count:
    get:
      tags:
      - Query-Templates
      summary: Retrieve the count of the query templates
      operationId: retrieveQueryTemplateCount
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: property
        in: query
        description: '"Comma-separated filters. Examples below are given with unsafe
          HTML characters for clarity, but all content MUST be HTML escaped. Currently
          only `userId` is allowed in filtering count. For example: `property=userId=={USER_ID}`"'
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/template_count'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /query-templates/{queryTemplateId}:
    get:
      tags:
      - Query-Templates
      summary: Retrieve a query template
      description: This endpoint retrieves the query template for the `{QUERY_TEMPLATE_ID}`
        provided.
      operationId: retrieveQueryTemplate
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: queryTemplateId
        in: path
        description: The ID value of the query template you want to retrieve.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    put:
      tags:
      - Query-Templates
      summary: Update a query template
      operationId: updateQueryTemplate
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: queryTemplateId
        in: path
        description: The ID value of the query template you want to update.
        required: true
        schema:
          type: string
      requestBody:
        description: Query template to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_template_def'
        required: true
      responses:
        202:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template'
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: queryTemplate
    delete:
      tags:
      - Query-Templates
      summary: Delete a query template
      operationId: deleteQueryTemplate
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: 'An optional header that may be used for debugging purposes when
          investigating issues with a client flow. The same ID can be used to identify
          a single request to the service from a flow. A new ID should be automatically
          created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
        schema:
          type: string
      - name: User-Agent
        in: header
        description: An optional header that contains details of the type of client
          making the HTTP API request.
        schema:
          type: string
      - name: queryTemplateId
        in: path
        description: The ID value of the query template you want to delete.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Query Template Delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template_delete'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
components:
  schemas:
    query_def:
      required:
      - dbName
      - sql
      type: object
      properties:
        dbName:
          type: string
          description: Should be of the format [sandbox-name]:[dbString]. For example,
            `dbName=sb1:all`. You may ignore sandbox name for prod sandbox. For example,
            `dbName=all` refers to prod sandbox. Please ensure  the `x-sandbox-name`
            header and the sandbox name in 'dbName' refer to same sandbox.
        sql:
          type: string
          description: Required. User can either use standard SQL (such as `SELECT
            * from t1;`) or parameter replacement. If using parameter replacement,
            the user must provide keys, such as "$key", in the SQL and pass the parameters
            as JSON key value pairs.
          example: SELECT $key from $key1 where $key > $key2;
        queryParameters:
          type: object
          properties:
            key:
              type: string
              example: value
            key1:
              type: string
              example: value1
            key2:
              type: string
              example: value2
          description: Required if using parameter replacement. A key value pairing
            for replacing values in the SQL. No value type checking will be done.
        templateId:
          type: string
          description: ID of the query saved using POST /query-templates API.
          example: "123"
        name:
          type: string
          description: A friendly name for the query. Optional.
        description:
          type: string
          description: A comment on the query intent. Optional.
        insertIntoParameters:
          type: object
          properties:
            datasetName:
              type: string
          description: If this property is defined, then this query will be converted
            into an INSERT INTO query. Optional.
        ctasParameters:
          type: object
          properties:
            datasetName:
              type: string
              description: Name of the dataset to create as part of the CTAS.
            description:
              type: string
              description: A description for the new dataset. Optional.
          description: If this property is defined, this query will be converted into
            a CTAS query. Optional.
      description: The definition of the query to be submitted.
    query:
      required:
      - created
      - id
      - isCTAS
      - isInsertInto
      - request
      - state
      - updated
      - userId
      - version
      type: object
      properties:
        id:
          type: string
        request:
          $ref: '#/components/schemas/query_def'
        effectiveSQL:
          type: string
          description: If the query was somehow modified from the original, as in
            the case of a conversion to a CTAS, this property will be defined and
            will include the effective SQL.
        isCTAS:
          type: boolean
          description: Whether the original SQL matches the pattern of a CTAS query,
            or the query included a ctasDataset name that effectively turned the query
            into a CTAS.
        isInsertInto:
          type: boolean
          description: Whether the original SQL matches the pattern of an INSERT INTO
            query or the query included a dataset name under insertIntoParameters
            which effectively turned the query into an INSERT INTO.
        state:
          type: string
          description: The current state of this query.
          enum:
          - SUBMITTED
          - IN_PROGRESS
          - SUCCESS
          - FAILED
          - KILLED
          - TIMEOUT
        created:
          type: string
          description: UTC time when query was SUBMITTED.
        updated:
          type: string
          description: UTC time when query was last updated.
        elapsedTime:
          type: integer
          description: Elapsed time in milliseconds since the query state changed
            to IN_PROGRESS, or total time between IN_PROGRESS and a terminal state.
        rowCount:
          type: integer
          description: The total number of data rows returned in result set, or persisted
            in created dataset. Meaningful only when query is in SUCCESS state.
        templateName:
          type: string
          description: The name of the query template if the query was created using
            a query template.
        userId:
          type: string
          description: The ID of the user who created this object.
        client:
          type: string
          description: A string that identifies the client application that generated
            this query.
        copyURI:
          type: string
          description: If the query is a COPY with a state of SUCCESS, this field
            holds the URI where the data was written.
        errors:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/error'
        _links:
          $ref: '#/components/schemas/query_links'
        version:
          type: integer
          description: REST API version of this resource
    query_list:
      required:
      - _links
      - _page
      - queries
      - version
      type: object
      properties:
        queries:
          type: array
          items:
            $ref: '#/components/schemas/query'
        _page:
          $ref: '#/components/schemas/_page'
        _links:
          $ref: '#/components/schemas/query_list_links'
        version:
          type: integer
          description: The REST API version of this resource.
      description: List of queries
    query_list_links:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/next'
        prev:
          $ref: '#/components/schemas/prev'
    error:
      required:
      - code
      - errorType
      - message
      type: object
      properties:
        code:
          type: string
          description: A code that identifies the type of error encountered.
        message:
          type: string
          description: Short description of the error.
        errorType:
          type: string
          description: The broad type for this error.
          enum:
          - USER_ERROR
          - SYSTEM_ERROR
    query_links:
      type: object
      properties:
        soft_delete:
          type: object
          properties:
            href:
              type: string
              description: '"URI to call to soft-delete this query. Soft-deleting
                stops returning this query on `GET /queries`, but it does not delete
                it from the system."'
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: the JSON body to send.
        cancel:
          type: object
          properties:
            href:
              type: string
              description: URI to call to try to cancel this query. Cancelling a query
                only works if the query is in state SUBMITTED or IN_PROGRESS.
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: the JSON body to send.
        referenced_datasets:
          type: array
          description: Datasets utilized by this query, if any. Note that these datasets
            are resolved when the query is in state IN_PROGRESS.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the referenced dataset.
              href:
                type: string
                description: Catalog-owned URI related to this dataset.
        created_dataset:
          type: object
          properties:
            id:
              type: string
              description: The ID of the created dataset.
            href:
              type: string
              description: Catalog-owned URI related to this dataset.
          description: If this query is a CTAS query, the created dataset is exposed
            under this object.
        schedule:
          type: object
          properties:
            id:
              type: string
              description: The ID of the schedule that created this query.
            href:
              type: string
              description: URI to call to get details for the schedule that triggered
                this query.
            method:
              type: string
              description: the HTTP method to use
          description: If this query was triggered by a schedule, then this object
            will be defined.
        schedule_run:
          type: object
          properties:
            id:
              type: string
              description: The ID of the schedule_run instance associated with this
                query.
            href:
              type: string
              description: URI to call to get details for the schedule_run instance
                associated with this query.
            method:
              type: string
              description: the HTTP method to use
          description: If this query was triggered by a schedule, then this object
            will be defined.
    _page:
      type: object
      properties:
        orderby:
          type: string
          description: The property by which this page is ordered.
        start:
          type: string
          description: The first value in sorted order, of the `orderby` property
            on this page.
        next:
          type: string
          description: The start value for the next page.
        property:
          type: string
          description: The list of properties (if any) by which the result is filtered.
        count:
          type: integer
          description: The number of items on this page.
      description: Contains pagination information that effects the response.
    next:
      type: object
      properties:
        href:
          type: string
      description: Pre-constructed URI for the next page of results, if any exist.
    prev:
      type: object
      properties:
        href:
          type: string
      description: Pre-constructed URI for the previous page of results, if any exist.
    connection_parameters:
      required:
      - dbName
      - host
      - port
      - token
      - username
      - version
      type: object
      properties:
        host:
          type: string
          description: The URI of the host to connect to.
        port:
          type: integer
          description: The host port to connect to.
        username:
          type: string
          description: The received IMS Organization.
        token:
          type: string
          description: The received IMS token.
        compressedToken:
          type: string
          description: The IMS token compressed in a special format. This is required
            by some interactive clients such as Tableau.
        version:
          type: integer
          description: The REST API version of this resource.
        dbName:
          type: string
          description: A combination of the sandbox name and the database name.
      description: Object containing the connection parameters
    schedules_request:
      required:
      - schedule
      - startDate
      type: object
      properties:
        schedule:
          type: string
          description: 'cron like definition for recurring jobs, eg: "0 0 * * *".
            For non-recurring job, set it to "@once" and the job would run once at
            the timestamp specified in "startDate" parameter'
        startDate:
          type: string
        endDate:
          type: string
        maxActiveRuns:
          type: integer
          description: The number of parallel schedule runs allowed. The default value
            is 1.
      description: Details of the schedule to be submitted.
    schedules_runs_by_id_links:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              description: URI of this resource.
            method:
              type: string
              description: the HTTP method to use.
        cancel:
          type: object
          properties:
            href:
              type: string
              description: URI of this resource.
            method:
              type: string
              description: the HTTP method to use.
            body:
              type: string
              description: '{"op": "cancel"}'
    schedules_links:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              description: URI of this resource.
            method:
              type: string
              description: the HTTP method to use
        enable:
          type: object
          properties:
            href:
              type: string
              description: URI to call to enable this schedule.
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: '{ "op": "enable" }'
        disable:
          type: object
          properties:
            href:
              type: string
              description: URI to call to disable this schedule.
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: '{ "op": "disable" }'
        delete:
          type: object
          properties:
            href:
              type: string
              description: URI to call to delete this schedule.
            method:
              type: string
              description: the HTTP method to use
        runs:
          type: object
          properties:
            href:
              type: string
              description: URI to call to return all runs, past and currently running,
                for a particular query schedule.
            method:
              type: string
              description: the HTTP method to use
        trigger:
          type: object
          properties:
            href:
              type: string
              description: URI to call to trigger an immediate run of this scheduled
                query
            method:
              type: string
              description: the HTTP method to use
    schedules_list_links:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/next'
    runs_schedules_list_links:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/next'
    schedules:
      required:
      - _links
      - id
      - query
      - schedule
      - state
      - userId
      type: object
      properties:
        id:
          type: string
          description: The ID of the newly created the schedule.
        userId:
          type: string
          description: The ID of the user that created the schedule.
        updatedUserId:
          type: string
          description: The ID of the user who last updated the schedule.
        state:
          type: string
          description: |-
            When REGISTERING, a schedule has recently being created and is in the process of being registered on internal systems. It will automatically transition into ENABLED once it is acknowledged by internal systems.

            When ENABLED, a schedule will run based on the time interval specified and can be triggered to run manually via `POST /schedules/{scheduleId}/runs`.

            When DISABLED, a schedule will not run based on the time interval specified and will not be allowed to run manually via `POST /schedules/{scheduleId}/runs`. Only schedules in DISABLED state can be deleted via `DELETE /schedules/{scheduleId}`.
          enum:
          - REGISTERING
          - ENABLED
          - DISABLED
        query:
          $ref: '#/components/schemas/query_def'
        schedule:
          $ref: '#/components/schemas/schedules_request'
        created:
          type: string
          description: 'The UTC time when the schedule was submitted. Note: This parameter
            is not returned in the response for `POST /schedules`.'
        updated:
          type: string
          description: 'The UTC time when the schedule was last updated. Note: This
            parameter is not returned in the response for `POST /schedules`.'
        _links:
          $ref: '#/components/schemas/schedules_links'
    schedules_list:
      required:
      - _links
      - _page
      - schedules
      - version
      type: object
      properties:
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/schedules'
        _page:
          $ref: '#/components/schemas/_page'
        _links:
          $ref: '#/components/schemas/schedules_list_links'
        version:
          type: integer
          description: The REST API version of this resource.
      description: List of schedules
    schedules_run:
      required:
      - _links
      - created
      - externalTrigger
      - id
      - state
      - version
      type: object
      properties:
        id:
          type: string
          description: The query ID.
        created:
          type: string
          description: The UTC timestamp when the query was created.
        state:
          type: string
          description: The state of the scheduled run. This will be either SUCCESS,
            FAILED, or IN_PROGRESS.
        externalTrigger:
          type: boolean
          description: States whether the given run was triggered via a `POST /schedules/{scheduleId}/runs`.
        _links:
          $ref: '#/components/schemas/schedules_runs_by_id_links'
        version:
          type: integer
          description: The REST API version of this resource.
      description: A list of runs for the specified scheduled query as JSON.
    schedules_run_list:
      required:
      - _links
      - _page
      - runsSchedules
      - version
      type: object
      properties:
        runsSchedules:
          type: array
          items:
            $ref: '#/components/schemas/schedules_run'
        _page:
          $ref: '#/components/schemas/_page'
        _links:
          $ref: '#/components/schemas/runs_schedules_list_links'
        version:
          type: integer
          description: The REST API version of this resource.
      description: List of schedules runs
    schedules_run_details:
      required:
      - _links
      - created
      - externalTrigger
      - id
      - state
      type: object
      properties:
        created:
          type: string
          description: Execution date of the run.
        state:
          type: string
          description: State of the given run.
          enum:
          - SUCCESS
          - IN_PROGRESS
          - FAILED
        taskStatusList:
          type: array
          description: A list of tasks related to given run.
          items:
            $ref: '#/components/schemas/task_detail'
        id:
          type: string
          description: Run id.
        scheduleId:
          type: string
          description: Schedule id.
        externalTrigger:
          type: boolean
          description: States if the given run was triggered via a `POST /schedules/{scheduleId}/runs`.
        _links:
          $ref: '#/components/schemas/schedules_runs_by_id_links'
      description: Schedule run details
    schedules_create_request:
      required:
      - query
      - schedule
      type: object
      properties:
        query:
          $ref: '#/components/schemas/query_def'
        schedule:
          $ref: '#/components/schemas/schedules_request'
    task_detail:
      type: object
      properties:
        duration:
          type: string
          description: The amount of seconds taken to complete this run.
        endDate:
          type: string
          description: The end date of this run.
        state:
          type: string
          description: The state of the task.
          enum:
          - SUCCESS
          - IN_PROGRESS
          - FAILED
          - QUEUED_FOR_RETRY
          - QUEUED
        message:
          type: string
          description: Message giving more information related to this run.
        startDate:
          type: string
          description: The start date of this run.
        taskId:
          type: string
          description: The task ID of this run.
    template_count:
      type: object
      properties:
        totalCount:
          type: integer
          description: Total Template count.
        version:
          type: integer
          description: REST API version of this resource
      description: Total Query Template count Response.
    query_template_def:
      required:
      - name
      - sql
      type: object
      properties:
        sql:
          type: string
          description: Required. User can either use standard SQL or a parameter replacement.
            If using a parameter replacement, the user must provide keys, such as
            "$key", in the SQL and pass the parameters as JSON key value pairs. The
            values that are passed in here will be the default parameters used in
            the template. If the user wishes to override these parameters, the user
            must override them in the POST request.
          example: SELECT $key from $key1 where $key > $key2;
        queryParameters:
          type: object
          properties:
            key:
              type: string
              example: value
            key1:
              type: string
              example: value1
            key2:
              type: string
              example: value2
          description: Required if using parameter replacement. A key value pairing
            for replacing values in the SQL. No value type checking will be done.
        name:
          type: string
          description: A descriptive human-friendly name for the template.
      description: Description of Query template to submit.
    query_template:
      required:
      - id
      - lastUpdatedBy
      - name
      - sql
      - updated
      - userId
      type: object
      properties:
        id:
          type: string
          description: The ID of the newly created the query template.
        sql:
          type: string
          description: Required. User can either use standard SQL or parameter replacement.
            If using parameter replacement, the user must provide keys, such as "$key",
            in the SQL and pass the parameters as JSON key value pairs.
          example: SELECT $key from $key1 where $key > $key2;
        queryParameters:
          type: object
          properties:
            key:
              type: string
              example: value
            key1:
              type: string
              example: value1
            key2:
              type: string
              example: value2
          description: Required if using parameter replacement. A key value pairing
            for replacing values in the SQL. No value type checking will be done.
        name:
          type: string
          description: A descriptive human-friendly name for the template.
        updated:
          type: string
          description: The  time in UTC format when query template was last updated.
        lastUpdatedBy:
          type: string
          description: The ID of the user who last updated the template.
        userId:
          type: string
          description: The ID of the user who created the template.
        _links:
          $ref: '#/components/schemas/query_template_links'
      description: Query Template Response.
    query_template_links:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              description: URI of this resource
            method:
              type: string
              description: the HTTP method to use
        update:
          type: object
          properties:
            href:
              type: string
              description: URI to update this resource
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: the JSON body to send
        delete:
          type: object
          properties:
            href:
              type: string
              description: URI to delete this resource
            method:
              type: string
              description: the HTTP method to use
    query_template_list:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/query_template'
        _page:
          $ref: '#/components/schemas/_page'
        _links:
          $ref: '#/components/schemas/query_list_template_links'
        version:
          type: integer
          description: REST API version of this resource
      description: List of queries
    query_list_template_links:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/next'
        prev:
          $ref: '#/components/schemas/prev'
    query_template_delete:
      type: object
      properties:
        message:
          type: string
          description: Message string.
        statusCode:
          type: string
          description: Status code
    schedule_patch_operation:
      required:
      - op
      - path
      - value
      type: object
      properties:
        op:
          type: string
          description: The JSON Patch operation to be performed.
          enum:
          - replace
        path:
          type: string
          description: The path to the field that the patch operation should be performed
            on.
          enum:
          - /state
          - /schedule/schedule
        value:
          type: string
          description: This property indicates the value that should be set for that
            property.
  parameters:
    authorization:
      name: Authorization
      in: header
      description: The access token which can be copied from your Experience Platform
        integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
        For more information on how to obtain this value, visit the documentation
        covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      required: true
      schema:
        type: string
    x-gw-ims-org-id:
      name: x-gw-ims-org-id
      in: header
      description: The Organization ID which can be copied from your Experience Platform
        integration. For more information on how to obtain this value, visit the documentation
        covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      required: true
      schema:
        type: string
    x-api-key:
      name: x-api-key
      in: header
      description: The API key which can be copied from your Experience Platform integration.
        For more information on how to obtain this value, visit the documentation
        covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      required: true
      schema:
        type: string
    x-sandbox-name:
      name: x-sandbox-name
      in: header
      description: The name of the sandbox in which the operation will take place.
        See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
        for more information.
      required: true
      schema:
        type: string
    json-header:
      name: Content-Type
      in: header
      description: The type of content being sent in the body of the request. When
        sending requests that include payloads to the Query Service API, this header
        must be included with a value of `application/json`.
      required: true
      schema:
        type: string
    template_count_property:
      name: property
      in: query
      description: '"Comma-separated filters. Examples below are given with unsafe
        HTML characters for clarity, but all content MUST be HTML escaped. Currently
        only `userId` is allowed in filtering count. For example: `property=userId=={USER_ID}`"'
      schema:
        type: string
    template_property:
      name: property
      in: query
      description: |-
        "Comma-separated filters. List of properties that allow filtering: name userId lastUpdatedBy Supported operators:
            '~' (contains). This operator can only be used on the name property.
            '==' (equal to). This operator can be used on both the userId and the lastUpdatedBy properties.
        Example: property=name~Sample query Example: property=userId=={USER_ID}"
      schema:
        type: string
    isPrevLink:
      name: isPrevLink
      in: query
      description: Field indicating whether the URI is a previous link. The default
        value is `false`.
      schema:
        type: boolean
    queries_orderby:
      name: orderby
      in: query
      description: |-
        Specifies the field by which to order results. The supported fields are created and updated. The default value is **descending** order, thereby listing the most recent result first for both `created` and `updated`.

        For example, \`orderby=created\` will sort results by created in ascending order. Adding a - before created (\`orderby=-created\`) will sort items by created in descending order.
        Note: The plus sign (+) has to be escaped with %2B.  Example: `orderby=%2Bcreated` for the ascending created order.
      schema:
        type: string
    schedules_orderby:
      name: orderby
      in: query
      description: |-
        Specifies the field by which to order results. The supported fields are created and updated. The default value is **descending** order, thereby listing the most recent result first for both `created` and `updated`.

        For example, \`orderby=created\` will sort results by created in ascending order. Adding a - before created (\`orderby=-created\`) will sort items by created in descending order. Note: The plus sign (+) has to be escaped with %2B.  Example: `orderby=%2Bcreated` for the ascending created order.
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: The `limit` parameter takes a positive integer (between 0 and 500).
        The integer specifies the page size limit to control the number of results
        that are included in a page. The default value is 20.
      schema:
        type: integer
    start:
      name: start
      in: query
      description: |-
        Offsets the response list, using zero-based numbering. For example, `start=2` will return a list starting from the third listed query. The default value is 0. When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

        Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the orderby field. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.
      schema:
        type: string
    queries_property:
      name: property
      in: query
      description: "\"Comma-separated filters. Examples below are given with unsafe\
        \ HTML characters for clarity, but all content MUST be HTML escaped.\nList\
        \ of properties that allow filtering with all operators: created updated state\
        \ id List of supported operators: '>'  (greater than) '<'  (less than) '>='\
        \ (greater than or equal to) '<=' (less than or equal to) '==' (equal to)\
        \ '!=' (not equal to) '~' (contains) Examples with filters that support all\
        \ operators:\n    * Get query with match on id:\n    id==6ebd9c2d-494d-425a-aa91-24033f3abeec\n\
        \    * Get me queries created after a timestamp, and with a specific state:\n\
        \    created>=2017-04-05T13:30:00Z,state==IN_PROGRESS\nFiltering is also allowed\
        \ with limited operators on the following properties: * the referenced_datasets\
        \ and userId property. This filter only allows the '==' equal to operator,\
        \ and up to 10 dataset ids can be included by using the '||' logical OR operator.\
        \ \n       Example: referenced_datasets==aabbcc||ddeeff\n* the SQL property.\
        \ This filter only allows the '~' contains operator, and only one SQL string\
        \ WITHOUT COMMA (,) can be included.\n       Example: sql~SELECT c1\n* the\
        \ templateId property: This filter only allows the '==' equal to operator,\
        \ and only one template ID can be included. \n       Example: templateId=3e61c592-05de-422e-99be-24712c07fc29\n\
        * the templateName property: This filter only allows the '~' contains operator,\
        \ and only one templateName can be included. \n       Example: templateName~sample-template-name\
        \ \n* the client property. This filter only allows the '==' equal to operator,\
        \ and only one SQL string WITHOUT COMMA (,) can be included.\n       Example:\
        \ client==API\n* the scheduleId and scheduleRunId properties. These filters\
        \ only allow the '==' equal to operator.\n       Example: scheduleId==bWFudWFsX18yMDE4LTEwLTEyVDA0OjM2OjE5LjkzNzI2Nw==,scheduleRunId==manual__2018-10-12T05:11:40.816520\n\
        Example of a complex search with multiple filters:\n    * Get me queries that\
        \ utilize two specific datasets,submitted by a particular user, and that include\
        \ the string 'SELECT c1' in the SQL body: referenced_datasets==aabbcc||ddeeff,userId=1234@AdobeId,sql~SELECT\
        \ c1\""
      schema:
        type: string
    schedules_property:
      name: property
      in: query
      description: "Filters results based on the provided fields. Use commas to chain\
        \ multiple sets of filters. The filters **must** be HTML escaped however,\
        \ the examples below are given using unsafe HTML characters for clarity. \
        \ \n\nThe supported fields are `created`, `updated`, `templateId`, and `userId`.\
        \  The list of supported operators are > (greater than), < (less than), and\
        \ == (equal to). \n\nFor example: \n* `created>2017-04-05T13:30:00Z` will\
        \ return all schedules created after the given timestamp.\n* `userId==6ebd9c2d-494d-425a-aa91-24033f3abeec`\
        \ will return all scheduled queries where the user ID matches the one specified.\
        \ The `templateId` and `userId` properties **only** allow filtering with the\
        \ '==' equal to operator. For example:\n* `templateId==123412354` * `userId==123412354\"\
        `"
      schema:
        type: string
    schedules_runs_property:
      name: property
      in: query
      description: 'Comma-separated filters. Examples below are given with unsafe
        HTML characters for clarity, but all content MUST be HTML escaped. Properties
        that allow filtering : created Supported operators: ''>''  (greater than)
        ''<''  (less than) state Supported operators: ''=='' (equal to) ''!='' (not
        equal to) externalTrigger List of supported operators: ''=='' (equal to) Examples
        with filters that support all operators: * Get me  runs created after a timestamp:
        created>2017-04-05T13:30:00Z * Get me  runs that have failed: state==FAILED
        * Get me runs that were manually triggered, and that succeeded: externalTrigger==true,state==SUCCESS'
      schema:
        type: string
    excludeSoftDeleted:
      name: excludeSoftDeleted
      in: query
      description: Indicates whether a query which has been soft deleted should be
        included. The boolean's default value is true. For example, `excludeSoftDeleted=false`
        will include soft deleted queries.
      schema:
        type: boolean
    excludeHidden:
      name: excludeHidden
      in: query
      description: Indicates whether non-user driven queries should be displayed.
        Having this value set to false will **include** non-user driven queries, such
        as CURSOR definitions, FETCH, or metadata queries. The boolean's default value
        is true.
      schema:
        type: boolean
    x-request-id:
      name: x-request-id
      in: header
      description: 'An optional header that may be used for debugging purposes when
        investigating issues with a client flow. The same ID can be used to identify
        a single request to the service from a flow. A new ID should be automatically
        created for each request. Example: `d41ee840-0a10-4393-ab55-12fa54cb6172`"'
      schema:
        type: string
    User-Agent:
      name: User-Agent
      in: header
      description: An optional header that contains details of the type of client
        making the HTTP API request.
      schema:
        type: string
