openapi: 3.0.1
info:
  title: Query Service API
  description: |-
    Use the Adobe Experience Platform Query Service API to query Platform data with standard SQL. This serverless tool which allows you to join any datasets in Experience Data Lake and capture the query results as a new dataset for use in reporting, Data Science Workspace, or for ingestion into Real-time Customer Profile.

    Related Documentation:
      * [Query Service documentation](http://www.adobe.com/go/query-service-home-en)

    Visualize API calls with Postman (a free, third-party software):
      * [Query Service API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Query%20Service%20API.postman_collection.json)
      * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
      * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    API paths:
      * PLATFORM Gateway URL: https://<span>platform.adobe.io/
      * Base path for this API: /data/foundation/query
      * Example of a complete path: https://<span>platform.adobe.io/data/foundation/query/queries

    Required headers:
      * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      * All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
      * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

    API error handling:
      * Refer to the Experience Platform API troubleshooting guide for [FAQs](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html?lang=en#faq), [API status codes](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html?lang=en#api-status-codes), and [request header errors](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html?lang=en#request-header-errors).
      * Refer to the Query Service troubleshooting guide for [common query related FAQs](https://experienceleague.adobe.com/docs/experience-platform/query/troubleshooting-guide.html).
  version: "1.0"
servers:
- url: //platform.adobe.io/data/foundation/query
tags:
- name: Queries
  description: The queries endpoint uses standard SQL to query data held in Adobe Experience Platform. For example, you can join any number of datasets in the Data Lake and capture the results as a new dataset.
- name: Connections
  description: The connections endpoint retrieves connection parameters for the interactive interface.
- name: Schedules
  description: Schedules let you perform SQL functions on a regular cadence from a start date to an end date or set a maximum number of runs.
- name: Alert Subscriptions
  description: Alert subscriptions allow you to receive notifications on the different statuses of both ad hoc and scheduled queries. Alerts can be received by email, within the Platform UI, or both.
- name: Query Templates
  description: Query templates let you create, store, and execute any query as an ad hoc or scheduled service.
- name: Accelerated Queries
  description: Query the accelerated store in a stateless manner to quickly return results based on aggregated data.
paths:
  /connection_parameters:
    get:
      tags:
      - Connections
      summary: List connection parameters
      description: This request lists the connection parameters used for the interactive interface.
      operationId: listConnectionParameters
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      responses:
        200:
          description: Connection Parameters Response for interactive interface
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection_parameters'
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /queries:
    get:
      tags:
      - Queries
      summary: List queries
      operationId: listQueries
      description: This request provides a list of queries for your organization.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: orderby
        in: query
        description: 'Field to order results by. Supported fields: created, updated.
          Prepend property name with + for ASC,- for DESC order. Default is -created.
          Note that the plus sign (+) has to be escaped with %2B. Example: %2Bcreated
          for ASC created.'
        schema:
          type: string
      - name: limit
        in: query
        description: Hint on number of records to fetch per page.
        schema:
          type: integer
      - name: start
        in: query
        description: Start value of property specified using orderby.
        schema:
          type: string
      - name: property
        in: query
        description: "Comma-separated filters. Examples below are given with unsafe\
          \ HTML characters for clarity, but all content MUST be HTML escaped.\n\n\
          \ List of properties that allow filtering with all operators:\n created\n\
          \ updated\n state\n id\n\n List of supported operators:\n '>'  (greater\
          \ than)\n '<'  (less than)\n '>=' (greater than or equal to)\n '<=' (less\
          \ than or equal to)\n '==' (equal to)\n '!=' (not equal to)\n '~' (contains)\n\
          \n Examples with filters that support all operators:\n * Get query with\
          \ match on id:\n id==6ebd9c2d-494d-425a-aa91-24033f3abeec\n * Get me queries\
          \ created after a timestamp, and with a specific state:\n created>=2017-04-05T13:30:00Z,state==IN_PROGRESS\n\
          \nFiltering is also allowed with limited operators on the following properties:\n\
          \ * the referenced_datasets and userId property. This filter only allows\
          \ the '==' equal to operator, and up to 10 dataset ids can be included by\
          \ using the '||' logical OR operator. \n Example: referenced_datasets==aabbcc||ddeeff\n\
          \ * the SQL property. This filter only allows the '~' contains operator,\
          \ and only one SQL string WITHOUT COMMA (,) can be included.\n Example:\
          \ sql~SELECT c1\n * the templateId property: This filter only allows the\
          \ '==' equal to operator, and only one template ID can be included. \n Example:\
          \ templateId=3e61c592-05de-422e-99be-24712c07fc29\n * the templateName property:\
          \ This filter only allows the '~' contains operator, and only one templateName\
          \ can be included. \n Example: templateName~sample-template-name \n * the\
          \ client property. This filter only allows the '==' equal to operator, and\
          \ only one SQL string WITHOUT COMMA (,) can be included.\n Example: client==API\n\
          \ * the scheduleId and scheduleRunId properties. These filters only allow\
          \ the '==' equal to operator.\n Example: scheduleId==bWFudWFsX18yMDE4LTEwLTEyVDA0OjM2OjE5LjkzNzI2Nw==,scheduleRunId==manual__2018-10-12T05:11:40.816520\n\
          \n Example of a complex search with multiple filters:\n * Get me queries\
          \ that utilize two specific datasets,submitted by a particular user, and\
          \ that include the string 'SELECT c1' in the SQL body: referenced_datasets==aabbcc||ddeeff,userId=1234@AdobeId,sql~SELECT\
          \ c1"
        schema:
          type: string
      - name: excludeSoftDeleted
        in: query
        description: Whether to include any queries that have been soft deleted. Defaults
          to true.
        schema:
          type: boolean
      - name: excludeHidden
        in: query
        description: Whether to include any queries that have been found to be not
          interesting, as they were not user driven. Examples include CURSOR definitions,
          FETCH, and Metadata queries. Defaults to true.
        schema:
          type: boolean
      - name: isPrevLink
        in: query
        description: Field indicating if the URI is a previous link.
        schema:
          type: boolean
      responses:
        200:
          description: Query List Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_list'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Queries
      summary: Create a query
      operationId: createQuery
      description: This request creates a new query configured by the values provided in the payload. The query required in the request body can be either an SQL statement or a template ID.
      parameters:
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: Content-Type
        in: header
        description: The type of content being sent in the body of the request. The value should be 'application/json'.
        required: true
        schema:
          type: string
      requestBody:
        description: Query to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_def'
        required: true
      responses:
        202:
          description: Query status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query'
        400:
          description: Bad Request. The payload may be malformed, or the SQL statement
            has been found to be syntactically incorrect.
          content: {}
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: query
  /queries/{queryid}:
    get:
      tags:
      - Queries
      summary: Retrieve a query
      operationId: retrieveQuery
      description: This endpoint provides the query information that relates to the query ID provided in the request.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: queryid
        in: path
        description: Query ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Query status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Query not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    patch:
      tags:
      - Queries
      summary: Request cancellation or query soft delete
      operationId: cancelQuery
      description: This request cancels the execution of the query that relates to the query ID provided in the request.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: queryid
        in: path
        description: Query ID
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: The type of content being sent in the body of the request. The value should be 'application/json'.
        required: true
        schema:
          type: string
      requestBody:
        description: Requested operation
        content:
          application/json:
            schema:
              type: object
              properties:
                op:
                  type: string
                  enum:
                  - cancel
                  - soft_delete
        required: true
      responses:
        202:
          description: Query termination request submitted successfully
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not found
          content: {}
        409:
          description: Query termination request failed because the job might already
            have terminated
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: operation
  /schedules:
    get:
      tags:
      - Schedules
      summary: List schedules
      operationId: listSchedules
      description: This request provides a list of all query schedules for your organization.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: orderby
        in: query
        description: 'Field to order results by. Supported fields: created, updated.
          Prepend property name with + for ASC,- for DESC order. Default is -created.
          Note that the plus sign (+) has to be escaped with %2B. Example: %2Bcreated
          for ASC created.'
        schema:
          type: string
      - name: limit
        in: query
        description: Hint on number of records to fetch per page.
        schema:
          type: integer
      - name: start
        in: query
        description: Start value of property specified using orderby.
        schema:
          type: string
      - name: property
        in: query
        description: "Comma-separated filters.\n\n List of properties that allow filtering\
          \ with all operators:\n created\n List of supported operators:\n '>'  (greater\
          \ than)\n '<'  (less than)\n Examples with filters that support all operators:\n\
          \ * Get me schedules created after a timestamp:\n created>2017-04-05T13:30:00Z\n\
          \nFiltering is also allowed with limited operators on the following properties:\n\
          \ * the templateId property. This filter only allows the '==' equal to operator.\
          \ \n Example: templateId==123412354\n * the userId property. This filter\
          \ only allows the '==' equal to operator. \n Example: userId==123412354\n"
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      responses:
        200:
          description: Schedules List Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules_list'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Schedules
      summary: Create a scheduled query
      operationId: createSchedule
      description: This request creates a new schedule for the query provided in the request payload. 
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      requestBody:
        description: Schedule to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schedules_create_request'
        required: true
      responses:
        202:
          description: Schedules Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules'
        400:
          description: Bad Request. The payload may be malformed, or the SQL statement
            has been found to be syntactically incorrect.
          content: {}
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: schedule
  /schedules/{schedulesId}:
    get:
      tags:
      - Schedules
      summary: Retrieve a schedule
      operationId: retrieveSchedule
      description: This request lists the details for the schedule ID provided
        in the request path. It returns schedule information that includes the state, creation date, 
        and updated date of the scheduled query, as well as the cadence and user ID who created the schedule.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Schedules Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Query not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    delete:
      tags:
      - Schedules
      summary: Delete a schedule
      operationId: deleteSchedule
      description: This request deletes the query schedule for the schedule ID provided in the request path.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      responses:
        202:
          description: Schedule deleted successfully
          content: {}
        400:
          description: Please disable the schedule before requesting delete operation
            OR There are active run(s) for this schedule, please wait for completion
            before requesting delete operation
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    patch:
      tags:
      - Schedules
      summary: Update a schedule
      operationId: updateSchedule
      description: This request updates the details of the schedule for the schedule ID provided in the request path.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      requestBody:
        description: List of patch operations
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: array
                  items:
                    $ref: '#/components/schemas/schedule_patch_operation'
        required: true
      responses:
        202:
          description: Request to patch accepted
          content: {}
        400:
          description: Schedule already in the state request OR Schedule is in Inactive
            state. Please try after sometime.
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /schedules/{schedulesId}/runs:
    get:
      tags:
      - Schedules
      summary: List all runs for a schedule
      operationId: listScheduleRuns
      description: This request lists the run details for the schedule ID provided in the request path.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: orderby
        in: query
        description: 'Field to order results by. Supported fields: created, updated.
          Prepend property name with + for ASC,- for DESC order. Default is -created.
          Note that the plus sign (+) has to be escaped with %2B. Example: %2Bcreated
          for ASC created.'
        schema:
          type: string
      - name: limit
        in: query
        description: Hint on number of records to fetch per page.
        schema:
          type: integer
      - name: start
        in: query
        description: Start value of property specified using orderby.
        schema:
          type: string
      - name: property
        in: query
        description: |-
          Comma-separated filters. Examples below are given with unsafe HTML characters for clarity, but all content MUST be HTML escaped.

           Properties that allow filtering :
           created
           Supported operators:
           '>'  (greater than)
           '<'  (less than)
           state
           Supported operators:
           '==' (equal to)
           '!=' (not equal to)
           externalTrigger
           List of supported operators:
           '==' (equal to)

           Examples with filters that support all operators:
           * Get me  runs created after a timestamp:
           created>2017-04-05T13:30:00Z
           * Get me  runs that have failed: state==FAILED * Get me runs that were manually triggered, and that succeeded: externalTrigger==true,state==SUCCESS
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Schedules Run Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules_run_list'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Schedules
      summary: Trigger an immediate run of a scheduled query
      operationId: triggerScheduleRun
      description: This request triggers an immediate run for the schedule ID provided in the request path.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      responses:
        202:
          description: Request to trigger run of a scheduled query accepted
          content: {}
        400:
          description: Schedule is disabled. Immediate run cannot be triggered
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /schedules/{schedulesId}/runs/{runId}:
    get:
      tags:
      - Schedules
      summary: Retrieve details of a query schedule run
      operationId: retrieveScheduledQueryRun
      description: This request provides details about a specific run for a specific scheduled query. Both the schedule ID and the run ID must be provided in the request path.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Run ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Schedules Run Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedules_run_details'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    patch:
      tags:
      - Schedules
      summary: Cancel a run of a scheduled query
      operationId: cancelScheduledQueryRun
      description: This request cancels a specific run for a specific scheduled query. Both the schedule ID and the run ID must be provided in the request path.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: schedulesId
        in: path
        description: Schedule ID
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Run ID
        required: true
        schema:
          type: string
      requestBody:
        description: Requested operation
        content:
          application/json:
            schema:
              type: object
              properties:
                op:
                  type: string
                  enum:
                  - cancel
        required: true
      responses:
        202:
          description: Request to cancel run of a scheduled query accepted
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: operation
  /query-templates:
    get:
      tags:
      - Query Templates
      summary: List query templates
      operationId: listQueryTemplates
      description: This request provides a list of every query template.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: isPrevLink
        in: query
        description: Field indicating if the URI is a previous link.
        schema:
          type: boolean
      - name: orderby
        in: query
        description: 'Field to order results by. Supported fields: created, updated.
          Prepend property name with + for ASC,- for DESC order. Default is -created.
          Note that the plus sign (+) has to be escaped with %2B. Example: %2Bcreated
          for ASC created.'
        schema:
          type: string
      - name: limit
        in: query
        description: Hint on number of records to fetch per page.
        schema:
          type: integer
      - name: start
        in: query
        description: Start value of property specified using orderby.
        schema:
          type: string
      - name: property
        in: query
        description: "Comma-separated filters.\n\n List of properties that allow filtering:\n\
          \ name\n userId\n\n lastUpdatedBy\n Supported operators:\n'~' (contains).\
          \ This operator can only be used on the name property. \n '==' (equal to).\
          \ This operator can be used on both the userId and the lastUpdatedBy properties.\
          \ \n\n Example: property=name~Sample query\n\n  \n  Example: property=userId=={USER_ID}"
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template_list'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Query Templates
      summary: Create a query template
      operationId: createQueryTemplate
      description: This request creates a query template.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      requestBody:
        description: Query template to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_template_def'
        required: true
      responses:
        202:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template'
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: queryTemplate
  /query-templates/count:
    get:
      tags:
      - Query Templates
      summary: Retrieve the count of query templates
      operationId: retrieveQueryTemplateCount
      description: This request retrieves the count of query templates.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: property
        in: query
        description: "Comma-separated filters. Examples below are given with unsafe\
          \ HTML characters for clarity, but all content MUST be HTML escaped.\n\n\
          \  Currently only userId is allowed in filtering count.\nExample: property=userId=={USER_ID}\n\
          \ "
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/template_count'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /query-templates/{queryTemplateId}:
    get:
      tags:
      - Query Templates
      summary: Retrieve a query template
      operationId: retrieveQueryTemplate
      description: This request retrieves the query template for the template ID provided in the request path.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: queryTemplateId
        in: path
        description: Query Template ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    put:
      tags:
      - Query Templates
      summary: Update a query template
      operationId: updateQueryTemplate
      description: This request updates the query template for the template ID provided in the request path.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: queryTemplateId
        in: path
        description: Query Template ID
        required: true
        schema:
          type: string
      requestBody:
        description: Query template to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_template_def'
        required: true
      responses:
        202:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template'
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: queryTemplate
    delete:
      tags:
      - Query Templates
      summary: Delete a query template
      operationId: deleteQueryTemplate
      description: This request deletes the query template for the template ID provided in the request path.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: queryTemplateId
        in: path
        description: Query Template ID
        required: true
        schema:
          type: string
      responses:
        202:
          description: Query Template Delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query_template_delete'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /alert-subscriptions:
    get:
      tags:
      - Alert Subscriptions
      summary: List alerts
      description: This request provides a list of alerts.
      operationId: listAlertsPerImsOrgAndSandbox
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      responses:
        200:
          description: A list of alerts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alerts_per_imsorg_and_sandbox'
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Alert Subscriptions
      summary: Create an alert and subscribe users
      description: This request associates a query to a newly created alert using
        an `assetId` property, and subscribes users to alerts for that query through
        the use of `emailIds`.
      operationId: createAndSubscribeToAnAlert
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-service-token
        in: header
        description: An optional key used to authenticate access.
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      requestBody:
        description: Create an alert for a particular query or schedule ID and subscribe
          `emailId`s to different notification channels.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscribe_user_to_alert_body'
        required: true
      responses:
        200:
          description: The subscription to an alert was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_subscription_response_body'
        400:
          description: Bad Request. The payload may be malformed, the alert might
            be in a disabled state, or an `emailID` provided for subscribing to the
            alert might not be a registered Adobe ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_bad_request_error_message'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not found. The request cannot be processed because the asset
            ID provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_not_found_error_message'
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: alert subscription
  /alert-subscriptions/{assetId}:
    get:
      tags:
      - Alert Subscriptions
      summary: List alert subscription information for a query or schedule
      description: This request lists the alerts for the query ID or schedule ID provided
        in the request path. It returns subscription information that includes a list
        of all subscribed users by providing their email IDs and their chosen notification
        channels.
      operationId: listSubscribersForAnAlertByAssetsId
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: assetId
        in: path
        description: A query or schedule ID that you want the subscription information
          for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Information on the alerts subscribed to by a particular query
            ID or schedule ID. A maximum of 3 alerts are available in a single response.
            1 alert for each `alertType` is contained in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscribers_for_alert_by_assetId'
        401:
          description: Unauthorized
          content: {}
        404:
          description: There is no alert associated with the provided `assetId`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_alert_subscription_for_asset_id_error_message'
        500:
          description: Internal Server Error
          content: {}
  /alert-subscriptions/{assetId}/{alertType}:
    get:
      tags:
      - Alert Subscriptions
      summary: List alert subscription information for a particular query and alert
        type
      description: This request lists the alerts and alert subscription information
        for the query ID and alert type provided in the request path.
      operationId: listSubscribersForAnAlertByAssetIdAndAlertType
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: assetId
        in: path
        description: A query or schedule ID that you want the subscription information
          for.
        required: true
        schema:
          type: string
      - name: alertType
        in: path
        description: This property describes the state of query execution that triggers
          an alert. The response will only include alert subscription information
          for alerts of this type. The alert type is one of three values (`start`,
          `success`, `failure`).
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response returns the user email IDs and notification
            channels for a particular query and alert type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscribers_for_alert_by_assetId_and_alertType'
        400:
          description: Bad Request. An invalid `alertType` was provided in the URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_alert_subscription_for_asset_id_and_alert_type_bad_request_error_message'
        401:
          description: Unauthorized
          content: {}
        404:
          description: No alert was found for the given `assetId`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_alert_subscription_for_asset_id_and_alert_type_not_found_error_message'
        500:
          description: Internal Server Error.
          content: {}
    delete:
      tags:
      - Alert Subscriptions
      summary: Delete the alert for a particular query and alert type
      description: Delete a specific alert by providing either an alert type and a
        query ID or an alert type and a schedule ID in the request path.
      operationId: deleteAlert
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: assetId
        in: path
        description: A query ID or a schedule ID that you want to delete the alert
          for.
        required: true
        schema:
          type: string
      - name: alertType
        in: path
        description: The state of query execution that triggers the alert to be deleted.
          The alert type is one of three values (`start`, `success`, `failure`).
        required: true
        schema:
          type: string
      responses:
        200:
          description: Alert deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_deleted'
        400:
          description: Bad Request. An invalid `alertType` was provided in the URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_deleted_bad_request_error_message'
        401:
          description: Unauthorized
          content: {}
        404:
          description: No alert was found for the given `assetId` and `alertType`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_deleted_not_found_error_message'
        500:
          description: Internal Server Error.
          content: {}
    patch:
      tags:
      - Alert Subscriptions
      summary: Enable or disable an alert
      description: Update the status of an alert to either `enable` or `disable` by
        providing a query or schedule ID and an alert type in the request path.
      operationId: patchAlert
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: assetId
        in: path
        description: A query ID or a schedule ID.
        required: true
        schema:
          type: string
      - name: alertType
        in: path
        description: This property determines the state of query execution that triggers
          a user to receive an alert. The alert type is one of three values (`start`,
          `success`, `failure`).
        required: true
        schema:
          type: string
      requestBody:
        description: The requested operation.
        content:
          application/json:
            schema:
              type: object
              properties:
                op:
                  type: string
                  description: The operation to be performed. The only accepted value
                    is `replace`. It replaces the current alert's status with the
                    value provided in the request.
                  enum:
                  - replace
                path:
                  type: string
                  description: The path must be `/status` to ensure the alert `status`
                    is updated.
                  enum:
                  - /status
                value:
                  type: string
                  description: The provided value will be the status of the alert
                    after the update takes effect.
                  enum:
                  - enable
                  - disable
        required: true
      responses:
        200:
          description: The alert status has been updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_patched'
        400:
          description: Bad Request. The payload may be malformed, or an invalid `alertType`
            may have been provided in URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_patched_bad_request_error_message'
        401:
          description: Unauthorized
          content: {}
        404:
          description: No alert found for the `assetId` and `alertType` provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_patched_not_found_error_message'
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: operation
  /alert-subscriptions/user-subscriptions/{emailID}:
    get:
      tags:
      - Alert Subscriptions
      summary: List information on all alerts that a user is subscribed to
      description: This request lists the alerts subscribed to by the email ID provided
        in the request path. The returned information includes the alert name, IDs,
        status, alert type, and notification channels.
      operationId: listAllAlertsSubscribedToByEmailId
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform
          integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
          For more information on how to obtain this value, visit the documentation
          covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: emailID
        in: path
        description: An Adobe-registered email address whose alert subscriptions you
          want to retrieve.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Details of all alerts subscribed to by the `emailId` provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alerts_to_which_user_subscribed_response'
        400:
          description: Bad Request. The emailID is not an Adobe registered ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_alerts_to_which_user_subscribed_bad_request_error_message'
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /accelerated-queries:
    post:
      tags:
      - Accelerated Queries
      summary: Query the accelerated store
      operationId: runAcceleratedQuery
      description: Run a query on accelerated store datasets by including either an SQL statement or a template ID within the request payload.
      parameters:
      - name: Authorization
        in: header
        description: The access token which can be copied from your Experience Platform integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`). For more information on how to obtain this value, visit the documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: The Organization ID which can be copied from your Experience
          Platform integration. For more information on how to obtain this value,
          visit the documentation covering making API calls in the [authentication
          tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: The API key which can be copied from your Experience Platform
          integration. For more information on how to obtain this value, visit the
          documentation covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: The name of the sandbox in which the operation will take place.
          See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: The type of content being sent in the body of the request. The value should be 'application/json'.
        required: true
        schema:
          type: string
      - name: x-sandbox-id
        in: header
        description: The unique identifier of the sandbox in which the operation will
          take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
          for more information.
        schema:
          type: string
      - name: x-request-id
        in: header
        description: An optional header that serves as a tracking ID for the request.
          If one is not provided on the request, the server generates one automatically.
        schema:
          type: string
      - name: User-Agent
        in: header
        description: The type of the client making the HTTP request.
        schema:
          type: string
      - name: Accept-Encoding
        in: header
        description: This request header indicates the type of content encoding that the client can understand when consuming compressed response bodies. It is usually a compression algorithm. Accepted values include `gzip` and `identity`.
        schema:
          type: string
      requestBody:
        description: The request body to run a query on the accelerated store. The request accepts either a query string as `sql` or the ID of a saved query as `templateId`.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SqlAcceleratedQueryDefinition'
                - $ref: '#/components/schemas/TemplateIdAcceleratedQueryDef'
            examples:
              SQL accelerated query:
                $ref: '#/components/examples/SqlAcceleratedQueryDefinition'
              Template ID accelerated query:
                $ref: '#/components/examples/TemplateIdAcceleratedQueryDefinition'
      responses:
        200:
          description: Query Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/accelerated_query_response'
                  - $ref: '#/components/schemas/TemplateIdAcceleratedQueryResponse'
              examples:
                  SQL accelerated query response:
                    $ref: '#/components/examples/SqlAcceleratedQueryResponse'
                  Template ID accelerated query response:
                    $ref: '#/components/examples/TemplateIdAcceleratedQueryResponse'
                      
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/AudiencesList'
          #     examples:
          #       No metrics:
          #         $ref: '#/components/examples/AudiencesListNoMetrics'
          #       With metrics:
          #         $ref: '#/components/examples/AudiencesListWithMetrics'
              # schema: 
              #   $ref: '#/components/schemas/accelerated_query_response'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: accelerated-query-body
components:
  schemas:
    query_def:
      required:
      - dbName
      - sql
      type: object
      properties:
        dbName:
          type: string
          description: The name of the database you are making an accelerated query to. The value for `dbName` should take the format of `{SANDBOX_NAME}:{ACCELERATED_STORE_DATABASE}.{ACCELERATED_STORE_SCHEMA}`. The database provided must exist within the accelerated store or the request will result in an error. Please ensure the `x-sandbox-name` header and sandbox name in 'dbName' refer to same sandbox.
        sql:
          type: string
          description: Required. User can either use standard SQL (such as SELECT
            * from t1;) or parameter replacement. If using parameter replacement,
            the user must provide keys, such as "$key", in the SQL and pass the parameters
            as JSON key value pairs.
          example: SELECT $key from $key1 where $key > $key2;
        queryParameters:
          type: object
          properties:
            key:
              type: string
              example: value
            key1:
              type: string
              example: value1
            key2:
              type: string
              example: value2
          description: Required if using parameter replacement. A key value pairing
            for replacing values in the SQL. No value type checking will be done.
        templateId:
          type: string
          description: ID of the query saved using POST /query-templates API.
          example: "123"
        name:
          type: string
          description: A friendly name for the query. Optional.
        description:
          type: string
          description: A comment on the query intent. Optional.
        insertIntoParameters:
          type: object
          properties:
            datasetName:
              type: string
          description: If this property is defined, then this query will be converted
            into an INSERT INTO query. Optional.
        ctasParameters:
          type: object
          properties:
            datasetName:
              type: string
              description: Name of the dataset to create as part of the CTAS.
            description:
              type: string
              description: A description for the new dataset. Optional.
          description: If this property is defined, this query will be converted into
            a CTAS query. Optional.
      description: Definition of a query to be submitted
    SqlAcceleratedQueryDefinition:
      type: object
      required:
      - dbName
      - sql
      properties:
        dbName:
          type: string
          description: The name of the database you are making an accelerated query to. The value for `dbName` should take the format of `{SANDBOX_NAME}:{ACCELERATED_STORE_DATABASE}.{ACCELERATED_STORE_SCHEMA}``. The database provided must exist within the accelerated store or the request will result in an error. You must ensure that the `x-sandbox-name` header and sandbox name in `dbName` refer to same sandbox.'
          example: acmesbox1:acmeacceldb:accmeaggschema
        sql:
          type: string
          description: An SQL statement string to be submitted to the query accelerated
            store. The maximum size allowed is 1000000 bytes. Accelerated queries
            require EITHER an SQL statement OR a template ID, but not both. Submitting
            both in a request causes an error.
          example: SELECT * FROM accounts;
        name:
          type: string
          description: An optional human-friendly, descriptive name for the accelerated query. 
          example: Second Accelerated Query Sample
        description:
          type: string
          description: An optional comment on the intent of the query to help other
            users understand its purpose. The maximum size allowed is 1000 bytes.
          example: Another sample of an accelerated query.
      description: The query definition submitted to the query accelerated store.
    TemplateIdAcceleratedQueryDef:      
      type: object
      required:
      - dbName
      - templateId
      properties:
        dbName:
          type: string
          description: The name of the database you are making an accelerated query to. The value for `dbName` should take the format of `{SANDBOX_NAME}:{ACCELERATED_STORE_DATABASE}.{ACCELERATED_STORE_SCHEMA}`. The database provided must exist within the accelerated store or the request will result in an error. You must ensure that the `x-sandbox-name` header and sandbox name in `dbName` refer to same sandbox.
          example: acmesbox1:acmeacceldb:accmeaggschema
        templateId:
          type: string
          description: The ID of a query created when a POST request is made to the
            `/templates` endpoint. The corresponding query is submitted to the query
            accelerated store. Accelerated queries require EITHER an SQL statement
            OR a template ID, but not both. Submitting both in a request causes an
            error.
          example: f7cb5155-29da-4b95-8131-8c5deadfbe7f
        name:
          type: string
          description: An optional human-friendly, descriptive name for the accelerated query.
          example: Second Accelerated Query Sample
        description:
          type: string
          description: An optional comment on the intent of the query to help other
            users understand its purpose. The maximum size allowed is 1000 bytes.
          example: Another sample of an accelerated query.
      description: The query definition submitted to the query accelerated store.
    metadata_schema_ref:
      type: object
      properties:
        _adhoc:
          type: object
          properties:
            type:
              type: string
              description: The data type of the `_adhoc` object.
            meta:xdmType:
              type: string
              description: This is a system-generated value for the XDM field type.
                For more information on the available types see the documentation
                on available [XDM types](https://experienceleague.adobe.com/docs/experience-platform/xdm/tutorials/custom-fields-api.html).
            properties:
              type: object
              properties: {}
              description: These are the column names of the queried dataset.
              example:
                Industry_name:
                  type: string
                  meta:xdmType: string
                  default: null
                Industry_code:
                  type: integer
                  meta:xdmType: int,
                  maximum: 2147483647
                  minimum: -2147483648
                Value:
                  type: number
                  meta:xdmType: number
                  maximum: null,
                  minimum: null
                Active_customer:
                  type: boolean
                  meta:xdmType: boolean
          description: The schema of the ad hoc object created. An ad-hoc Experience
            Data Model (XDM) schema with fields that are namespaced for usage only
            by a single dataset.
      description: This object contains the metadata for each column returned in the
        response. It includes the name and type of each column.
    accelerated_query_response:
      type: object
      properties:
        queryId:
          type: string
          description: The unique identifier for the query.
          example: ba7aa60c-f5ab-47de-b980-c30789108efe
        resultsMeta:
          $ref: '#/components/schemas/metadata_schema_ref'
        results:
          type: array
          description: The results of the query in JSON format.
          items:
            $ref: '#/components/schemas/results_each_row_schema_ref'
        request:
          $ref: '#/components/examples/SqlAcceleratedQueryDefinition'
      description: The response body for the accelerated query.
    TemplateIdAcceleratedQueryResponse:
      type: object
      properties:
        queryId:
          type: string
          description: The unique identifier for the query.
          example: ba7aa60c-f5ab-47de-b980-c30789108efe
        resultsMeta:
          $ref: '#/components/schemas/metadata_schema_ref'
        results:
          type: array
          description: The results of the query in JSON format.
          items:
            $ref: '#/components/schemas/results_each_row_schema_ref'
        request:
          $ref: '#/components/examples/TemplateIdAcceleratedQueryDefinition'
      description: The response body for the accelerated query.
    results_each_row_schema_ref:
      type: object
      description: An object that represents a single row of the result set.
      example:
        Industry_name: Acme
        Industry_code: 23
        Value: 93141
        column_name_boolean_type: true
    query:
      required:
      - created
      - id
      - isCTAS
      - isInsertInto
      - request
      - state
      - updated
      - userId
      - version
      type: object
      properties:
        id:
          type: string
        request:
          $ref: '#/components/schemas/query_def'
        effectiveSQL:
          type: string
          description: If the query was somehow modified from the original, as in
            the case of a conversion to a CTAS, this property will be defined and
            will include the effective SQL.
        isCTAS:
          type: boolean
          description: Whether the original SQL matches the pattern of a CTAS query,
            or the query included a ctasDataset name that effectively turned the query
            into a CTAS.
        isInsertInto:
          type: boolean
          description: Whether the original SQL matches the pattern of an INSERT INTO
            query or the query included a dataset name under insertIntoParameters
            which effectively turned the query into an INSERT INTO.
        state:
          type: string
          description: The current state of this query.
          enum:
          - SUBMITTED
          - IN_PROGRESS
          - SUCCESS
          - FAILED
          - KILLED
          - TIMEOUT
        created:
          type: string
          description: UTC time when query was SUBMITTED.
        updated:
          type: string
          description: UTC time when query was last updated.
        elapsedTime:
          type: integer
          description: Elapsed time in milliseconds since the query state changed
            to IN_PROGRESS, or total time between IN_PROGRESS and a terminal state.
        rowCount:
          type: integer
          description: The total number of data rows returned in result set, or persisted
            in created dataset. Meaningful only when query is in SUCCESS state.
        templateName:
          type: string
          description: The name of the query template if the query was created using
            a query template.
        userId:
          type: string
          description: The ID of the user who created this object.
        client:
          type: string
          description: A string that identifies the client application that generated
            this query.
        copyURI:
          type: string
          description: If the query is a COPY with a state of SUCCESS, this field
            holds the URI where the data was written.
        errors:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/error'
        _links:
          $ref: '#/components/schemas/query_links'
        version:
          type: integer
          description: REST API version of this resource
    query_list:
      required:
      - _links
      - _page
      - queries
      - version
      type: object
      properties:
        queries:
          type: array
          items:
            $ref: '#/components/schemas/query'
        _page:
          $ref: '#/components/schemas/_page'
        _links:
          $ref: '#/components/schemas/query_list_links'
        version:
          type: integer
          description: REST API version of this resource
      description: List of queries
    query_list_links:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/next'
        prev:
          $ref: '#/components/schemas/prev'
      description: Contains the URI reference that clients may use to obtain the next
        or previous page of resources.
    error:
      required:
      - code
      - errorType
      - message
      type: object
      properties:
        code:
          type: string
          description: A code that identifies the type of error encountered.
        message:
          type: string
          description: Short description of the error.
        errorType:
          type: string
          description: The broad type for this error.
          enum:
          - USER_ERROR
          - SYSTEM_ERROR
    query_links:
      type: object
      properties:
        soft_delete:
          type: object
          properties:
            href:
              type: string
              description: URI to call to soft-delete this query. Soft-deleting stops
                returning this query on GET /queries, but it does not delete it from
                the system.
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: the JSON body to send.
        cancel:
          type: object
          properties:
            href:
              type: string
              description: URI to call to try to cancel this query. Cancelling a query
                only works if the query is in state SUBMITTED or IN_PROGRESS.
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: the JSON body to send.
        referenced_datasets:
          type: array
          description: Datasets utilized by this query, if any. Note that these datasets
            are resolved when the query is in state IN_PROGRESS.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the referenced dataset.
              href:
                type: string
                description: Catalog-owned URI related to this dataset.
        created_dataset:
          type: object
          properties:
            id:
              type: string
              description: The ID of the created dataset.
            href:
              type: string
              description: Catalog-owned URI related to this dataset.
          description: If this query is a CTAS query, the created dataset is exposed
            under this object.
        schedule:
          type: object
          properties:
            id:
              type: string
              description: The ID of the schedule that created this query.
            href:
              type: string
              description: URI to call to get details for the schedule that triggered
                this query.
            method:
              type: string
              description: the HTTP method to use
          description: If this query was triggered by a schedule, then this object
            will be defined.
        schedule_run:
          type: object
          properties:
            id:
              type: string
              description: The ID of the schedule_run instance associated with this
                query.
            href:
              type: string
              description: URI to call to get details for the schedule_run instance
                associated with this query.
            method:
              type: string
              description: the HTTP method to use
          description: If this query was triggered by a schedule, then this object
            will be defined.
    PagingProperties:
      type: object
      properties:
        orderby:
          type: string
          description: The property by which this page is ordered.
          example: -created
        page:
          type: integer
          description: The page number of the result.
          example: 1
        count:
          type: integer
          description: The number of items on the page.
          example: 26
        pageSize:
          type: integer
          description: The number of items on the page.
          example: 26
      description: Contains properties to describe the order, size, total number of
        pages, and current page.
    version:
      type: integer
      description: The version of this resource.
      example: 1
    _page:
      type: object
      properties:
        orderby:
          type: string
          description: The property by which this page is ordered.
          example: -created
        start:
          type: string
          description: The first value, in sorted order, of the orderby property on
            this page.
        next:
          type: string
          description: The start value for the next page.
        property:
          type: string
          description: The list of properties by which the result is filtered, if
            any.
        count:
          type: integer
          description: The number of items on the page.
          example: 26
      description: Contains a `count` property for the number of resources returned.
    next:
      type: object
      properties:
        href:
          type: string
          description: A link to the next page of results.
          example: https://platform.adobe.io/data/foundation/query/queries/alert-subscriptions?orderby=-created&page=2
      description: Pre-constructed URI for the next page of results, if any exist.
    prev:
      type: object
      properties:
        href:
          type: string
          description: A link to the previous page of results.
          example: https://platform.adobe.io/data/foundation/query/queries/alert-subscriptions?orderby=-created&page=0
      description: Pre-constructed URI for the previous page of results, if any exist.
    connection_parameters:
      required:
      - dbName
      - host
      - port
      - token
      - username
      - version
      type: object
      properties:
        host:
          type: string
          description: The URI of the host to connect to.
        port:
          type: integer
          description: The host port to connect to.
        username:
          type: string
          description: The IMS Organization as received.
        token:
          type: string
          description: The IMS token as received.
        compressedToken:
          type: string
          description: The IMS token compressed in a special format. Required by some
            interactive clients such as Tableau.
        version:
          type: integer
          description: REST API version of this resource
        dbName:
          type: string
          description: Combination of the sandbox name and the database name.
      description: Object containing the connection parameters
    schedules_request:
      required:
      - schedule
      - startDate
      type: object
      properties:
        schedule:
          type: string
          description: 'cron like definition for recurring jobs, eg: "0 0 * * *".
            For non-recurring job, set it to "@once" and the job would run once at
            the timestamp specified in "startDate" parameter'
        startDate:
          type: string
        endDate:
          type: string
        maxActiveRuns:
          type: integer
          description: The number of parallel schedule runs allowed. The default value
            is 1.
    schedules_runs_by_id_links:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              description: URI of this resource.
            method:
              type: string
              description: the HTTP method to use.
        cancel:
          type: object
          properties:
            href:
              type: string
              description: URI of this resource.
            method:
              type: string
              description: the HTTP method to use.
            body:
              type: string
              description: '{"op": "cancel"}'
    schedules_links:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              description: URI of this resource.
            method:
              type: string
              description: the HTTP method to use
        enable:
          type: object
          properties:
            href:
              type: string
              description: URI to call to enable this schedule.
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: '{ "op": "enable" }'
        disable:
          type: object
          properties:
            href:
              type: string
              description: URI to call to disable this schedule.
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: '{ "op": "disable" }'
        delete:
          type: object
          properties:
            href:
              type: string
              description: URI to call to delete this schedule.
            method:
              type: string
              description: the HTTP method to use
        runs:
          type: object
          properties:
            href:
              type: string
              description: URI to call to return all runs, past and currently running,
                for a particular query schedule.
            method:
              type: string
              description: the HTTP method to use
        trigger:
          type: object
          properties:
            href:
              type: string
              description: URI to call to trigger an immediate run of this scheduled
                query
            method:
              type: string
              description: the HTTP method to use
    schedules_list_links:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/next'
    runs_schedules_list_links:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/next'
    schedules:
      required:
      - _links
      - id
      - query
      - schedule
      - state
      - userId
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
          description: The ID of the user that created the schedule.
        updatedUserId:
          type: string
          description: The ID of the user who last updated the schedule.
        state:
          type: string
          description: When REGISTERING, a schedule has recently being created, and
            is in the process of being registered on internal systems. It will automatically
            transition into ENABLED once internal systems acknowledge. When ENABLED,
            a schedule will run based on time interval specified and can be triggered
            to run manually via POST /schedules/{scheduleId}/runs. When DISABLED,
            a schedule will not run based on time interval specified and will not
            be allowed to run manually via POST /schedules/{scheduleId}/runs. Only
            schedules in DISABLED state can be deleted via DELETE /schedules/{scheduleId}.
          enum:
          - REGISTERING
          - ENABLED
          - DISABLED
        query:
          $ref: '#/components/schemas/query_def'
        schedule:
          $ref: '#/components/schemas/schedules_request'
        created:
          type: string
          description: 'UTC time when schedule was submitted. Note: We don''t return
            this parameter in response for POST /schedules'
        updated:
          type: string
          description: 'UTC time when schedule was last updated. Note: We don''t return
            this parameter in response for POST /schedules'
        _links:
          $ref: '#/components/schemas/schedules_links'
    schedules_list:
      required:
      - _links
      - _page
      - schedules
      - version
      type: object
      properties:
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/schedules'
        _page:
          $ref: '#/components/schemas/_page'
        _links:
          $ref: '#/components/schemas/schedules_list_links'
        version:
          type: integer
          description: REST API version of this resource
      description: List of schedules
    schedules_run:
      required:
      - _links
      - created
      - externalTrigger
      - id
      - state
      - version
      type: object
      properties:
        id:
          type: string
        created:
          type: string
        state:
          type: string
        externalTrigger:
          type: boolean
          description: States if the given run was triggered via a POST /schedules/{scheduleId}/runs
        _links:
          $ref: '#/components/schemas/schedules_runs_by_id_links'
        version:
          type: integer
          description: REST API version of this resource
    schedules_run_list:
      required:
      - _links
      - _page
      - runsSchedules
      - version
      type: object
      properties:
        runsSchedules:
          type: array
          items:
            $ref: '#/components/schemas/schedules_run'
        _page:
          $ref: '#/components/schemas/_page'
        _links:
          $ref: '#/components/schemas/runs_schedules_list_links'
        version:
          type: integer
          description: REST API version of this resource
      description: List of schedules runs
    schedules_run_details:
      required:
      - _links
      - created
      - externalTrigger
      - id
      - state
      type: object
      properties:
        created:
          type: string
          description: Execution date of the run.
        state:
          type: string
          description: State of the given run.
          enum:
          - SUCCESS
          - IN_PROGRESS
          - FAILED
        taskStatusList:
          type: array
          description: List of task related to given run.
          items:
            $ref: '#/components/schemas/task_detail'
        id:
          type: string
          description: Run id.
        scheduleId:
          type: string
          description: Schedule id.
        externalTrigger:
          type: boolean
          description: States if the given run was triggered via a POST /schedules/{scheduleId}/runs
        _links:
          $ref: '#/components/schemas/schedules_runs_by_id_links'
      description: Schedule run details
    schedules_create_request:
      required:
      - query
      - schedule
      type: object
      properties:
        query:
          $ref: '#/components/schemas/query_def'
        schedule:
          $ref: '#/components/schemas/schedules_request'
    task_detail:
      type: object
      properties:
        duration:
          type: string
          description: Amount of seconds took to complete this run.
        endDate:
          type: string
          description: End date of this run.
        state:
          type: string
          description: State of the task.
          enum:
          - SUCCESS
          - IN_PROGRESS
          - FAILED
          - QUEUED_FOR_RETRY
          - QUEUED
        message:
          type: string
          description: Message giving more information related to this run.
        startDate:
          type: string
          description: The start date of this run.
        taskId:
          type: string
          description: The task ID of this run.
    template_count:
      type: object
      properties:
        totalCount:
          type: integer
          description: Total Template count.
        version:
          type: integer
          description: REST API version of this resource
      description: Total Query Template count Response.
    query_template_def:
      required:
      - name
      - sql
      type: object
      properties:
        sql:
          type: string
          description: Required. User can either use standard SQL or parameter replacement.
            If using parameter replacement, the user must provide keys, such as "$key",
            in the SQL and pass the parameters as JSON key value pairs. The values
            that are passed in here will be the default parameters used in the template.
            If the user wishes to override these parameters, the user must override
            them in the POST request.
          example: SELECT $key from $key1 where $key > $key2;
        queryParameters:
          type: object
          properties:
            key:
              type: string
              example: value
            key1:
              type: string
              example: value1
            key2:
              type: string
              example: value2
          description: Required if using parameter replacement. A key value pairing
            for replacing values in the SQL. No value type checking will be done.
        name:
          type: string
          description: Name for the template.
      description: Description of Query template to submit.
    query_template:
      required:
      - id
      - lastUpdatedBy
      - name
      - sql
      - updated
      - userId
      type: object
      properties:
        id:
          type: string
          description: Query template id.
        sql:
          type: string
          description: Required. User can either use standard SQL or parameter replacement.
            If using parameter replacement, the user must provide keys, such as "$key",
            in the SQL and pass the parameters as JSON key value pairs.
          example: SELECT $key from $key1 where $key > $key2;
        queryParameters:
          type: object
          properties:
            key:
              type: string
              example: value
            key1:
              type: string
              example: value1
            key2:
              type: string
              example: value2
          description: Required if using parameter replacement. A key value pairing
            for replacing values in the SQL. No value type checking will be done.
        name:
          type: string
          description: Name for the template.
        updated:
          type: string
          description: UTC time when query template was last updated.
        lastUpdatedBy:
          type: string
          description: The ID of the user who last updated the template.
        userId:
          type: string
          description: The ID of the user who created the template.
        _links:
          $ref: '#/components/schemas/query_template_links'
      description: Query Template Response.
    query_template_links:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              description: URI of this resource
            method:
              type: string
              description: the HTTP method to use
        update:
          type: object
          properties:
            href:
              type: string
              description: URI to update this resource
            method:
              type: string
              description: the HTTP method to use
            body:
              type: string
              description: the JSON body to send
        delete:
          type: object
          properties:
            href:
              type: string
              description: URI to delete this resource
            method:
              type: string
              description: the HTTP method to use
    query_template_list:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/query_template'
        _page:
          $ref: '#/components/schemas/_page'
        _links:
          $ref: '#/components/schemas/query_list_template_links'
        version:
          type: integer
          description: REST API version of this resource
      description: List of queries
    query_list_template_links:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/next'
        prev:
          $ref: '#/components/schemas/prev'
    query_template_delete:
      type: object
      properties:
        message:
          type: string
          description: Message string.
        statusCode:
          type: string
          description: Status code
    schedule_patch_operation:
      required:
      - op
      - path
      - value
      type: object
      properties:
        op:
          type: string
          description: patch operation
          enum:
          - replace
        path:
          type: string
          description: path to patch
          enum:
          - /state
          - /schedule/schedule
        value:
          type: string
          description: value of path
    subscribe_user_to_alert_body:
      required:
      - alertType
      - assetId
      - subscriptions
      type: object
      properties:
        assetId:
          type: string
          description: The query or schedule ID that you want the alert to track.
          example: a679dd0e-bcb2-4e69-a610-22d17ba98cac
        alertType:
          type: string
          description: The state of query execution that you want to trigger an alert.
            The alert type is one of three values (`start`, `success`, `failure`).
          example: failure
        subscriptions:
          required:
          - emailIds
          - emailNotifications
          - inContextNotifications
          type: object
          properties:
            emailIds:
              type: array
              description: A list of email address identifiers for the users you are
                subscribing. These must be Adobe-registered email addresses. The maximum
                number of `emailID`s that can be registered at once is five.
              items:
                $ref: '#/components/schemas/emailIdForSubscribing'
            inContextNotifications:
              type: boolean
              description: A `true` value indicates that the users want to receive
                an alert through the Platform UI. A `false` value means that the users
                will not be sent alerts in the Platform UI.
              example: true
            emailNotifications:
              type: boolean
              description: A `true` value indicates that the users want to receive
                an alert via email. A `false` value means that the users will not
                be sent alerts via email. To receive email alerts you must first enable
                this setting within the UI. See the documentation for [instructions
                on how to enable email alerts](https://experienceleague.adobe.com/docs/experience-platform/observability/alerts/ui.html?lang=en#enable-email-alerts).
              example: true
          description: This object provides the details of the users that you want
            to receive the alert, including the preferred delivery method. You must
            include their email ID and preferred notification channels for the alerts.
      description: The request payload used to subscribe `emailId`s to query or schedule
        IDs for a given alert type.
    emailIdForSubscribing:
      type: string
      description: A list of Adobe registered `emailID`s that want to subscribe to
        the alert for a given `assetId` and `alertType`.
      example: rrunner@adobe.com
    alert_subscription_response_body:
      type: object
      properties:
        id:
          type: string
          description: The alert name that appears in the Alerts tab of the Adobe
            Experience Platform UI.
          example: a679dd0e-bcb2-4e69-a610-22d17ba98cac
        assetId:
          type: string
          description: The query or schedule ID that the alert is created for and
            subscribed to.
          example: 4422fc69-eaa7-464e-945b-63cfd435d3d1
        alertType:
          type: string
          description: This property determines the state of query execution that
            triggers a user to receive an alert. The alert type is one of three values
            (`start`, `success`, `failure`).
          example: failure
        subscriptions:
          $ref: '#/components/schemas/SubscriptionsBasic'
        _links:
          $ref: '#/components/schemas/alert_links'
      description: The response when subscribing `emailID`s to an alert for an `assetId`
        and `alertType`.
    alert_links:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              description: The URI to get subscribers information for a given `assetId`.
              example: https://platform.adobe.io/data/foundation/query/alert-subscriptions/c4f67291-1161-4943-bc29-8736469bb928
            method:
              type: string
              description: The HTTP method to use.
              example: GET
          description: An object that contains the method and URI required to return
            subscriber information for a given `assetId`.
        subscribe:
          type: object
          properties:
            href:
              type: string
              description: The URI to subscribe new users to an alert.
              example: https://platform.adobe.io/data/foundation/query/alert-subscriptions
            method:
              type: string
              description: The HTTP method to use.
              example: POST
            body:
              type: string
              description: The JSON body to send.
              example: '{\"assetId\": \"queryId/scheduleId\", \"alertType\": \"start/success/failure\",
                \"subscriptions\": {\n\"emailIds\": [\"xyz@example.com\", \"abc@example.com\"],
                \"email\": true, \"inContext\": false}}'
          description: An object that contains the method and URI required to subscribe
            new users to an alert.
        patch_status:
          type: object
          properties:
            href:
              type: string
              description: The URI to update the status of an alert for a given `assetId`
                and `alertType` between `enable` and `disable`.
              example: https://platform.adobe.io/data/foundation/query/alert-subscriptions/c4f67291-1161-4943-bc29-8736469bb928/failure
            method:
              type: string
              description: The HTTP method to use.
              example: PATCH
            body:
              type: string
              description: The JSON body to send.
              example: '{ \"op\": \"replace\", \"path\": \"/status\", \"value\": \"enable/disable\"
                }'
          description: An object that contains the method and URI required to update
            the status of an alert for a given `assetId` and `alertType` between `enable`
            and `disable`.
        get_list_of_subscribers_by_alert_type:
          type: object
          properties:
            href:
              type: string
              description: Return a list of all subscribers for given `assetId` and
                `alertType`.
              example: https://platform.adobe.io/data/foundation/query/alert-subscriptions/c4f67291-1161-4943-bc29-8736469bb928/failure
            method:
              type: string
              description: The HTTP method to use.
              example: GET
          description: An object that contains the method and URI required to return
            a list of all subscribers for given `assetId` and `alertType`.
        delete:
          type: object
          properties:
            href:
              type: string
              description: The URI to delete an alert for particular `assetId` and
                `alertType`.
              example: https://platform.adobe.io/data/foundation/query/alert-subscriptions/c4f67291-1161-4943-bc29-8736469bb928/failure
            method:
              type: string
              description: The HTTP method to use.
              example: DELETE
          description: An object that contains the method and URI required to delete
            an alert for particular `assetId` and `alertType`.
      description: An object that contains information such as the URIs and methods
        for common alert subscriptions use cases.
    alerts_per_imsorg_and_sandbox:
      type: object
      properties:
        alerts:
          type: array
          description: A list of alerts that match the parameters of the listing call.
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Id'
              alertType:
                $ref: '#/components/schemas/AlertType'
              status:
                $ref: '#/components/schemas/Status'
              assetId:
                $ref: '#/components/schemas/AssetId'
              _links:
                $ref: '#/components/schemas/alert_links'
        _page:
          $ref: '#/components/schemas/PagingProperties'
        _links:
          $ref: '#/components/schemas/query_list_links'
        version:
          $ref: '#/components/schemas/version'
    alerts_per_imsorg_and_sandbox_response:
      type: object
      properties:
        alerts:
          $ref: '#/components/schemas/CoreAlertProperties'
        _page:
          $ref: '#/components/schemas/PagingProperties'
        _links:
          $ref: '#/components/schemas/query_list_links'
        version:
          $ref: '#/components/schemas/version'
      description: All alerts per organization and sandbox.
    CoreAlertProperties:
      type: object
      properties:
        id:
          type: string
          description: A unique system-generated ID for the alert.
          example: query_service_flow_run_success-4422fc69-eaa7-464e-945b-63cfd435d3d1
        assetId:
          type: string
          description: The query or schedule ID that the alert is created for and
            subscribed to.
          example: 4422fc69-eaa7-464e-945b-63cfd435d3d1
        alertType:
          type: string
          description: This property determines the state of query execution that
            triggers a user to receive an alert. The alert type is one of three values
            (`start`, `success`, `failure`).
          example: start
        status:
          type: string
          description: This represents the status of the alert. It is one of four
            values (enabled, enabling, disabled, disabling).
          example: enabled
      description: Contains properties to describe the query ID, alert ID, type, and
        status of alert.
    subscribers_for_alert_by_assetId:
      type: object
      properties:
        alerts:
          type: array
          description: A list of alerts that match the parameters of the listing call.
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Id'
              alertType:
                $ref: '#/components/schemas/AlertType'
              status:
                $ref: '#/components/schemas/Status'
              assetId:
                $ref: '#/components/schemas/AssetId'
              subscriptions:
                $ref: '#/components/schemas/Subscriptions'
              _links:
                $ref: '#/components/schemas/alert_links'
      description: Alert information and Email IDs for all users subscribed for alerts
        on a particular query.
    Subscriptions:
      $ref: '#/components/schemas/SubscriptionEmailIdsByChannel'
    SubscriptionsBasic:
      type: object
      properties:
        emailNotifications:
          type: array
          description: A list of the email IDs subscribed to notifications by email.
          items:
            type: object
            example: rrunner@adobe.com
        inContextNotifications:
          type: array
          description: A list of the email IDs subscribed to notifications within
            the Platform UI.
          items:
            type: object
            example: rrunner@adobe.com
      description: An object that contains two arrays of subscriber email IDs divided
        by their selected notification channel.
    _links:
      $ref: '#/components/schemas/query_list_links'
    subscribers_for_alert_by_assetId_and_alertType:
      type: object
      properties:
        alerts:
          type: array
          description: A list of alerts that match the parameters of the listing call.
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/AlertId'
              assetId:
                $ref: '#/components/schemas/AssetId'
              alertType:
                $ref: '#/components/schemas/AlertTypeSuccess'
              status:
                $ref: '#/components/schemas/Status'
              subscriptions:
                $ref: '#/components/schemas/Subscriptions'
              _links:
                $ref: '#/components/schemas/alert_links'
      description: A list of alerts for an `assetId` and `alertType`.
    alert_patched:
      $ref: '#/components/schemas/CoreAlertProperties'
    alert_patched_bad_request_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error.
          example: 'An invalid alertType was provided. Valid values are: start, success
            and failure.'
        statusCode:
          $ref: '#/components/schemas/BadRequestError'
      description: The error response for a 400 status to patch an alert.
    alert_patched_not_found_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error.
          example: 'No alert exists for assetId: 24a218c7-1738-4f56-95fb-df62928751a680
            and alertType: start. Please resubmit with different assetId and alertType.'
        statusCode:
          $ref: '#/components/schemas/NotFoundError'
      description: The error response for a 404 status to patch an alert.
    alert_deleted:
      type: object
      properties:
        message:
          type: string
          description: A message string that contains the `assetId` and the `alertType`,
            confirms the alert has been deleted.
          example: 'Alert deleted successfully for assetId: 6df22232-f427-4250-a4e1-43cd30990641
            and alertType: success'
        statusCode:
          type: string
          description: The status code.
          example: "200"
      description: An alert has been deleted for the `assetId` and `alertType` provided
        in the URI.
    alert_deleted_bad_request_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error.
          example: 'An invalid alertType was provided. Valid values are: start, success
            and failure'
        statusCode:
          $ref: '#/components/schemas/BadRequestError'
      description: The error response for a 400 status to delete an alert.
    alert_deleted_not_found_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error.
          example: 'No alert exists for assetId: c4f67291-1161-4943-bc29-8736469bb92w8
            and alertType: success. Please resubmit with different assetId and alertType.'
        statusCode:
          $ref: '#/components/schemas/NotFoundError'
      description: The error response for a 404 status to delete an alert.
    get_alerts_to_which_user_subscribed_bad_request_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error.
          example: 'The emailId: unregistered@adobe.com is not an Adobe registered
            ID. Please use another emailId'
        statusCode:
          $ref: '#/components/schemas/BadRequestError'
      description: The error response for a 400 status for a request to return all
        the alerts a user is subscribed to.
    alerts_to_which_user_subscribed_response:
      type: object
      properties:
        items:
          type: array
          description: A list of alerts that match the parameters of the listing call.
          items:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/AlertName'
              assetId:
                $ref: '#/components/schemas/AssetId'
              status:
                $ref: '#/components/schemas/Status'
              alertType:
                $ref: '#/components/schemas/AlertType'
              subscriptions:
                $ref: '#/components/schemas/notification_channels'
              _links:
                $ref: '#/components/schemas/alert_links'
        page:
          $ref: '#/components/schemas/PagingProperties'
        _links:
          $ref: '#/components/schemas/query_list_links'
        version:
          $ref: '#/components/schemas/version'
      description: Information about a particular alert.
    notification_channels:
      type: object
      properties:
        inContextNotifications:
          type: boolean
          description: A true value indicates that the user, identified by their email
            ID, wants to receive an alert through the Experience Platform UI. A false
            value would not provide an alert in the Adobe Experience Platform UI.
          example: true
        emailNotifications:
          type: boolean
          description: A true value indicates that the user, identified by their email
            ID, wants to receive an alert by email. A false value would not provide
            an alert via email.
          example: false
      description: A boolean value to confirm the channel of alert notification subscribed
        to by the user.
    SubscriptionEmailIdsByChannel:
      type: object
      properties:
        emailNotifications:
          $ref: '#/components/schemas/Email_ID_emailNotifications'
        inContextNotifications:
          $ref: '#/components/schemas/Email_ID_inContextNotifications'
      description: An object that contains two arrays of subscriber email IDs divided
        by their selected notification channel.
    Email_ID_emailNotifications:
      type: array
      description: A list of the email IDs subscribed to notifications by email.
      items:
        type: object
        example: rrunner@adobe.com, jsnow@adobe.com, keverdeen@adobe.com
    Email_ID_inContextNotifications:
      type: array
      description: A list of the email IDs subscribed to notifications within the
        Platform UI.
      items:
        type: object
        example: jsnow@adobe.com, keverdeen@adobe.com
    get_alert_subscription_for_asset_id_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error to explain the problem and instruct
            how to resolve the issue.
          example: 'No alert exists for assetId: e5fb-62928751a680. Please resubmit
            with different assetId.'
        statusCode:
          $ref: '#/components/schemas/NotFoundError'
      description: The error response for a 404 status when requesting alert information
        for an asset ID.
    get_alert_subscription_for_asset_id_and_alert_type_not_found_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error to explain the problem and instruct
            how to resolve the issue.
          example: 'No alert exists for assetId: c4f67291-1161-4943-bc29-8736469bb928sa
            and alertType: failure. Please resubmit with different assetId and alertType.'
        statusCode:
          $ref: '#/components/schemas/NotFoundError'
      description: The error response for a 404 status when requesting subscriber
        information for an asset ID and alert type.
    get_alert_subscription_for_asset_id_and_alert_type_bad_request_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error to explain the problem and instruct
            how to resolve the issue.
          example: 'An invalid alertType was provided. Valid values are: start, success
            and failure.'
        statusCode:
          $ref: '#/components/schemas/BadRequestError'
      description: The error response for a 400 status when requesting subscriber
        information for an asset ID and alert type.
    post_bad_request_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error.
          example: 'The provided emailId: scoobydoo@adobe.com is not an Adobe registered
            ID. Please use another emailId.'
        statusCode:
          $ref: '#/components/schemas/BadRequestError'
      description: The error response for a 400 status for a request to create and
        subscribe to a new alert.
    post_not_found_error_message:
      type: object
      properties:
        message:
          type: string
          description: A description of the error.
          example: 'The provided assetId: 24a218c7-1738-4f56-95fb-asda62928751a680
            is invalid. Retry with another assetId.'
        statusCode:
          $ref: '#/components/schemas/NotFoundError'
      description: The error response for a 404 status for a request to create and
        subscribe to a new alert.
    Id:
      type: string
      description: The alert name that appears in the Alerts tab of the Adobe Experience
        Platform UI.
      example: query_service_flow_run_failure-5cdc3bbe-750a-4d80-9c43-96e5e09f1a96
    AlertId:
      type: string
      description: The alert name that appears in the Alerts tab of the Adobe Experience
        Platform UI.
      example: a679dd0e-bcb2-4e69-a610-22d17ba98cac
    AlertType:
      type: string
      description: This property determines the state of query execution that triggers
        a user to receive an alert. The alert type is one of three values (`start`,
        `success`, `failure`).
      example: failure
    AlertTypeSuccess:
      type: string
      description: This property determines the state of query execution that triggers
        a user to receive an alert. The alert type is one of three values (`start`,
        `success`, `failure`).
      example: success
    Status:
      type: string
      description: This represents the status of the alert. It is one of four values
        (`enabled`, `enabling`, `disabled`, `disabling`).
      example: enabled
    AssetId:
      type: string
      description: The query or schedule ID that the alert is created for and subscribed
        to.
      example: 6df22232-f427-4250-a4e1-43cd30990641
    AlertName:
      type: string
      description: The name of the alert. This name is generated automatically by
        Adobe Experience Platform.
      example: query_service_flow_run_success-8f057161-b312-4274-b629-f346c7d15c1f
    NotFoundError:
      type: object
      description: An HTTP status code that indicates the page, or resource you are
        looking for cannot be found.
      example: 404
    BadRequestError:
      type: object
      description: An HTTP status code that indicates the server cannot or will not
        process the request due to something that is perceived to be a client error.
      example: 400
    UnauthorizedError:
      type: object
      description: An HTTP status code that indicates the request has not been applied
        because it lacks valid authentication credentials for the target resource.
      example: 401
    InternalServerError:
      type: object
      description: An HTTP status code that indicates the server has encountered an
        unexpected condition that prevented it from fulfilling the request.
      example: 500
  parameters:
    authorization:
      name: Authorization
      in: header
      description: The access token which can be copied from your Experience Platform
        integration, prefixed with "Bearer " (for example, `Bearer {ACCESS_TOKEN}`).
        For more information on how to obtain this value, visit the documentation
        covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      required: true
      schema:
        type: string
    x-gw-ims-org-id:
      name: x-gw-ims-org-id
      in: header
      description: The Organization ID which can be copied from your Experience Platform
        integration. For more information on how to obtain this value, visit the documentation
        covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      required: true
      schema:
        type: string
    x-api-key:
      name: x-api-key
      in: header
      description: The API key which can be copied from your Experience Platform integration.
        For more information on how to obtain this value, visit the documentation
        covering making API calls in the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      required: true
      schema:
        type: string
    x-sandbox-name:
      name: x-sandbox-name
      in: header
      description: The name of the sandbox in which the operation will take place.
        See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
        for more information.
      required: true
      schema:
        type: string
    x-sandbox-name-not-required:
      name: x-sandbox-name
      in: header
      description: The name of the sandbox in which the operation will take place.
        See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
        for more information.
      schema:
        type: string
    x-sandbox-id:
      name: x-sandbox-id
      in: header
      description: The unique identifier of the sandbox in which the operation will
        take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)
        for more information.
      schema:
        type: string
    x-service-token:
      name: x-service-token
      in: header
      description: An optional key used to authenticate access.
      schema:
        type: string
    json-header:
      name: Content-Type
      in: header
      description: The type of content being sent in the body of the request. The value should be 'application/json'.
      required: true
      schema:
        type: string
    accept-encoding:
      name: Accept-Encoding
      in: header
      description: This request header indicates the type of content encoding that
        the client can understand when consuming compressed response bodies. It is
        usually a compression algorithm. Accepted values include `gzip` and `identity`.
      schema:
        type: string
    template_count_property:
      name: property
      in: query
      description: "Comma-separated filters. Examples below are given with unsafe\
        \ HTML characters for clarity, but all content MUST be HTML escaped.\n\n \
        \ Currently only userId is allowed in filtering count.\nExample: property=userId=={USER_ID}\n\
        \ "
      schema:
        type: string
    template_property:
      name: property
      in: query
      description: "Comma-separated filters.\n\n List of properties that allow filtering:\n\
        \ name\n userId\n\n lastUpdatedBy\n Supported operators:\n'~' (contains).\
        \ This operator can only be used on the name property. \n '==' (equal to).\
        \ This operator can be used on both the userId and the lastUpdatedBy properties.\
        \ \n\n Example: property=name~Sample query\n\n  \n  Example: property=userId=={USER_ID}"
      schema:
        type: string
    isPrevLink:
      name: isPrevLink
      in: query
      description: Field indicating if the URI is a previous link.
      schema:
        type: boolean
    queries_orderby:
      name: orderby
      in: query
      description: 'Field to order results by. Supported fields: created, updated.
        Prepend property name with + for ASC,- for DESC order. Default is -created.
        Note that the plus sign (+) has to be escaped with %2B. Example: %2Bcreated
        for ASC created.'
      schema:
        type: string
    schedules_orderby:
      name: orderby
      in: query
      description: 'Field to order results by. Supported fields: created, updated.
        Prepend property name with + for ASC,- for DESC order. Default is -created.
        Note that the plus sign (+) has to be escaped with %2B. Example: %2Bcreated
        for ASC created.'
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Hint on number of records to fetch per page.
      schema:
        type: integer
    start:
      name: start
      in: query
      description: Start value of property specified using orderby.
      schema:
        type: string
    queries_property:
      name: property
      in: query
      description: "Comma-separated filters. Examples below are given with unsafe\
        \ HTML characters for clarity, but all content MUST be HTML escaped.\n\n List\
        \ of properties that allow filtering with all operators:\n created\n updated\n\
        \ state\n id\n\n List of supported operators:\n '>'  (greater than)\n '<'\
        \  (less than)\n '>=' (greater than or equal to)\n '<=' (less than or equal\
        \ to)\n '==' (equal to)\n '!=' (not equal to)\n '~' (contains)\n\n Examples\
        \ with filters that support all operators:\n * Get query with match on id:\n\
        \ id==6ebd9c2d-494d-425a-aa91-24033f3abeec\n * Get me queries created after\
        \ a timestamp, and with a specific state:\n created>=2017-04-05T13:30:00Z,state==IN_PROGRESS\n\
        \nFiltering is also allowed with limited operators on the following properties:\n\
        \ * the referenced_datasets and userId property. This filter only allows the\
        \ '==' equal to operator, and up to 10 dataset ids can be included by using\
        \ the '||' logical OR operator. \n Example: referenced_datasets==aabbcc||ddeeff\n\
        \ * the SQL property. This filter only allows the '~' contains operator, and\
        \ only one SQL string WITHOUT COMMA (,) can be included.\n Example: sql~SELECT\
        \ c1\n * the templateId property: This filter only allows the '==' equal to\
        \ operator, and only one template ID can be included. \n Example: templateId=3e61c592-05de-422e-99be-24712c07fc29\n\
        \ * the templateName property: This filter only allows the '~' contains operator,\
        \ and only one templateName can be included. \n Example: templateName~sample-template-name\
        \ \n * the client property. This filter only allows the '==' equal to operator,\
        \ and only one SQL string WITHOUT COMMA (,) can be included.\n Example: client==API\n\
        \ * the scheduleId and scheduleRunId properties. These filters only allow\
        \ the '==' equal to operator.\n Example: scheduleId==bWFudWFsX18yMDE4LTEwLTEyVDA0OjM2OjE5LjkzNzI2Nw==,scheduleRunId==manual__2018-10-12T05:11:40.816520\n\
        \n Example of a complex search with multiple filters:\n * Get me queries that\
        \ utilize two specific datasets,submitted by a particular user, and that include\
        \ the string 'SELECT c1' in the SQL body: referenced_datasets==aabbcc||ddeeff,userId=1234@AdobeId,sql~SELECT\
        \ c1"
      schema:
        type: string
    schedules_property:
      name: property
      in: query
      description: "Comma-separated filters.\n\n List of properties that allow filtering\
        \ with all operators:\n created\n List of supported operators:\n '>'  (greater\
        \ than)\n '<'  (less than)\n Examples with filters that support all operators:\n\
        \ * Get me schedules created after a timestamp:\n created>2017-04-05T13:30:00Z\n\
        \nFiltering is also allowed with limited operators on the following properties:\n\
        \ * the templateId property. This filter only allows the '==' equal to operator.\
        \ \n Example: templateId==123412354\n * the userId property. This filter only\
        \ allows the '==' equal to operator. \n Example: userId==123412354\n"
      schema:
        type: string
    schedules_runs_property:
      name: property
      in: query
      description: |-
        Comma-separated filters. Examples below are given with unsafe HTML characters for clarity, but all content MUST be HTML escaped.

         Properties that allow filtering :
         created
         Supported operators:
         '>'  (greater than)
         '<'  (less than)
         state
         Supported operators:
         '==' (equal to)
         '!=' (not equal to)
         externalTrigger
         List of supported operators:
         '==' (equal to)

         Examples with filters that support all operators:
         * Get me  runs created after a timestamp:
         created>2017-04-05T13:30:00Z
         * Get me  runs that have failed: state==FAILED * Get me runs that were manually triggered, and that succeeded: externalTrigger==true,state==SUCCESS
      schema:
        type: string
    excludeSoftDeleted:
      name: excludeSoftDeleted
      in: query
      description: Whether to include any queries that have been soft deleted. Defaults
        to true.
      schema:
        type: boolean
    excludeHidden:
      name: excludeHidden
      in: query
      description: Whether to include any queries that have been found to be not interesting,
        as they were not user driven. Examples include CURSOR definitions, FETCH,
        and Metadata queries. Defaults to true.
      schema:
        type: boolean
    x-request-id:
      name: x-request-id
      in: header
      description: An optional header that serves as a tracking ID for the request.
        If one is not provided on the request, the server generates one automatically.
      schema:
        type: string
    User-Agent:
      name: User-Agent
      in: header
      description: The type of the client making the HTTP request.
      schema:
        type: string
  examples:
    SqlAcceleratedQueryDefinition:
      description: A payload for an accelerated query request that includes SQL in the payload.
      value:
        dbName: acmesbox1:acmeacceldb:accmeaggschema
        sql: SELECT * FROM accounts;                    
        name: Accelerated Query Sample
        description: A sample of an accelerated query.
    TemplateIdAcceleratedQueryDefinition:
      description: A payload for an accelerated query request that includes a template ID in the payload.
      value:
        dbName: acmesbox1:acmeacceldb:accmeaggschema 
        templateId: f7cb5155-29da-4b95-8131-8c5deadfbe7f
        name: A Templated Accelerated Query Sample
        description: A sample of an accelerated query request that uses a template ID. 
    SqlAcceleratedQueryResponse:
      description: A sample response for an accelerated query request that used SQL directly in the payload.
      value:
        queryId: ba7aa60c-f5ab-47de-b980-c30789108efe
        resultsMeta:
          _adhoc:
            type: string
            meta:xdmType: string
            properties:
              Industry_name:
                type: string
                meta:xdmType: string
                default:
              Industry_code:
                type: integer
                meta:xdmType: int,
                maximum: 2147483647
                minimum: -2147483648
              Value:
                type: number
                meta:xdmType: number
                maximum: null,
                minimum:
              Active_customer:
                type: boolean
                meta:xdmType: boolean
        results:
          Industry_name: Acme
          Industry_code: 23
          Value: 93141
          column_name_boolean_type: true
        request:
          dbName: acmesbox1:acmeacceldb:accmeaggschema
          sql: SELECT * FROM accounts;                    
          name: Accelerated Query Sample
          description: A sample of an accelerated query.
    TemplateIdAcceleratedQueryResponse:
      description: A sample response for an accelerated query request that used a template ID in the payload.
      value:
        queryId: ba7aa60c-f5ab-47de-b980-c30789108efe
        resultsMeta:
          _adhoc:
            type: string
            meta:xdmType: string
            properties:
              Industry_name:
                type: string
                meta:xdmType: string
                default:
              Industry_code:
                type: integer
                meta:xdmType: int,
                maximum: 2147483647
                minimum: -2147483648
              Value:
                type: number
                meta:xdmType: number
                maximum: null,
                minimum:
              Active_customer:
                type: boolean
                meta:xdmType: boolean
        results:
          Industry_name: Acme
          Industry_code: 23
          Value: 93141
          column_name_boolean_type: true
        request:
          dbName: acmesbox1:acmeacceldb:accmeaggschema
          templateId: f7cb5155-29da-4b95-8131-8c5deadfbe7f
          name: Second Accelerated Query Sample
          description: Another sample of an accelerated query.
