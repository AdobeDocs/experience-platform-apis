swagger: '2.0'
info:
  title: Observability Insights API

  description: >-
    The Observability Insights API is used to collect and expose metrics data from various components of Observability. It listens to events broadcasting on the data pipeline and collects metrics on resources and statistics on data ingestion.
    
    * Related documentation:
      * [Observability Insights documentation](http://www.adobe.com/go/observability-overview-en)

    * Visualize API calls with Postman (a free, third-party software):
      * [Observability Insights API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Observability%20Insights.postman_collection.json)
      * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
      * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    * API paths:
      * PLATFORM Gateway URL: https://<span>platform.adobe.io/
      * Base path for this API: /data/infrastructure/observability/insights
      * Example of a complete path: https://<span>platform.adobe.io/data/infrastructure/observability/insights/metrics

    * Required headers:
      * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      * All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
      * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.
  
    
  version: '1.0.0'
basePath: /data/infrastructure/observability/insights
host: platform.adobe.io
tags:
  - name: Metrics
    description: Observability metrics are parameters used to gain statistical insights into actions being performed in Adobe Experience Platform. These insights include counts of available Platform resources and statistics on data ingestion.
paths:
  /metrics:
    post:
      tags:
        - Metrics
      summary: Retrieve metrics data (V2)
      description: >-
        This endpoint retrieves metric data based on the properties provided in the request payload.

        >**NOTE**: The Observability Insights API currently does not support pagination and returns all matching results in a single response body. To limit response sizes, choose a higher-level `granularity` value or limit the date range indicated by `start` and `end`.
        >
        >For more information on using this operation, see the [metrics endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/observability/api/metrics.html) on Experience League.
      operationId: retrieveMetricsV2
      produces:
       - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-sandbox-name'
        - name: body
          in: body
          schema:
            $ref: '#/definitions/metricsRequest'
          
      responses:
        200:
          description: A successful response returns information on the metrics specified in the request payload.
          schema:
            type: object
            properties:
              metricResponses:
                $ref: '#/definitions/metricsResponses'
    get:
      tags:
        - Metrics
      summary: Retrieve metrics data (V1)
      description: >-
        >**NOTE**: This method is now deprecated. For the latest functionality, please the POST method for this endpoint instead.
        


        The first version of the API allows you to retrieve metric data by supplying applicable metrics in the request path as query parameters.
      deprecated: true
      operationId: retrieveMetricsV1
      produces:
        - application/json
        - application/problem+json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/metric'
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/dateRange'
      responses:
        200:
          description: A successful response returns information on the metrics specified in the request path.
          schema:
            type: array
            items:
              $ref: '#/definitions/v1Response'
        400:
          description: Something was wrong with the request. Typically this means an invalid metric was provided.
          schema:
            $ref: '#/definitions/400error'  
      
definitions:
  metricsRequest:
    type: object
    properties:
      start:
        type: string
        description: An ISO 8601 timestamp that represents the start of the date range to return metrics from.
        example: '2020-07-14T00:00:00.000Z'
      end:
        type: string
        description: An ISO 8601 timestamp that represents the end of the date range to return metrics from.
        example: '2020-07-22T00:00:00.000Z'
      granularity:
        type: string
        description: The time interval that the returned metric data is divided by. For example, a value of `DAY` returns metrics for each day between the start and end date, whereas a value of `MONTH` would group metric results by month instead. When using this field, a corresponding `downsample` property must also be provided to indicate the aggregation function by which to group data.
        example: DAY
      metrics:
        type: array
        description: A list of metrics to query for.
        items:
          $ref: '#/definitions/metricObject'
        example:
          - name: timeseries.ingestion.dataset.recordsuccess.count
            filters:
              - name: dataSetId
                value: 5edcfb2fbb642119194c7d94|5eddb21420f516191b7a8dad
                groupBy: true
            aggregator: sum
            downsample: sum
          - name: timeseries.ingestion.dataset.dailysize
            filters:
              - name: dataSetId
                value: 5eddb21420f516191b7a8dad
                groupBy: false
            aggregator: sum
            downsample: sum
  metricObject:
    type: object
    properties:
      name:
        type: string
        description: The name of the metric.
        example: timeseries.ingestion.dataset.recordsuccess.count
      filters:
        type: array
        description: An optional field that filters metrics by specific datasets. Takes the form of an array of objects (one for each filter).
        items:
          $ref: '#/definitions/filterObject'
      aggregator:
        type: string
        description: Specifies the aggregation function that should be used to group multiple times-series records into single results. For detailed information on available aggregators, refer to the [OpenTSDB documentation](http://opentsdb.net/docs/build/html/user_guide/query/aggregators.html).
        example: sum
      downsample:
        type: string
        description: An optional field that specifies an aggregation function to reduce the sampling rate of metric data by sorting fields into intervals (or “buckets”). The interval for the downsampling is determined by the `granularity` property. For detailed information on downsampling, refer to the [OpenTSDB documentation](http://opentsdb.net/docs/build/html/user_guide/query/downsampling.html).
        example: sum
  metricObjectResponse:
    type: object
    properties:
      name:
        type: string
        description: The name of the metric.
        example: timeseries.ingestion.dataset.recordsuccess.count
      filters:
        type: array
        description: An optional field that filters metrics by specific datasets. Takes the form of an array of objects (one for each filter).
        items:
          $ref: '#/definitions/filterObject'
      datapoints:
        type: array
        description: An array whose objects represent the results of the specified metric and filters. The number of objects in the array depends on the filter options provided in the request. If no filters were provided, the array will only contain a single object that represents all datasets.
        items:
          $ref:  "#/definitions/datapointObject"
      granularity:
        $ref:  "#/definitions/granularity"
  datapointObject:
    type: object
    properties:
      groupBy: 
        type: object
        description: >-
          If multiple datasets were specified in the filter property for a metric, and the groupBy option was set to true in the request, this object will contain the ID of the dataset that the corresponding dps property applies to.

          If this object appears empty in the response, the corresponding dps property applies to all datasets provided in the filters array (or all datasets in Platform if no filters were provided).
        properties:
          datasetID:
            type: string
            description: The ID of the dataset that the corresponding dps property applies to.
      dps:
        type: object
        description: A collection of datapoints for the specified metric, keyed by timestamp.
  filterObject:
    type: object
    properties:
      name:
        type: string
        description: The type of entity to filter metrics against. Currently, only `dataSetID` is supported.
        example: dataSetId
      value:
        type: string
        description: The ID of one or more datasets. Multiple dataset IDs can be provided as a single string, with each ID separated by vertical bar characters (`|`).
        example: 5edcfb2fbb642119194c7d94|5eddb21420f516191b7a8dad 
      groupBy:
        type: boolean
        description: If multiple datasets were specified in the `filters` property for a metric and this this property to true in the request, the response object will contain the ID of the dataset that the corresponding `dps` property applies to. If excluded or set to false, the corresponding `dps` response property applies to all datasets provided in the `filters` array (or all datasets in Platform if no filters were provided).
        example: true
  metricsResponses:
    type: array
    description: An array that contains the returned metrics.
    items:
      $ref: '#/definitions/metricObjectResponse'
    example:
      - metric: timeseries.ingestion.dataset.recordsuccess.count
        filters:
        - name: dataSetId
          value: 5edcfb2fbb642119194c7d94|5eddb21420f516191b7a8dad
          groupBy: true
        datapoints:
        - groupBy:
            dataSetId: 5edcfb2fbb642119194c7d94
          dps:
            '2020-07-14T00:00:00Z': 44
            '2020-07-15T00:00:00Z': 46
            '2020-07-16T00:00:00Z': 36
            '2020-07-17T00:00:00Z': 50
            '2020-07-18T00:00:00Z': 38
            '2020-07-19T00:00:00Z': 40
            '2020-07-20T00:00:00Z': 42
            '2020-07-21T00:00:00Z': 42
            '2020-07-22T00:00:00Z': 50
        - groupBy:
            dataSetId: 5eddb21420f516191b7a8dad
          dps:
            '2020-07-14T00:00:00Z': 44
            '2020-07-15T00:00:00Z': 46
            '2020-07-16T00:00:00Z': 36
            '2020-07-17T00:00:00Z': 50
            '2020-07-18T00:00:00Z': 38
            '2020-07-19T00:00:00Z': 40
            '2020-07-20T00:00:00Z': 42
            '2020-07-21T00:00:00Z': 42
            '2020-07-22T00:00:00Z': 50
        granularity: DAY
      - metric: timeseries.ingestion.dataset.dailysize
        filters:
        - name: dataSetId
          value: 5eddb21420f516191b7a8dad
          groupBy: false
        datapoints:
        - groupBy: {}
          dps:
            '2020-07-14T00:00:00Z': 38455
            '2020-07-15T00:00:00Z': 40213
            '2020-07-16T00:00:00Z': 31476
            '2020-07-17T00:00:00Z': 43705
            '2020-07-18T00:00:00Z': 33227
            '2020-07-19T00:00:00Z': 34977
            '2020-07-20T00:00:00Z': 36735
            '2020-07-21T00:00:00Z': 36737
            '2020-07-22T00:00:00Z': 43715
        granularity: DAY

  metricResponseObject:
    type: object
    properties:
      id:
        type: string
        description: Unique Identifier for your IMS Organization ({IMS_ORG})
      imsOrgId:
        type: string
        description: Unique Identifier for your IMS Organization ({IMS_ORG})
        example: "{IMS_ORG}"
      timeseries:
        $ref: '#/definitions/timeSeriesResponse'
      stats:
        type: object
        description: "Single Stat metrics exposed by the API. For example `{'stats.ingestion.dataset.count': 1000000}`"
        additionalProperties:
          type: string
  v1Response:
    type: object
    properties:
      id:
        type: string
        description: The ID of the metric's associated resource type. Defaults to null if no relevant ID is found.
        example: 'null'
      imsOrgId:
        type: string
        description: The unique identifier for your IMS Organization ({IMS_ORG}).
        example: {IMS_ORG}
      timeseries:
        $ref: '#/definitions/timeSeriesResponse'
      stats:
        type: object
        description: An object containing single-stat metrics exposed by the API.
        example:
          stats.ingestion.dataset.count': 1000000
  timeSeriesResponse:
    type: object
    description: An object containing time-series metrics exposed by the API.
    properties:
      granularity:
        $ref: '#/definitions/granularity'
      items:
        $ref: '#/definitions/itemsResponse'
      _page:
        $ref: '#/definitions/pageResponse'
      _links:
        $ref: '#/definitions/linksResponse'
  granularity:
    type: string
    description: The time interval that the returned metric data is divided by. For example, a value of `DAY` returns metrics for each day between the start and end date, whereas a value of `MONTH` would group metric results by month instead.
    example: DAY
  itemsResponse:
    type: array
    description: A list of returned metrics.
    items:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: An ISO 8601 timestamp for the metrics provided in the sibling `metrics` property.
        metrics:
          type: object
          description: An object containing the queried metric data for the associated `timestamp`.
    example:
      - timestamp: '2020-08-17T00:00:00Z'
        metrics:
          timeseries.ingestion.dataset.size: 102.3
      - timestamp: '2020-08-16T00:00:00Z'
        metrics:
          timeseries.ingestion.dataset.size: 502.0
      - timestamp: '2020-08-15T00:00:00Z'
        metrics:
          timeseries.ingestion.dataset.size: 19.2
      - timestamp: '2020-08-14T00:00:00Z'
        metrics:
          timeseries.ingestion.dataset.size: 1003.5
      - timestamp: '2020-08-13T00:00:00Z'
        metrics:
          timeseries.ingestion.dataset.size: 248.7
      - timestamp: '2020-08-12T00:00:00Z'
        metrics:
          timeseries.ingestion.dataset.size: 175.5
  pageResponse:
    type: string
    description: If the response is paginated, indicates the current pagination value. Returns null in the case of no pagination.
    example: null
  linksResponse:
    type: string
    description: If the response is paginated, includes URL paths to the current and next page in the response. Returns null in the case of no pagination.
    example: null
  400error:
    type: object
    allOf: 
      - $ref: '#/definitions/error'
    example:
      errorCode: OBS-4002
      httpStatus: 400
      title: Invalid Metric Name
      details: Unable to find the metric from the Insights Metric Registry timeseries.ingestion.invalidMetric
  error:
    type: object
    properties:
      errorCode:
        type: string
        description: The error code from Observability Insights.
      httpStatus:
        type: integer
        description: The HTTP status code of the error.
      title:
        type: string
        description: A short summary of the problem type.
      details:
        type: string
        description: An explanation of the problem that occurred.
parameters:
  x-api-key:
    name: x-api-key
    description: 'The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).'
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: 'The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).'
    required: true
    type: string
    in: header
  x-sandbox-name:
    name: x-sandbox-name
    description: 'The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information.'
    required: true
    type: string
    in: header
  authorization:
    name: Authorization
    description: 'The access token which can be copied from your Experience Platform integration, prefixed with "Bearer ". 
    For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).'
    required: true
    type: string
    in: header
  contentType:
    name: Content-Type
    description: The type of content being sent in the body of the request. In POST, PUT, or PATCH requests to the Policy Service API, the value must be set to "application/json".
    type: string
    required: true
    in: header
  metric:
    name: metric
    in: query
    required: true
    type: array
    minItems: 1
    maxItems: 6
    uniqueItems: true
    collectionFormat: multi
    description: Metrics you wish the API to return insights from. Refer to the documentation for a list of [accepted metrics](http://www.adobe.com/go/observability-metrics-en).
    items:
      type: string
  id:
    name: id
    in: query
    required: false
    type: string
    description: ID associated with the resourceType in the metric.
  dateRange:
    name: dateRange
    in: query
    required: false
    type: string
    description: A Date Range in ISO 8601 format. Defaults to 30 days if not present for time-series metrics. Defaults to the last day if not present for single-stat metrics.
