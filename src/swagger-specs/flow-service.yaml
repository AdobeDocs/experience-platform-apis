swagger: '2.0'
info: 
  version: '1.0'
  title: Flow Service API - Sources
  description: >-
    Adobe Experience Platform allows data to be ingested from external sources while providing you with the ability to structure, label, and enhance incoming data using Platform services. You can ingest data from a variety of sources such as Adobe applications, cloud-based storages, databases, and many others. The service provides a RESTful API from which all supported sources are connectable.

    >**NOTE**: Refer to [Flow Service API - Destinations](https://developer.adobe.com/experience-platform-apis/references/destinations/) if you are looking for API documentation to perform operations on *destinations* in Experience Platform.

    - **Related documentation**:
      - [Sources documentation](https://www.adobe.com/go/sources-overview-en)

    - **Visualize API calls with Postman** (a free, third-party software):
      - [Flow Service API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Flow%20Service%20API.postman_collection.json)
      - [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
      - [Steps for importing environments and collections in Postman](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/)

    - **API paths**:
      - PLATFORM Gateway URL: https://<span>platform.adobe.io/
      - Base path for this API: /data/foundation/flowservice
      - Example of a complete path: https://<span>platform.adobe.io/data/foundation/flowservice/connections

    - **Required headers**:
      - All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      - All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
      - All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

    - **API error handling**:
        - Refer to the Experience Platform API troubleshooting guide for [FAQs](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html?lang=en#faq), [API status codes](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html?lang=en#api-status-codes), and [request header errors](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html?lang=en#request-header-errors).

    - **Sorting and filtering responses**:
        - When performing listing (GET) requests in the Flow Service API, you can use query parameters to [sort and filter responses](https://experienceleague.adobe.com/docs/experience-platform/dataflows/api/sort-and-filter.html?lang=en).

host: platform.adobe.io
basePath: /data/foundation/flowservice
tags:
  - name: Connections
    description: Base connections retain information between your source and Adobe Experience Platform. They include metadata, a partial view of the credentials used to authenticate a given source, and the unique base connection ID that corresponds to the queried connection. The base connection ID represents your authenticated connection and allows you to explore and inspect the type, structure, and contents of the data that you want to bring to Experience Platform. The base connection ID is required to create a source connection. An instance of a base connection is specific to an organization.
  - name: Connection specs 
    description: Connection specifications retain the connector properties of a given source. A connection spec can be divided into three distinct sections, authentication specifications (authSpec), source specifications (sourceSpec), and explore specifications (exploreSpec). The authSpec defines the authentication type(s) that you can use to connect your source to Experience Platform. The sourceSpec defines how you can interact with your source, including pagination types, scheduling formats, and query parameters that a given source supports. The sourceSpec also includes the schema that defines the attributes of a source. The exploreSpec defines the structure of returned data when a source is queried against. Connection specs include a connection spec ID. This ID is fixed and each source on Experience Platform has its own fixed connection spec ID. This ID is required to create a base connection and a source connection. Connection specs are organization agnostic.
  - name: Flows
    description: Flows (or dataflows) represent the transfer of data between source and target. They include details on the transformations applied to your data, the current status of your flow, and details on the most recent run iteration of your flow. Flows also contain metadata, attributes inherited from the base, source, and target connections, as well as a unique flow ID. An instance of a flow is specific to an organization.
  - name: Flow specs 
    description: Flow specs retain information that define a flow. They include information on how a flow can be scheduled, whether a flow supports options like partial ingestion and error diagnostics, as well as the parameters required for different mappings from source to target. Flow specs also include information on how a flow run can be created and a list of connection spec IDs and target connection IDs that a given flow can support. Flow specs are organization agnostic.
  - name: Runs
    description: Runs (or flow runs) represent the instance of a flow execution. For example, if a flow is scheduled to run hourly at 9 AM, 10 AM, and 11 AM, then you would have three instances of a run. Runs retain metric summaries on your flow executions, including information on the duration of the run, size of the data, file count, and a status update. An instance of a run is specific to an organization.
  - name: Source connections
    description: Source connections represent the incoming data from a given source. Source connections define where the data is coming from and in what format. Source connections also refer to the base connection for authentication information. For file-based sources like cloud storages, source connections can define additional information on the data transfer, such as column delimiter, encoding type, compression type, regular expressions, and whether ingestion is to be done recursively. An instance of a source connection is specific to an organization.
  - name: Target connections
    description: Target connections represent the outgoing data from a source to a location such as Experience Platform or the data lake. Target connections contain information on your schema, dataset, and the destination of your data. Target connections also include a unique target connection ID that is required in order to create a flow. An instance of a target connection is specific to an organization.

paths:
  /connections:
    get:
      tags:
        - Connections
      summary: List connections
      operationId: listConnections
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/orderby'
        - $ref: '#/parameters/continuationToken'
        - $ref: '#/parameters/count'
      responses:
        '200':
          description: Successful operation. A successful response returns a list of base connections that match the request parameters.
          schema:
            $ref: '#/definitions/ConnectionListResponse'
        '401':
          description: The The OAuth token is missing.
        '503':
          description: The service is unavailable.
    post:
      tags:
        - Connections
      summary: Create a new connection
      operationId: createConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - in: body
          name: body
          description: >-
            - **name** - **(Required)** The name of your base connection. Ensure that the name of your base connection is descriptive as you can use this to look up information on your base connection.

            - **description** - An optional value that you can include to provide more information on your base connection.

            - **auth** - **(Required)** Contains information necessary to authenticate a base connection.
              - **specName** - **(Required)** Specifies the name of the the type of authentication to be used with the base connection.
              - **params** - **(Required)** Contains credentials and values necessary to authenticate and create a connection.
                          
            - **connectionSpec** - **(Required)** Contains information regarding the source's connection specification ID.
              - **id** - **(Required)** The specific connection specification ID associated with source.
              - **version** - Specifies the version of the connection specification ID. Omitting this value will default to the most recent version
            
          required: true
          schema:
            $ref: '#/definitions/CreateConnectionRequest'
      responses:
        '201':
          description: Returns new base connection ID and etag.
          examples:
            application/json:
              id: "f9377f50-607a-4818-b77f-50607a181860"
              etag: "\"03004116-0000-0200-0000-5edfbf2d0000\""
          headers:
            Location:
              description: Location of the newly created connection instance
              type: string
          schema:
            $ref: '#/definitions/CreateConnectionResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/connections/{CONNECTION_ID}':
    get:
      tags:
        - Connections
      summary: Retrieve a connection
      operationId: retrieveConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: CONNECTION_ID
          in: path
          description:
            "The ID of the connection you wish to retrieve."
          required: true
          type: string
      responses:
        '200':
          description: Returns details for specified base connection in JSON format
          schema:
            $ref: '#/definitions/ConnectionListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/connections/{CONNECTION_ID}/test':
    get:
      tags:
        - Connections
      summary: Test a connection's connectivity
      operationId: testConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: CONNECTION_ID
          in: path
          description:
            "The ID of the connection you wish to retrieve."
          required: true
          type: string
      responses:
        '200':
          description: Returns connection status of specified connection ID.
          schema:
            $ref: '#/definitions/TestConnectionResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/connections/{CONNECTION_ID}/explore':
    get:
      tags:
        - Connections
      summary: Explore a connection's contents
      description: You can use this endpoint to explore the contents of the file structure and contents of a connection by its ID.
      operationId: getByConnectionId
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: CONNECTION_ID
          in: path
          description:
            "The {CONNECTION_ID} you wish to retrieve."
          required: true
          type: string
      responses:
        '200':
          description: Returns file structure of specified connection ID, including details regarding type, name, path and if file can be previewed or fetched.
          examples:
            application/json:
              items:
                - type: "folder"
                  name: "test-connectors"
                  path: "test-connectors"
                  canPreview: "false"
                  canFetchSchema: "false"
          schema:
            $ref: '#/definitions/ExploreConnectionResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/connections/{CONNECTION_ID}/':
    patch:
      tags:
        - Connections
      summary: Update an existing connection
      description: You can use this endpoint to update the information about an existing connection.
      operationId: patchConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/if-match'
        - name: CONNECTION_ID
          in: path
          description:
            "The {CONNECTION_ID} you wish to update."
          required: true
          type: string
        - in: body
          name: body
          description: >-
            - **op** - **(Required)** The operation call used to define the action needed to update the connection. Operations include `add`, `replace`, and `remove`.

            - **path** - (Optional) The path of the parameter to be updated.

            - **value** - **(Required)** The new value you want to update your parameter with.
            
          required: true
          schema:
            $ref: '#/definitions/PatchInstruction'
      responses:
        '200':
          description: Connection successfully updated.
          examples:
            application/json:
              id: "139f6a5f-a78b-4744-9f6a-5fa78bd74431"
              etag: "\"3600e378-0000-0200-0000-5f40212f0000\""
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
    delete:
      tags:
        - Connections
      summary: Delete an existing connection
      operationId: deleteConnection 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: CONNECTION_ID
          in: path
          description:
            "The ID of the connection you wish to delete."
          required: true
          type: string
      responses:
        '204':
          description: Connection successfully deleted.
          examples:
            application/json:
              id: "f9377f50-607a-4818-b77f-50607a181860"
              etag: "\"03004116-0000-0200-0000-5edfbf2d0000\""
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  /connectionSpecs:
    get:
      tags:
        - Connection specs
      summary: List connection specifications
      operationId: listConnectionSpecs
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: Returns a list of connection specifications in JSON format.
          schema:
            $ref: '#/definitions/ConnectionSpecResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/connectionSpecs/{CONNECTION_SPEC_ID}':
    get:
      tags:
        - Connection specs
      summary: Retrieve a connection specification
      operationId: retrieveConnectionSpec
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - name: CONNECTION_SPEC_ID
          in: path
          description:
            "The connection specification ID is used to create a base connection."
          required: true
          type: string
      responses:
        '200':
          description: Returns details of specified connection specification in JSON format.
          schema:
            $ref: '#/definitions/ConnectionSpecResponse'
        '401':
          description: The OAuth token is missing.
        '500':
          description: Problem accessing /connectionSpecs/{CONNECTION_ID}
  /flows:
    get:
      tags:
        - Flows
      summary: List flows
      operationId: listFlows
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'        
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/orderby'
        - $ref: '#/parameters/continuationToken'
        - $ref: '#/parameters/count'
      responses:
        '200':
          description: Returns a list of flows in JSON format.
          schema:
            $ref: '#/definitions/FlowListResponse'
        '400':
          description: Header=[x-sandbox-id] not allowed with user token.
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
    post:
      tags:
        - Flows
      summary: Create a flow
      operationId: createFlow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - in: body
          name: body
          description: >-
            - **name** - **(Required)** The name of the flow to be created.

            - **description** - (Optional) The description provides information and details regarding the flow to be created.
            
            - **flowSpec** - **(Required)** The flowSpec contains information regarding flow specifications, including its flow specification ID and version.
              - **id** - The specific flow specification ID used to create a flow.
              - **version** - Specifies the version of the flow specification ID. Omitting this value will default to the most recent version.
            
            - **sourceConnectionIds** - **(Required)** The ID of the source connection generated using the source's base connection ID and connection specification IDs.
            
            - **targetConnectionIds** - **(Required)** The ID of the target connection. This ID is needed to manage a destination connection to Platform.
            
            - **transformations** - **(Required)** Contains various transformations that will be done as part of the flow.
              - **name** - **(Required)** The name assigned to the transformation.
              - **params** - **(Required)** Contains information about the transformation that will be completed. Sources categorized as either CRM or relational database require the use of the "deltaColumn" param. Other categories do not.
              
            - **scheduleParams** - **(Required)** Contains information regarding the ingestion scheduling of the flow.
              - **startTime** - Designates the start time for flow in epoch time in seconds.
              - **frequency** - Designates the scheduled frequency of ingestion for a flow. Valid values include once, minute, hour, day, week.
              - **interval** - Designates the period between two consecutive flow runs. Its assigned value should be a non zero integer. Interval is not required when frequency is set as once, and should be set as equal or greater than 15 if frequency is set on a per minute basis. There are no constraints on interval for other frequency settings.
              - **backfill** - A boolean value that determines what data is initially ingested. If backfill is enabled, all current files in the specified path will be ingested during the first scheduled ingestion. If backfill is disabled, only the files that are loaded in between the first run of ingestion and the Start time will be ingested. Files loaded prior to Start time will not be ingested.
            
              
          required: true
          schema:
            $ref: '#/definitions/CreateFlowRequest'
      responses:
        '201':
          description: Returns new flow ID and etag.
          examples:
            application/json:
              id: ae4532-fe4324-f34vsd32
          headers:
            Location:
              description: Location of the newly created flow instance.
              type: string
          schema:
            $ref: '#/definitions/CreateFlowResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/flows/{FLOW_ID}':
    get:
      tags:
        - Flows
      summary: Retrieve a flow's details
      operationId: retrieveFlow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: FLOW_ID
          in: path
          description:
            "The flow entity with the corresponding ID."
          required: true
          type: string
      responses:
        '200':
          description: Returns details of specified flow in JSON format.
          schema:
            $ref: '#/definitions/FlowListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.

    patch:
      tags:
        - Flows
      summary: Update a flow
      operationId: patchFlow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/if-match'
        - name: FLOW_ID
          in: path
          description:
            "The flow run entity with the corresponding ID."
          required: true
          type: string
        - in: body
          name: body
          description: >-
            - **op** - **(Required)** The operation call used to define the action needed to update the connection. Operations include `add`, `replace`, and `remove`.

            - **path** - (Optional) The path of the parameter to be updated.

            - **value** - **(Required)** The new value you want to update your parameter with.
            
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PatchInstruction'
      responses:
        '200':
          description: The flow was successfully updated.
          schema:
            $ref: '#/definitions/CreateFlowResponse'
        '401':
          description: The OAuth token is missing.
        '403':
          description: Access is forbidden.
        '503':
          description: The service is unavailable.

    delete:
      tags:
        - Flows
      summary: Delete a flow
      operationId: deleteByFlow 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: FLOW_ID
          in: path
          description:
            "The ID of the flow you wish to delete."
          required: true
          type: string
      responses:
        '202':
          description: Flow delete request accepted.
          schema:
            $ref: '#/definitions/FlowListResponse'
        '204':
          description: Flow successfully deleted.
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  /flowSpecs:
    get:
      tags:
        - Flow specs
      summary: List flow specifications
      operationId: listFlowSpecs
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: Returns a list of flow specifications in JSON format.
          schema:
            $ref: '#/definitions/FlowSpecResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/flowSpecs/{FLOW_SPEC_ID}':
    get:
      tags:
        - Flow specs
      summary: Retrieve a flow specification
      operationId: retrieveFlowSpec
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: FLOW_SPEC_ID
          in: path
          description: >-
            The flow spec with the corresponding ID.
          required: true
          type: string
      responses:
        '200':
          description: Returns details of specified flow specification in JSON format.
          schema:
            $ref: '#/definitions/FlowSpecResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  /runs:
    get:
      tags:
        - Runs
      summary: List flow runs
      operationId: listFlowRuns
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/orderby'
        - $ref: '#/parameters/continuationToken'
        - $ref: '#/parameters/count'
      responses:
        '200':
          description: Returns a list of runs in JSON format.
          schema:
            $ref: '#/definitions/FlowRunsListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
    post:
      tags:
        - Runs
      summary: Create a new run
      operationId: createFlowRun
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - in: body
          name: body
          description: >-
            - **status** - **(Required)** The state of the run.
            
            - **flowId** - **(Required)** The flowId associated with the run.
          required: true
          schema:
            $ref: '#/definitions/CreateFlowRunRequest'
      responses:
        '201':
          description: Returns new run ID and etag.
          examples:
            application/json:
              id: ae4532-fe4324-f34vsd32
          headers:
            Location:
              description: Location of the newly created run instance.
              type: string
          schema:
            $ref: '#/definitions/CreateFlowRunResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/runs/{RUN_ID}':
    get:
      tags:
        - Runs
      summary: Retrieve a flow run
      operationId: retrieveFlowRun
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: RUN_ID
          in: path
          description:
            "{The run with the corresponding ID.}"
          required: true
          type: string
      responses:
        '200':
          description: Returns details of specified run in JSON format.
          schema:
            $ref: '#/definitions/FlowRunsListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  /sourceConnections:
    post:
      tags:
        - Source connections
      summary: Create a new source connection
      operationId: createSourceConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - in: body
          name: body
          description: >-
            - **name** - **(Required)** The name of the source connection.
            
            - **baseConnectionId** - **(Required)** The ID of the connection from which the source connection is derived.

            - **description** - (Optional) Provides information and details regarding the source connection to be created.
            
            - **data** - **(Required)** Contains information regarding the source connection's data format and the schema to map to.
              - **format** - **(Required)** The format of the data file to be ingested. Possible enum values for file-based connectors include `delimted`, `json`, and `parquet`. For table-based connectors, use the value `tabular`.
              - **version** - **(Required)** Specifies the version of the format of the data being ingested. Omitting this value will default to the most recent version
              
            - **params** - **(Required)** Defines details of source of data in this source connection from where data should be copied.
              - **path** - **(Required)** Designates the path file.
            
            - **connectionSpec** - **(Required)** Contains information regarding the source's connection specification ID.
              - **id** - **(Required)** The specific connection specification ID associated with source.
              - **version** - Specifies the version of the connection specification ID. Omitting this value will default to the most recent version.
            
          required: true
          schema:
            $ref: '#/definitions/CreateSourceConnectionRequest'
      responses:
        '201':
          description: Returns new source connection ID and etag.
          examples:
            application/json:
              id: 'd7c8f1a6-1b87-4c9b-88f1-a61b879c9be6'
              etag: "\"110082c6-0000-0200-0000-5ed584460000\""
          headers:
            Location:
              description: Location of the newly created source connection instance.
              type: string
          schema:
            $ref: '#/definitions/CreateSourceConnectionResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/sourceConnections/{SOURCE_CONNECTION_ID}':
    get:
      tags:
        - Source connections
      summary: Retrieve a source connection
      operationId: retrieveSourceConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: SOURCE_CONNECTION_ID
          in: path
          description:
            "The source connection ID is a unique identifier used to create a flow."
          required: true
          type: string
      responses:
        '200':
          description: Returns details of specified source connection in JSON format.
          schema:
            $ref: '#/definitions/SourceConnectionsListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
          
    patch:
      tags:
        - Source connections
      summary: Update a source connection
      operationId: patchSourceConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/if-match'
        - name: SOURCE_CONNECTION_ID
          in: path
          description:
            "The source connection ID is a unique identifier used to create a flow."
          required: true
          type: string
        - in: body
          name: body
          description: >-
            - **op** - **(Required)** The operation call used to define the action needed to update the connection. Operations include `add`, `replace`, and `remove`.

            - **path** - (Optional) The path of the parameter to be updated.

            - **value** - **(Required)** The new value you want to update your parameter with.
            
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PatchInstruction'
      responses:
        '200':
          description: Returns updated source connection in JSON format.
          schema:
            $ref: '#/definitions/SourceConnectionsListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.

    delete:
      tags: 
        - Source connections
      summary: Delete a source connection
      operationId: deleteSourceConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: SOURCE_CONNECTION_ID
          in: path
          description:
            "The ID of the source connection you wish to delete."
          required: true
          type: string
      responses:
        '204':
          description: The source connection was successfully deleted.
          schema:
            $ref: '#/definitions/SourceConnectionsListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  /targetConnections:
    post:
      tags:
        - Target connections
      summary: Create a target connection
      operationId: createTargetConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - in: body
          name: body
          description: >-
            - **name** - **(Required)** The name of the source connection.
            
            - **description** - (Optional) Provides information and details regarding the source connection to be created.
            
            - **data** - **(Required)** Contains information regarding the source connection's data format and the schema to map to.
              - **schema** - **(Required)** Contains information regarding the target schema, including its unique reference identifier and version.
                - **ID** - **(Required)** The unique ID reference for the target XDM schema.
                - **version** - **(Required)** Specifies the version of the data.format. Omitting this value will default to the most recent version
            - **params** - **(Required)** Defines details of data in this target connection where data should be copied to.  
            - **dataSetId** - **(Required)** The target dataset ID used to create a target connection.
            
            - **connectionSpec** - **(Required)** Contains information regarding the source's connection specification ID.
              - **id** - The specific connection specification ID associated with source.
              - **version** - Specifies the version of the connection specification ID. Omitting this value will default to the most recent version
          required: false
          schema:
            $ref: '#/definitions/CreateTargetConnectionRequest'
      responses:
        '201':
          description: Returns new target connection ID and etag.
          examples:
            application/json:
              id: 'a38c3810-ccc5-11e9-98d8-93c11ed26fbc'
          headers:
            Location:
              description: Location of the newly created target connection instance.
              type: string
          schema:
            $ref: '#/definitions/CreateTargetConnectionResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
  '/targetConnections/{TARGET_CONNECTION_ID}':
    get:
      tags:
        - Target connections
      summary: Retrieve a target connection
      operationId: retrieveTargetConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - name: TARGET_CONNECTION_ID
          in: path
          description:
            "The target connection ID is a unique identifier used to create a flow."
          required: true
          type: string
      responses:
        '200':
          description: Returns details of specified target connection in JSON format.
          schema:
            $ref: '#/definitions/TargetConnectionsListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
          
    patch:
      tags:
        - Target connections
      summary: Update a target connection
      operationId: patchTargetConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/if-match'
        - name: TARGET_CONNECTION_ID
          in: path
          description:
            "The target connection ID is a unique identifier used to create a flow."
          required: true
          type: string
        - in: body
          name: body
          description: >-
            - **op** - **(Required)** The operation call used to define the action needed to update the connection. Operations include `add`, `replace`, and `remove`.

            - **path** - (Optional) The path of the parameter to be updated.

            - **value** - **(Required)** The new value you want to update your parameter with.
            
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PatchInstruction'
      responses:
        '200':
          description: Returns details of specified target connection in JSON format.
          schema:
            $ref: '#/definitions/TargetConnectionsListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.

    delete:
      tags:
        - Target connections
      summary: Delete a target connection
      operationId: deleteTargetConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: TARGET_CONNECTION_ID
          in: path
          description:
            "The ID of the target connection you wish to delete."
          required: true
          type: string
      responses:
        '204':
          description: The target connection was successfully deleted.
          schema:
            $ref: '#/definitions/TargetConnectionsListResponse'
        '401':
          description: The OAuth token is missing.
        '503':
          description: The service is unavailable.
definitions:
  AuthInfoDTO:
    type: object
    required:
      - specName
    properties:
      specName:
        type: string
        example: "Basic Authentication for a cloud storage source"
        description: Specifies the type of authentication a specific source is using to connect.
      params:
        $ref: '#/definitions/AuthCreateBaseDTO'
  AuthCreateBaseDTO:
    type: object
    properties:
      url:
        type: string
        example: "{URL}"
      servicePrincipalId:
        type: string
        example: "{SERVICE_PRINCIPAL_ID}"
      servicePrincipalKey:
        type: string
        example: "{SERVICE_PRINCIPAL_KEY}"
      tenant:
        type: string
        example: "{TENANT}"
  ConnectionItemDTO:
    type: object
    properties:
      createdAt:
        type: integer
        format: int64
        example: 1668637963851
        description: A timestamp marking when the connection was created.
      updatedAt:
        type: integer
        format: int64
        example: 1668637963851
        description: A timestamp marking when the connection was last updated.
      createdBy:
        type: string
        example: "acme@AdobeID"
        description: The user account who created the connection.
      updatedBy:
        type: string
        example: "acme@AdobeID"
        description: The use account who last updated the connection.
      createdClient:
        type: string
        example: "exc_app"
        description: The application client that was used to create the connection.
      updatedClient:
        type: string
        example: "exc_app"
        description: The application client that was used to last update the connection.
      policy:
        $ref: '#/definitions/PolicyItemDTO'
      id:
        type: string
        example: "d2a2c423-aff4-4350-b12b-eb266faafa2e"
        description: The base connection ID.
      name:
        type: string
        example: "Google BigQuery Base Connection"
        description: The name of the base connection.
      description:
        type: string
        example: "A Google BigQuery base connection for sales data"
        description: An optional description that can be added to provide further context on the connection.
      connectionSpec:
        $ref: '#/definitions/SpecInfoDTO'
      state:
        type: string
        example: "enabled"
        description: The state of the connection. "For example, state=`enabled`."
      auth:
        $ref: '#/definitions/AuthInfoDTO'
      version:
        type: string
        example: "\"a80785dd-0000-0200-0000-6375651b0000\""
        description: The version of the specified connection.
      etag:
        type: string
        example: "\"a80785dd-0000-0200-0000-6375651b0000\""
        description: An etag value that is generated after a new connection is created.
      providerRefId:
        type: string
        example: "4f2ae11a-01e8-4045-9465-5edaa2fbd04d"
        description: A reference ID that links a connection with a specific source provider.
  ConnectionListResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ConnectionItemDTO'
  PageLink:
    type: object
    properties:
      href:
        type: string
        example: "/connections?continuationToken=abcdefghijkLMNOPqrstupWXKYZ"
  PageLinksResponse:
    type: object
    properties:
      self:
        $ref: '#/definitions/PageLink'
      next:
        $ref: '#/definitions/PageLink'
      prev:
        $ref: '#/definitions/PageLink'
  PolicyItemDTO:
    type: object
    properties:
      duleLabels:
        type: array
        items:
          type: string
          example: "C1"
      enforcementRefs:
        type: array
        items:
          type: string
          example: "enforcementRefs1"
  SpecInfoDTO:
    type: object
    required:
      - id
      - version
    properties:
      id:
        type: string
        example: "3c9b37f8-13a6-43d8-bad3-b863b941fedd"
        description: The connection specification ID that corresponds with the source from where data is being ingested from. This ID is fixed and each source supported by Experience Platform has its own connection specification ID.
      version:
        type: string
        example: "1.0"
        description: The version of the connection specification ID.
  CreateConnectionResponse:
    description: The location of the newly created connection instance.
    type: object
    properties:
      id:
        type: string
        example: "d2a2c423-aff4-4350-b12b-eb266faafa2e"
        description: The newly created base connection ID.
      etag:
        type: string
        example: "\"a80785dd-0000-0200-0000-6375651b0000\""
        description: The etag value assigned with the created connection ID.
  CreateConnectionRequest:
    type: object
    required:
      - connectionSpec
    properties:
      name:
        type: string
        example: "Google BigQuery Base Connection"
        description: The name assigned to the connection to be created.
      description:
        type: string
        example: "A Google BigQuery base connection for sales data"
        description: An optional description that can be added to provide further context on the connection.
      auth:
        $ref: '#/definitions/AuthInfoDTO'
      connectionSpec:
        $ref: '#/definitions/SpecInfoDTO'
  TestConnectionResponse:
    type: object
    properties:
      result:
        type: boolean
        example: "false"
      errorMessage:
        type: string
        example: Test could not be completed.
  ExploreConnectionResponse:
    type: object
    properties:
      items:
        type: array
        items:
          type: object
  AuthenticationSpecDTO:
    type: object
    properties:
      name:
        type: string
        example: "Basic authentication for Google BigQuery"
        description: The name of the authentication type used to authenticate a source against Experience Platform.
      type:
        type: string
        example: "BasicAuthentication"
        description: The type of authentication used to connect a source.
      spec:
        type: object
        properties:
            project:
              type: string
              example: "{PROJECT}"
            clientId:
              type: string
              example: "{CLIENT_ID}"
            clientSecret:
              type: string
              example: "{CLIENT_SECRET}"
            refreshToken:
              type: string
              example: "{REFRESH_TOKEN}"
      attributes:
        type: object
        properties:
            category:
              type: string
              example: "database"
            icon:
              type: string
              example: "googleBigQuery"
            description:
              type: string
              example: "googleBigQueryDescription"
            label:
              type: string
              example: "googleBigQueryLabel"
  ConnectionSpecItemDTO:
    type: object
    properties:
      id:
        type: string
        example: "3c9b37f8-13a6-43d8-bad3-b863b941fedd"
        description: The connection specification ID of a given source.
      name:
        type: string
        example: "Google BigQuery"
        description: The name of the source.
      providerId:
        type: string
        example: "0ed90a81-07f4-4586-8190-b40eccef1c5a"
        description: A reference ID that links a connection with a specific source provider.
      version:
        type: string
        example: "1.0"
        description: The version of the specified connection specification ID.
      authSpec:
        type: array
        items:
          $ref: '#/definitions/AuthenticationSpecDTO'
      sourceSpec:
        $ref: '#/definitions/SourceSpecDTO'
      exploreSpec:
        $ref: '#/definitions/ExploreSpecDTO'
      permissionsInfo:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/PermissionDTO'
      policy:
        $ref: '#/definitions/PolicyItemDTO'
  ConnectionSpecResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ConnectionSpecItemDTO'
  ExploreSpecDTO:
    type: object
    properties:
      name:
        type: string
        example: Tabular
        description: The name of the source file type.
      type:
        type: string
        example: Tabular
        description: Defines the type of file structure a source content follows. File type can either be `FileSystem` or `tabular`.
      requestSpec:
        type: object
        properties:
          schema:
            type: string
            example: "http://json-schema.org/draft-07/schema#"
          type:
            type: string
            example: "object"
          description:
            type: string
            example: "defines explorable objects"
      responseSpec:
        type: object
        properties:
          schema:
            type: string
            example: "http://json-schema.org/draft-07/schema#"
          type:
            type: string
            example: "object"
          items:
            type: object
            properties:
              type:
                type: string
                example: "table"
                description: The structure type of the data being ingested.
              name:
                type: string
                example: "sales"
                description: The file name of the data being ingested.
              path:
                type: string
                example: "sales"
                description: The file path to the data being ingested.
              canPreview:
                type: boolean
                example: "false"
                description: Defines if the data can be previewed.
              canFetchSchema:
                type: boolean
                example: "false"
                description: Defines if the schema of the fields of the data can be fetched.
  PermissionDTO:
    type: object
    properties:
      '@type':
        type: string
        example: lowlevel
      name:
        type: string
        example: EnterpriseSource
      permissions:
        type: array
        items:
          type: string
          enum:
            - read
            - write
  SourceSpecDTO:
    type: object
    properties:
      schema:
        type: string
        example: "http://json-schema.org/draft-07/schema#"
      type:
        type: string
        example: "object"
      description:
        type: string
        example: "Defines params required when this connection is used as a source in flow"
      path:
        type: object
        properties:
          type:
            type: string
            example: "string"
          description:
            type: string
            example: "Input path for copying files, can be a folder path, file path or a wildcard pattern"
      recursive:
        type: object
        properties:
          type:
            type: string
            example: "boolean"
          default:
            type: string
            example: "false"
          description:
            type: string
            example: "Indicates recursive copy in case of folder or wild card path, default is false"
      policy:
        $ref: '#/definitions/PolicyItemDTO'
      attributes:
        type: object
        additionalProperties:
          type: object
  ConnectionMetaInfoDTO:
    type: object
    properties:
      id:
        type: string
        example: "ecadc60c-7455-4d87-84dc-2a0e293d997b"
      connectionSpec:
        $ref: '#/definitions/SpecInfoDTO'
  FlowItemDTO:
    type: object
    properties:
      createdAt:
        type: integer
        format: int64
        example: 1591011461274
        description: The creation time of the flow.
      updatedAt:
        type: integer
        format: int64
        example: 1591011461274
        description: The time of the last update of the flow
      createdBy:
        type: string
        example: "abc_practice_connection@AdobeID"
        description: The user who created the flow.
      updatedBy:
        type: string
        example: "abc_practice_connection@AdobeID"
        description: The user who last updated the flow.
      createdClient:
        type: string
        example: "abc_practice_connection"
        description: The client that created the flow.
      updatedClient:
        type: string
        example: "abc_practice_connection"
        description: The client that last updated the flow.
      policy:
        $ref: '#/definitions/PolicyItemDTO'
      id:
        type: string
        example: "6b36e130-c5d7-11e9-949c-0da8d50fcac1"
        description: The ID of the flow.
      name:
        type: string
        example: "IT-S3 Flow"
        description: The name of the flow.
      description:
        type: string
        example: "Flow created during integration tests"
        description: An optional description used to provide further information about the flow.
      flowSpec:
        $ref: '#/definitions/SpecInfoDTO'
      state:
        type: string
        example: "enabled"
        description: The state of the flow. "For example, state=`enabled`."
      version:
        type: string
        example: "\"1c00f8bd-0000-0200-0000-5ed4e8850000\""
        description: The specific version of the flow.
      etag:
        type: string
        example: "\"1c00f8bd-0000-0200-0000-5ed4e8850000\""
        description: The etag value generated and assigned to a flow after a flow is created.
      sourceConnectionIds:
        type: array
        items:
          type: string
          example: "16849dc3-522f-41b2-849d-c3522f91b29d"
          description: The source connection ID used to create a flow.
      targetConnectionIds:
        type: array
        items:
          type: string
          example: "6d1d9a3f-eade-48c4-9d9a-3feadee8c4e4"
          description: The target connection ID used to create a flow.
      inheritedAttributes:
        $ref: '#/definitions/FlowMetaInfoDTO'
      scheduleParams:
        $ref: '#/definitions/ScheduleSpecDTO'
      transformations:
        type: array
        items:
          $ref: '#/definitions/FlowTransformationDTO'
      runs:
        type: string
        example: "/flows/279f2f06-523b-499d-9f2f-06523bc99db2/runs"
  FlowListResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/FlowItemDTO'
      _links:
        $ref: '#/definitions/PageLinksResponse'
      count:
        type: integer
        format: int64
        example: 7
  FlowMetaInfoDTO:
    type: object
    properties:
      sourceConnections:
        type: array
        items:
          $ref: '#/definitions/SourceConnectionMetaInfoDTOWrapper'
      targetConnections:
        type: array
        items:
          $ref: '#/definitions/TargetConnectionMetaInfoDTOWrapper'
  FlowTransformationDTO:
    type: object
    required:
      - name
      - params
    properties:
      name:
        type: string
        example: "Mapping"
      params:
        $ref: '#/definitions/TransformationSpecDTO'
  SourceConnectionMetaInfoDTOWrapper:
    type: object
    properties:
      id:
        type: string
        example: "16849dc3-522f-41b2-849d-c3522f91b29d"
      connectionSpec:
        $ref: '#/definitions/SpecInfoDTO'
      baseConnection:
        $ref: '#/definitions/ConnectionMetaInfoDTO'
  TargetConnectionMetaInfoDTOWrapper:
    type: object
    properties:
      id:
        type: string
      connectionSpec:
        $ref: '#/definitions/SpecInfoDTO'
      baseConnection:
        $ref: '#/definitions/ConnectionMetaInfoDTO'
  CreateFlowResponse:
    description: Location of the newly created flow instance
    type: object
    properties:
      id:
        type: string
        example: "322242a7-23fe-45ee-a242-a723fed5ee61"
        description: The ID of the flow.
      etag:
        type: string
        example: "\"1100f653-0000-0200-0000-5ed389200000\""
        description: The etag value generated and assigned to a flow after a flow is created.
  CreateFlowRequest:
    type: object
    required:
      - flowSpec
    properties:
      name:
        type: string
        example: "ADLS-Gen2 flow"
        description: The name of the flow.
      description:
        type: string
        example: "Creating a flow for ADLS-Gen2"
        description: An optional description used to add further information to a flow.
      flowSpec:
        $ref: '#/definitions/SpecInfoDTO'
      sourceConnectionIds:
        type: array
        items:
          type: string
          example: "28587a7f-33d2-40f0-987a-7f33d270f0ce"
          description: The source connection ID used to create a flow.
      targetConnectionIds:
        type: array
        items:
          type: string
          example: "6d1d9a3f-eade-48c4-9d9a-3feadee8c4e4"
          description: The target connection ID used to create a flow.
      transformations:
        type: array
        items:
          $ref: '#/definitions/FlowTransformationDTO'
      scheduleParams:
        $ref: '#/definitions/ScheduleSpecDTO'
  FlowRunItemDTO:
    type: object
    properties:
      createdAt:
        type: integer
        format: int64
        example: 1591051236463
        description: The time of run creation.
      updatedAt:
        type: integer
        format: int64
        example: 1591051236463
        description: The time the run was last updated.
      createdBy:
        type: string
        example: "abc_practice_connection@AdobeID"
        description: The user who created the run.
      updatedBy:
        type: string
        example: "abc_practice_connection@AdobeID"
        description: The user who last updated the run.
      createdClient:
        type: string
        example: "abc_practice_connection"
        description: The client that created the run.
      updatedClient:
        type: string
        example: "abc_practice_connection"
        description: The client that last updated the run.
      sandboxName:
        type: string
        example: "prod"
        description: The name of the sandbox in which the operation will take place. If a sandbox name is not provided then the default sandbox for the organization will be used.
      id:
        type: string
        example: "044700d5-ab4c-41ee-8700-d5ab4c71ee25"
        description: The ID of the run.
      flowId:
        type: string
        example: "70c2f428-14a9-4ec5-82f4-2814a9aec570"
        description: The ID of the flow.
      providerId:
        type: string
        example: "M-d9fc9674-0b46-48ea-bc96-740b4638eaf7-incremental-0:ab366d48-9aa6-4a5a-b5cc-55cf872dc299"
        description: The ID of the provider.
      state:
        type: string
        example: "inProgress"
        description: The state of the run. Possible enum values for run include inProgress, succeeded, and failed. "For example, state=`inProgress`."
      version:
        type: string
        example: "\"6100d886-0000-0200-0000-5ea883540000\""
        description: The version of the run.
      etag:
        type: string
        example: "\"6100d886-0000-0200-0000-5ea883540000\""
        description: The etag generated and assigned to a run when a new run is created.
  FlowRunsListResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/FlowRunItemDTO'
      _links:
        $ref: '#/definitions/PageLinksResponse'
      count:
        type: integer
        format: int64
        example: 12
  FlowSpecItemDTO:
    type: object
    properties:
      id:
        type: string
        example: "14518937-270c-4525-bdec-c2ba7cce3860"
        description: The ID of the flow specification.
      name:
        type: string
        example: "CRMToAEP"
        description: The name of the flow specification.
      providerId:
        type: string
        example: "0ed90a81-07f4-4586-8190-b40eccef1c5a"
        description: The ID of the provider.
      version:
        type: string
        example: "1.0"
        description: The version of the flow specification.
      targetConnectionId:
        type: string
        example: "d504ff05-7f1a-43c0-8e18-33bf874cb11c"
        description: The target connection ID used to create a flow.
      sourceConnectionSpecIds:
        type: array
        items:
          type: string
          example: "d6b52d86-f0f8-475f-89d4-ce54c8527328"
          description: The source connection ID used to create a flow.
      targetConnectionSpecIds:
        type: array
        items:
          type: string
          example: "c604ff05-7f1a-43c0-8e18-33bf874cb11c"
          description: The specification ID that connects a sources to data lake.
      transformationSpecs:
        type: array
        items:
          $ref: '#/definitions/TransformationSpecDTO'
      scheduleSpec:
        $ref: '#/definitions/ScheduleSpecDTO'
      attributes:
        type: object
        additionalProperties:
          type: object
      permissionsInfo:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/PermissionDTO'
      policy:
        $ref: '#/definitions/PolicyItemDTO'
  FlowSpecResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/FlowSpecItemDTO'
  ScheduleSpecDTO:
    type: object
    properties:
      startTime:
        type: integer
        format: int64
        example: 1590091157
        description: The start time of the flow in epoch time in seconds.
      frequency:
        type: string
        example: "minute"
        description: The scheduled frequency of ingestion for a flow. Valid values include once, minute, hour, day, week.
      interval:
        type: string
        example: "15"
        description: The period between two consecutive flow runs. Its assigned value should be a non zero integer. Interval is not required when frequency is set as once, and should be set as equal or greater than 15 if frequency is set on a per minute basis. There are no constraints on interval for other frequency settings.
      backfill:
        type: boolean
        example: "true"
        description: A boolean value that determines what data is initially ingested. If backfill is enabled, all current files in the specified path will be ingested during the first scheduled ingestion. If backfill is disabled, only the files that are loaded in between the first run of ingestion and the Start time will be ingested. Files loaded prior to Start time will not be ingested.
  TransformationSpecDTO:
    type: object
    properties:
      mappingId:
        type: string
        example: "7da0fc88644144ba98fe992a8d385d04"
      mappingVersion:
        type: string
        example: "0"
  CreateFlowRunResponse:
    description: Location of the newly created flow instance
    type: object
    properties:
      id:
        type: string
      etag:
        type: string
  CreateFlowRunRequest:
    type: object
    properties:
      status:
        type: string
        example: "active"
        description: The status of the run.
      flowId:
        type: string
        example: "7647468477"
        description: The ID assigned to the run.
  CreateSourceConnectionResponse:
    description: Location of the newly created source connection instance
    type: object
    properties:
      id:
        type: string
      etag:
        type: string
  CreateSourceConnectionRequest:
    type: object
    required:
      - connectionSpec
      - data
      - name
    properties:
      name:
        type: string
        example: "Cloud Storage source connection"
      description:
        type: string
        example: "A source connection for a cloud storage source connector"
      baseConnectionId:
        type: string
        example: "d7c8f1a6-1b87-4c9b-88f1-a61b879c9be6"
      policy:
        $ref: '#/definitions/PolicyItemDTO'
      data:
        $ref: '#/definitions/SourceConnectionDataDTO'
      params:
        type: object
        properties:
          path:
            type: string
            example: "Accounts"
      connectionSpec:
        $ref: '#/definitions/SpecInfoDTO'
  SourceConnectionDataDTO:
    type: object
    properties:
      format:
        type: string
        example: "delimited"
      schema:
        properties:
          id:
            type: string
            example: "https://ns.adobe.com/{TENANT_ID}/classes/5d032b2230d5495aef49437d04d1c5fac4788b17ae85bf93"
          version:
            type: string
            example: "application/vnd.adobe.xed-full-notext+json; version=1"
  SourceConnectionItemDTO:
    type: object
    properties:
      createdAt:
        type: integer
        format: int64
        example: 1587670676302
        description: The creation time of the connection.
      updatedAt:
        type: integer
        format: int64
        example: 1587670676302
        description: The time of the last update of the connection.
      createdBy:
        type: string
        example: "abc_practice_connection@AdobeID"
        description: The user who created the connection.
      updatedBy:
        type: string
        example: "abc_practice_connection@AdobeID"
        description: The user who last updated the connection.
      createdClient:
        type: string
        example: "abc_practice_connection"
        description: The client who created the connection.
      updatedClient:
        type: string
        example: "abc_practice_connection"
        description: The client who updated the connection.
      sandboxId:
        type: string
        example: "6b36e130-c5d7-11e9-949c-0da8d50fcac1"
        description: The unique identifier of the sandbox in which the operation will take place.
      sandboxName:
        type: string
        example: "prod"
        description: The name of the sandbox in which the operation will take place. If a sandbox name is not provided then the default sandbox for the org will be used.
      policy:
        $ref: '#/definitions/PolicyItemDTO'
      id:
        type: string
        example: "9b240120-6bfd-48d2-a401-206bfdb8d2cb"
        description: The ID of the source connection.
      name:
        type: string
        example: "ADLS-Gen2 source connection"
        description: The name of the source connection.
      description:
        type: string
        example: "Test source connection"
        description: An optional description used to add further information about the source connection.
      baseConnectionId:
        type: string
        example: "dec11f31-1934-4e94-811f-311934ee94d1"
        description: The connection ID used to create a source connection.
      state:
        type: string
        example: "enabled"
        description: The state of the source connection. Possible state values include inProgress, updating, enabling, disabling, enabled, and disabled. "For example, state=`enabled`."
      data:
        $ref: '#/definitions/SourceConnectionDataDTO'
      connectionSpec:
        $ref: '#/definitions/SpecInfoDTO'
      params:
        type: object
        properties:
          path:
            type: string
            example: "Accounts"
      version:
        type: string
        example: "\"5f00fba7-0000-0200-0000-5ed560520000\""
        description: The version of the source connection.
      etag:
        type: string
        example: "\"5f00fba7-0000-0200-0000-5ed560520000\""
        description: The etag value generated and assigned to a source connection when a new source connection is created.
      providerRefId:
        type: string
        description: A reference ID connecting the source connection to the provider.
      inheritedAttributes:
        $ref: '#/definitions/SourceConnectionMetaInfoDTO'
  SourceConnectionMetaInfoDTO:
    type: object
    properties:
      baseConnection:
        $ref: '#/definitions/ConnectionMetaInfoDTO'
  SourceConnectionsListResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/SourceConnectionItemDTO'
      _links:
        $ref: '#/definitions/PageLinksResponse'
      count:
        type: integer
        format: int64
  CreateTargetConnectionResponse:
    description: Location of the newly created target connection instance
    type: object
    properties:
      id:
        type: string
      etag:
        type: string
  CreateTargetConnectionRequest:
    type: object
    required:
      - connectionSpec
      - data
    properties:
      name:
        type: string
        example: "Cloud Storage target connection"
        description: The name of the target connection.
      description:
        type: string
        example: "A target connection for a cloud storage source"
      data:
        $ref: '#/definitions/TargetConnectionDataDTO'
      params:
        type: object
        properties:
          dataSetId:
            type: string
            example: "5ed18e0f4f90b719196f44a9"
            description: The ID of the target dataset required to create a target connection.
      connectionSpec:
        $ref: '#/definitions/SpecInfoDTO'
  TargetConnectionDataDTO:
    type: object
    properties:
      format:
        type: string
        example: "delimited"
        description: The format of the data being ingested. Data from a tabular source is formated as tabular. Data from a file-based source can be formatted as parquet, json, or delimited.
      schema:
        type: object
        properties:
          id:
            type: string
            example: "https://ns.adobe.com/{TENANT_ID}/schemas/b750bd161fef405bc324d0c8809b02c494d73e60e7ae9b3e"
            description: The ID of the target XDM schema.
          version:
            type: string
            example: "application/vnd.adobe.xed-full+json;version=1.0"
            description: The version of the XDM schema.
  TargetConnectionItemDTO:
    type: object
    properties:
      createdAt:
        type: integer
        format: int64
        example: 1587670676302
        description: The creation time of the connection.
      updatedAt:
        type: integer
        format: int64
        example: 1587670676302
        description: The time of the last update of the connection.
      createdBy:
        type: string
        example: "abc_practice_connection@AdobeID"
        description: The user who created the connection.
      updatedBy:
        type: string
        example: "abc_practice_connection@AdobeID"
        description: The user who last updated the connection.
      createdClient:
        type: string
        example: "abc_practice_connection"
        description: The client who created the connection.
      updatedClient:
        type: string
        example: "abc_practice_connection"
        description: The client who updated the connection.
      sandboxId:
        type: string
        example: "6b36e130-c5d7-11e9-949c-0da8d50fcac1"
        description: The unique identifier of the sandbox in which the operation will take place.
      sandboxName:
        type: string
        example: "prod"
        description: The name of the sandbox in which the operation will take place. If a sandbox name is not provided then the default sandbox for the org will be used.
      policy:
        $ref: '#/definitions/PolicyItemDTO'
      id:
        type: string
        example: "1642748e-7cbc-4f3d-8274-8e7cbcaf3d97"
        description: The ID of the target connection.
      name:
        type: string
        example: "ADLS-Gen2 target connection"
        description: The name of the target connection.
      description:
        type: string
        example: "A target connection for ADLS-Gen2"
        description: An optional description that can be applied to provide further information on the target connection.
      baseConnectionId:
        type: string
        example: "1afb228d-3b28-40f8-bb22-8d3b28b0f887"
        description: The connection ID used to create a target connection.
      state:
        type: string
        example: enabled
        description: The state of the target connection. Possible state values include inProgress, updating, enabling, disabling, enabled, and disabled. "For example, state=`enabled`."
      data:
        $ref: '#/definitions/TargetConnectionDataDTO'
      connectionSpec:
        $ref: '#/definitions/SpecInfoDTO'
      params:
        type: object
        properties:
          dataSetId:
            type: string
            example: "5ed18e0f4f90b719196f44a9"
            description: The ID of the dataset required to create a target connection.
      version:
        type: string
        example: "\"6f00d1ea-0000-0200-0000-5ea6713e0000\""
        description: The version of the target connection
      etag:
        type: string
        example: "\"6f00d1ea-0000-0200-0000-5ea6713e0000\""
        description: The etag value generated and assigned to a target connection ID after a new target connection is created.
      providerRefId:
        type: string
      inheritedAttributes:
        $ref: '#/definitions/TargetConnectionMetaInfoDTO'
  TargetConnectionMetaInfoDTO:
    type: object
    properties:
      baseConnection:
        $ref: '#/definitions/ConnectionMetaInfoDTO'
  TargetConnectionsListResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/TargetConnectionItemDTO'
      _links:
        $ref: '#/definitions/PageLinksResponse'
      count:
        type: integer
        format: int64
        description: "42"
  PatchInstruction:
    type: object
    required:
      - op
      - path
      - value
    properties:
      op:
        type: string
        example: "Add"
        enum:
          - ADD
          - REPLACE
          - REMOVE
      path:
        type: string
        example: "/auth/params"
      value:
        type: object
        properties:
          description:
            type: string
            example: "A new description to provide further context on a specified connection or flow."
            description: The new description value you want to add.
parameters:
  authorization:
    name: Authorization
    description: "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
    required: true
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
    required: true
    type: string
    in: header
  content-type:
    name: Content-Type
    description: "The type of content being sent in the body of the request. Should be 'application/json'."
    required: true
    type: string
    in: header
  x-sandbox-id:
    name: x-sandbox-id
    description: "The unique identifier of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
    required: false
    in: header
    type: string
  x-sandbox-name:
    name: x-sandbox-name
    description: "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
    required: false
    in: header
    type: string
  x-service-token:
    name: x-service-token
    in: header
    description: "The unique token associated with the service."
    required: false
    type: string
  x-user-token:
    name: x-user-token
    in: header
    description: "The unique token associated with the user account."
    required: false
    type: string
  limit:  
    name: limit
    in: query
    description: "Limit response to a specific number of objects. Must be a positive number. For example, `limit=10`"
    required: false
    type: integer
  property:
    name: property
    in: query
    description: A comma separated list of top-level object properties to be returned in the response. Used to cut down the amount of data returned in the response body. "For example, `property=id==3416976c-a9ca-4bba-901a-1f08f66978ff,6a8d82bc-1caf-45d1-908d-cadabc9d63a6,3c9b37f8-13a6-43d8-bad3-b863b941fedd`."
    required: false
    type: array
    items:
      type: string
    collectionFormat: csv
  continuationToken:
    name: continuationToken
    in: query
    description: "A token for fetching records for next page. This is an auto generated token."
    required: false
    type: string
  orderby:
    name: orderby
    in: query
    description: "Sort response by specified fields separated by `,` and/or prefix field with `-` for descending order."
    required: false
    type: string
  count:
    name: count
    in: query
    description: "A boolean value specifying if the count of resources should be returned. By default the count is not returned (`count=false`)."
    required: false
    type: boolean
    default: false
  if-match:
    name: if-match
    in: query
    description: "A header containing the etag value of the connection or flow to be updated."
    required: true
    type: string