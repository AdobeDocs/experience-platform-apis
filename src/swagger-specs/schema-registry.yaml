openapi: 3.0.1
info:
  title: Schema Registry API
  description: |-
    Use the Schema Registry API to access the Schema Library within Adobe Experience Platform. The registry provides a user interface and RESTful API from which all available library resources are accessible.  Programmatically manage all schemas and related Experience Data Model (XDM) resources available to you within Platform. This includes those defined by Adobe, Experience Platform partners, and vendors whose applications you use.
    * **Related documentation**:
      * [XDM documentation](http://www.adobe.com/go/xdm-home-en)

    * **Visualize API calls with Postman (a free, third-party software)**:
      * [Schema Registry API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Schema%20Registry%20API.postman_collection.json)
      * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
      * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    * **API paths**:
      * PLATFORM Gateway URL: https://<span>platform.adobe.io
      * Base path for this API: /data/foundation/schemaregistry
      * Example of a complete path for making a call to "/stats": https://<span>platform.adobe.io/data/foundation/schemaregistry/stats

    * **Required headers**:
      * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      * All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
      * All GET requests to the Schema Registry require an `Accept` header to determine what data is returned by the system. See the [section on `Accept` headers](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/getting-started.html?lang=en#accept) in the Schema Registry developer guide for more information.
      * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

    - **API error handling**:
      * Refer to the Experience Platform API troubleshooting guide for [FAQs](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#faq), [API status codes](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#api-status-codes), and [request header errors](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#request-header-errors).
  version: "1.0"
servers:
- url: //platform.adobe.io/data/foundation/schemaregistry
tags:
- name: Stats
  description: "Returns {TENANT_ID} along with information regarding IMS Org usage\
    \ of the Schema Registry such as resource counts, recently created resources,\
    \ and class usage."
- name: Schemas
  description: Schemas provide an abstract definition of a real-world object along
    with constraints and expectations that can be applied and used to validate data.
- name: Behaviors
  description: "Behaviors define the nature of data that a schema describes. Each\
    \ XDM class must reference a specific behavior, which all schemas that employ\
    \ that class will inherit. Schemas that inherit the \"record\" behavior provide\
    \ information about the attributes of a subject, while those that inherit the\
    \ \"time-series\" behavior provide a snapshot of the system at the time an action\
    \ was taken by a record subject."
- name: Classes
  description: Classes define behavioral aspects of the data within the schema and
    describe the smallest number of common properties contained in all schemas that
    implement the same class.
- name: Field groups
  description: A field group is a reusable component that defines one or more fields
    to implement certain functions within a schema based on a compatible class.
- name: Data types
  description: Data types are used as reference field types in classes or schemas
    to define complex types. Data types may define multiple sub-fields providing a
    consistent multi-field structure.
- name: Descriptors
  description: Schema descriptors are tenant-level metadata used to provide interpretive
    details on how data based on certain schemas may relate or interact with one another.
- name: Unions
  description: Union schemas aggregate the fields of all schemas that implement the
    same class (such as ExperienceEvent or Profile) into a single schema. They are
    used by Real-time Customer Profile to merge data together to form a "single source
    of truth" for an individual.
- name: Export/Import
  description: "The Schema Registry API allows you to transfer and share XDM resources\
    \ between sandboxes and IMS Organizations. For any schema, field group, or data\
    \ type, you can generate an export payload containing the structure of the resource\
    \ and any dependent resources. This payload can then be used to import the resource\
    \ into a destination sandbox and IMS Org."
- name: Sample data
  description: You can generate sample data for any specified schema within the Schema
    Library. The response object returned can then be used as the source of dataset
    ingestion.
- name: Audit log
  description: "The Schema Registry maintains a log of all the changes that have occurred\
    \ to a resource (class, field group, data type, or schema) between different updates."
- name: Mixins (deprecated)
  description: "\"Mixin\" is the former term for a field group. The /mixins endpoints\
    \ are deprecated and only maintained as legacy endpoints. For new implementations,\
    \ please use the /fieldgroups endpoint instead."
paths:
  /stats:
    get:
      tags:
      - Stats
      summary: Retrieve your tenant ID and other usage information related to the
        Schema Registry.
      operationId: retrieveStats
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns your tenant ID and Schema Registry
            usage information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statsResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
  /{CONTAINER_ID}/fieldgroups:
    get:
      tags:
      - Field groups
      summary: List field groups
      description: |-
        Retrieve a list of field groups within the specified container.
        >**NOTE**: For more information on using this operation, see the [field groups endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/field-groups.html) on Experience League.
      operationId: listFieldGroups
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to list resources from.\
          \ To list core resources provided by Adobe, use `global`. To list custom\
          \ resources defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "The desired response format. For listing calls, the following\
          \ `Accept` header values are permitted: \n<table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed-id+json</code></td><td>Returns\
          \ a short summary of each resource, generally the preferred header for listing.</td></tr><tr><td><code>application/vnd.adobe.xed+json</code></td><td>Returns\
          \ full JSON for each resource, with the original <code>$ref</code> and <code>allOf</code>\
          \ attributes included.</td></tr></tbody></table>"
        required: true
        schema:
          type: string
      - name: property
        in: query
        description: "A comma-separated list of top-level object properties to be\
          \ returned in the response. For example, `property=meta:intendedToExtend==https://ns.adobe.com/xdm/context/profile`\
          \ returns only field groups that are compatible with the XDM Individual\
          \ Profile class."
        schema:
          type: string
      - name: orderby
        in: query
        description: "Sort the listed resources by specified fields. For example `orderby=title`\
          \ sorts results by title in ascending order (A-Z). Adding a `-` before the\
          \ field name (`orderby=-title`) sorts items in descending order (Z-A). Multiple\
          \ fields can also be included to denote primary and secondary sort orders\
          \ (for example, `orderby=title,description`)."
        schema:
          type: string
      - name: start
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the `orderby` field received in the previous page. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.

          For example, if the `orderby` parameter is set to `orderby=name,firstname`, the `start` parameter would contain a value for the `name` property. In this case, if you wanted to show the next 20 entries of a resource immediately following the name "Miller", you would use: `?orderby=name,firstname&start=Miller&limit=20`.
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `limit` restricts the maximum number of items that should be returned for a given request. This parameter cannot be used without an `orderby` parameter present.

          The `limit` parameter specifies a positive integer (between `0` and `500`) as a *hint* as to the maximum number of items that should be returned. For example, `limit=5` returns only five resources in the list. However, this value is not strictly honored. The actual response size may be smaller or larger as constrained by the need to provide the reliable operation of the `start` parameter, if one is provided.
        schema:
          type: number
      responses:
        "200":
          description: A successful response returns all field groups in the specified
            container.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFieldGroupsResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid `Accept` header for a listing call with no version
            supplied (e.g. `application/vnd.adobe.xed-id+json`) before trying again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorList'
  /{CONTAINER_ID}/fieldgroups/{FIELD_GROUP_ID}:
    get:
      tags:
      - Field groups
      summary: Retrieve a field group
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [field groups endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/field-groups.html)\
        \ on Experience League."
      operationId: retrieveFieldGroup
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to retrieve a resource\
          \ from. To retrieve a core resource provided by Adobe, use `global`. To\
          \ retrieve a custom resource defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: FIELD_GROUP_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the field group you
          want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns the details of the field group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lookupFieldGroupResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid accept header for a lookup call including a version
            number (e.g. `application/vnd.adobe.xed+json;version=1`) before trying
            again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorLookup'
  /tenant/fieldgroups:
    post:
      tags:
      - Field groups
      summary: Create a custom field group
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [field groups endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/field-groups.html)\
        \ on Experience League."
      operationId: createFieldGroup
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: The JSON payload must include a 'meta:intendedToExtend' field
          listing the '$id' of the class(es) with which the field group is compatible.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFieldGroup'
        required: true
      responses:
        "201":
          description: A successful response returns the details of the field group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createFieldGroupResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
  /tenant/fieldgroups/{FIELD_GROUP_ID}:
    put:
      tags:
      - Field groups
      summary: Update a custom field group
      description: |-
        A PUT request essentially re-writes the field group, therefore the request body must include all fields required to create (POST) a field group. This is especially useful when updating a lot of information in the field group at once.


        >**NOTE**: For more information on using this operation, see the [field groups endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/field-groups.html) on Experience League.
      operationId: updateFieldGroup
      parameters:
      - name: FIELD_GROUP_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the field group you
          want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON payload must include all of the fields that were originally\
          \ required for creating the field group, but with updated values. This includes\
          \ an `allOf` attribute referencing the `$id` of the class the schema will\
          \ implement."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceFieldGroup'
        required: true
      responses:
        "200":
          description: A successful response returns the details of the updated field
            group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateFieldGroupResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Field groups
      summary: Delete a custom field group
      description: |-
        You can remove an existing field group through a DELETE request. A successful deletion returns an empty response body and HTTP status 204 (No Content).

        >**NOTE**: For more information on using this operation, see the [field groups endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/field-groups.html) on Experience League.
      operationId: removeFieldGroup
      parameters:
      - name: FIELD_GROUP_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the field group you
          want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "A successful response returns an empty response body and HTTP\
            \ status 204 (No Content), indicating that the field group has been deleted."
          content: {}
    patch:
      tags:
      - Field groups
      summary: Update a custom field group
      description: |-
        You can use this endpoint to update one or more attributes of your custom field group.
        The Schema Registry supports all standard JSON Patch operations, including `add`, `remove`, and `replace`, to allow you to modify or update resources you have defined.

        >**NOTE**: For more information on JSON Patch, including all available operations, please refer to the [the official JSON Patch specification](https://datatracker.ietf.org/doc/html/rfc6902). > >For more information on using this operation, see the [field groups endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/field-groups.html) on Experience League.
      operationId: patchFieldGroup
      parameters:
      - name: FIELD_GROUP_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the field group you
          want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: The request body accepts a JSON Patch payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchFieldGroup'
        required: true
      responses:
        "200":
          description: A successful response returns the details of the updated field
            group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patchFieldGroupResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
  /{CONTAINER_ID}/schemas:
    get:
      tags:
      - Schemas
      summary: List schemas
      description: |-
        You can list schemas within the global or tenant container by performing a GET request. To help filter results, the Schema Registry supports the use of query parameters when listing resources.

        >**NOTE**: For more information on using this operation, see the [schemas endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/schemas.html) on Experience League.
      operationId: listSchemas
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to list resources from.\
          \ To list core resources provided by Adobe, use `global`. To list custom\
          \ resources defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "The desired response format. For listing calls, the following\
          \ `Accept` header values are permitted: \n<table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed-id+json</code></td><td>Returns\
          \ a short summary of each resource, generally the preferred header for listing.</td></tr><tr><td><code>application/vnd.adobe.xed+json</code></td><td>Returns\
          \ full JSON for each resource, with the original <code>$ref</code> and <code>allOf</code>\
          \ attributes included.</td></tr></tbody></table>"
        required: true
        schema:
          type: string
      - name: property
        in: query
        description: "A comma-separated list of top-level object properties to be\
          \ returned in the response. For example, `property=meta:intendedToExtend==https://ns.adobe.com/xdm/context/profile`\
          \ returns only field groups that are compatible with the XDM Individual\
          \ Profile class."
        schema:
          type: string
      - name: orderby
        in: query
        description: "Sort the listed resources by specified fields. For example `orderby=title`\
          \ sorts results by title in ascending order (A-Z). Adding a `-` before the\
          \ field name (`orderby=-title`) sorts items in descending order (Z-A). Multiple\
          \ fields can also be included to denote primary and secondary sort orders\
          \ (for example, `orderby=title,description`)."
        schema:
          type: string
      - name: start
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the `orderby` field received in the previous page. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.

          For example, if the `orderby` parameter is set to `orderby=name,firstname`, the `start` parameter would contain a value for the `name` property. In this case, if you wanted to show the next 20 entries of a resource immediately following the name "Miller", you would use: `?orderby=name,firstname&start=Miller&limit=20`.
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `limit` restricts the maximum number of items that should be returned for a given request. This parameter cannot be used without an `orderby` parameter present.

          The `limit` parameter specifies a positive integer (between `0` and `500`) as a *hint* as to the maximum number of items that should be returned. For example, `limit=5` returns only five resources in the list. However, this value is not strictly honored. The actual response size may be smaller or larger as constrained by the need to provide the reliable operation of the `start` parameter, if one is provided.
        schema:
          type: number
      responses:
        "200":
          description: A successful response returns a list of all schemas in the
            container with format dependent on the `Accept` header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSchemasResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid `Accept` header for a listing call with no version
            supplied (e.g. `application/vnd.adobe.xed-id+json`) before trying again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorList'
  /{CONTAINER_ID}/schemas/{SCHEMA_ID}:
    get:
      tags:
      - Schemas
      summary: Retrieve a schema
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [schemas endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/schemas.html)\
        \ on Experience League."
      operationId: retrieveSchema
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to retrieve a resource\
          \ from. To retrieve a core resource provided by Adobe, use `global`. To\
          \ retrieve a custom resource defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: SCHEMA_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the schema in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns the details of the schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lookupSchemaResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
        "404":
          description: The resource is not found.
          content: {}
        "406":
          description: The specified `Accept` format/version is not available for
            this resource.
          content: {}
  /tenant/schemas:
    post:
      tags:
      - Schemas
      summary: Create a custom schema
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [schemas endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/schemas.html)\
        \ on Experience League."
      operationId: createSchema
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: The JSON payload must include an `allOf` attribute referencing
          the `$id` of the base class the that the schema will implement.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSchema'
        required: true
      responses:
        "201":
          description: A successful response returns the details of the newly created
            schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createSchemaResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
  /tenant/schemas/{SCHEMA_ID}:
    put:
      tags:
      - Schemas
      summary: Update a custom schema
      description: |-
        A PUT request essentially re-writes the schema, therefore the request body must include all fields required to create (POST) a schema. This is especially useful when updating a lot of information in the schema at once.

        >**NOTE**: For more information on using this operation, see the [schemas endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/schemas.html) on Experience League.
      operationId: updateSchema
      parameters:
      - name: SCHEMA_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the schema in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON payload must include all of the fields that were originally\
          \ required for creating the schema, but with updated values. This includes\
          \ an `allOf` attribute referencing the `$id` of the class the schema will\
          \ implement."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceSchema'
        required: true
      responses:
        "200":
          description: A successful response returns JSON schema with updated attributes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateSchemaResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Schemas
      summary: Delete a custom schema
      description: |-
        You can remove an existing schema by performing a DELETE request. A successful deletion returns an empty response body and HTTP status 204 (No Content).

        >**NOTE**: For more information on using this operation, see the [schemas endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/schemas.html) on Experience League.
      operationId: deleteSchema
      parameters:
      - name: SCHEMA_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the schema in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "A successful response returns an empty response body and HTTP\
            \ status 204 (No Content), indicating that the schema has been deleted."
          content: {}
        "404":
          description: The resource is not found.
          content: {}
        "500":
          description: An internal server error occurred.
          content: {}
    patch:
      tags:
      - Schemas
      summary: Update one or more attributes of a custom schema
      description: |-
        You can use this endpoint to update one or more attributes of the custom schema.

        The Schema Registry supports all standard JSON Patch operations, including `add`, `remove`, and `replace`. For more information on JSON Patch, including all available operations, please refer to the [the official JSON Patch specification](https://datatracker.ietf.org/doc/html/rfc6902).

        >**NOTE**: For more information on using this operation, see the [schemas endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/schemas.html) on Experience League.
      operationId: patchSchema
      parameters:
      - name: SCHEMA_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the schema in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: The request body accepts a JSON Patch payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchSchema'
        required: true
      responses:
        "200":
          description: A successful response returns JSON schema with updated attributes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patchSchemaResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
  /global/behaviors:
    get:
      tags:
      - Behaviors
      summary: List behaviors
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [behaviors endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/behaviors.html)\
        \ on Experience League."
      operationId: listBehaviors
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "The desired response format. For listing calls, the following\
          \ `Accept` header values are permitted: \n<table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed-id+json</code></td><td>Returns\
          \ a short summary of each resource, generally the preferred header for listing.</td></tr><tr><td><code>application/vnd.adobe.xed+json</code></td><td>Returns\
          \ full JSON for each resource, with the original <code>$ref</code> and <code>allOf</code>\
          \ attributes included.</td></tr></tbody></table>"
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns all behaviors in the global container.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/listResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid `Accept` header for a listing call with no version
            supplied (e.g. `application/vnd.adobe.xed-id+json`) before trying again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorList'
  /global/behaviors/{BEHAVIOR_ID}:
    get:
      tags:
      - Behaviors
      summary: Retrieve a behavior
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [behaviors endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/behaviors.html)\
        \ on Experience League."
      operationId: retrieveBehavior
      parameters:
      - name: BEHAVIOR_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the behavior in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns the details of the behavior specified
            in the request path.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleBehaviorResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid accept header for a lookup call including a version
            number (e.g. `application/vnd.adobe.xed+json;version=1`) before trying
            again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorLookup'
  /{CONTAINER_ID}/mixins:
    get:
      tags:
      - Mixins (deprecated)
      summary: List all mixins
      description: "**NOTE**: This endpoint is deprecated. For future implementations,\
        \ please use the [equivalent operation](#operation/listFieldGroups) for the\
        \ field groups endpoint instead."
      operationId: listMixins
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to list resources from.\
          \ To list core resources provided by Adobe, use `global`. To list custom\
          \ resources defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "The desired response format. For listing calls, the following\
          \ `Accept` header values are permitted: \n<table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed-id+json</code></td><td>Returns\
          \ a short summary of each resource, generally the preferred header for listing.</td></tr><tr><td><code>application/vnd.adobe.xed+json</code></td><td>Returns\
          \ full JSON for each resource, with the original <code>$ref</code> and <code>allOf</code>\
          \ attributes included.</td></tr></tbody></table>"
        required: true
        schema:
          type: string
      - name: property
        in: query
        description: "A comma-separated list of top-level object properties to be\
          \ returned in the response. For example, `property=meta:intendedToExtend==https://ns.adobe.com/xdm/context/profile`\
          \ returns only field groups that are compatible with the XDM Individual\
          \ Profile class."
        schema:
          type: string
      - name: orderby
        in: query
        description: "Sort the listed resources by specified fields. For example `orderby=title`\
          \ sorts results by title in ascending order (A-Z). Adding a `-` before the\
          \ field name (`orderby=-title`) sorts items in descending order (Z-A). Multiple\
          \ fields can also be included to denote primary and secondary sort orders\
          \ (for example, `orderby=title,description`)."
        schema:
          type: string
      - name: start
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the `orderby` field received in the previous page. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.

          For example, if the `orderby` parameter is set to `orderby=name,firstname`, the `start` parameter would contain a value for the `name` property. In this case, if you wanted to show the next 20 entries of a resource immediately following the name "Miller", you would use: `?orderby=name,firstname&start=Miller&limit=20`.
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `limit` restricts the maximum number of items that should be returned for a given request. This parameter cannot be used without an `orderby` parameter present.

          The `limit` parameter specifies a positive integer (between `0` and `500`) as a *hint* as to the maximum number of items that should be returned. For example, `limit=5` returns only five resources in the list. However, this value is not strictly honored. The actual response size may be smaller or larger as constrained by the need to provide the reliable operation of the `start` parameter, if one is provided.
        schema:
          type: number
      responses:
        "200":
          description: A successful response returns all mixins in the specified container.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFieldGroupsResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      deprecated: true
  /{CONTAINER_ID}/mixins/{MIXIN_ID}:
    get:
      tags:
      - Mixins (deprecated)
      summary: Retrieve a mixin
      description: "**NOTE**: This endpoint is deprecated. For future implementations,\
        \ please use the [equivalent operation](#operation/retrieveFieldGroup) for\
        \ the field groups endpoint instead."
      operationId: lookupMixin
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to retrieve a resource\
          \ from. To retrieve a core resource provided by Adobe, use `global`. To\
          \ retrieve a custom resource defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: MIXIN_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the mixin in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns the details of the mixin.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lookupFieldGroupResponse'
        "404":
          description: The resource is not found.
          content: {}
        "406":
          description: The specified `Accept` format/version is not available for
            this resource.
          content: {}
      deprecated: true
  /tenant/mixins:
    post:
      tags:
      - Mixins (deprecated)
      summary: Create a new custom mixin
      description: "**NOTE**: This endpoint is deprecated. For future implementations,\
        \ please use the [equivalent operation](#operation/createFieldGroup) for the\
        \ field groups endpoint instead."
      operationId: createMixin
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: The JSON payload must include a 'meta:intendedToExtend' field
          listing the '$id' of the class(es) with which the field group is compatible.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFieldGroup'
        required: true
      responses:
        "201":
          description: A successful response returns the details of the mixin.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createFieldGroupResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      deprecated: true
      x-codegen-request-body-name: body
  /tenant/mixins/{MIXIN_ID}:
    put:
      tags:
      - Mixins (deprecated)
      summary: Update a custom mixin
      description: "**NOTE**: This endpoint is deprecated. For future implementations,\
        \ please use the [equivalent operation](#operation/updateFieldGroup) for the\
        \ field groups endpoint instead."
      operationId: replaceMixin
      parameters:
      - name: MIXIN_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the mixin in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON payload must include all of the fields that were originally\
          \ required for creating the field group, but with updated values. This includes\
          \ an `allOf` attribute referencing the `$id` of the class the schema will\
          \ implement."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceFieldGroup'
        required: true
      responses:
        "200":
          description: A successful response returns the details of the updated mixin.
          content: {}
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      deprecated: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - Mixins (deprecated)
      summary: Delete a custom mixin
      description: "**NOTE**: This endpoint is deprecated. For future implementations,\
        \ please use the [equivalent operation](#operation/removeFieldGroup) for the\
        \ field groups endpoint instead."
      operationId: removeMixin
      parameters:
      - name: MIXIN_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the mixin in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "A successful response returns an empty response body and HTTP\
            \ status 204 (No Content), indicating that the mixin has been deleted."
          content: {}
        "404":
          description: The resource is not found.
          content: {}
        "500":
          description: An internal server error occurred.
          content: {}
      deprecated: true
    patch:
      tags:
      - Mixins (deprecated)
      summary: Update custom mixin
      description: "**NOTE**: This endpoint is deprecated. For future implementations,\
        \ please use the [equivalent operation](#operation/patchFieldGroup) for the\
        \ field groups endpoint instead."
      operationId: updateMixin
      parameters:
      - name: MIXIN_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the mixin in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: The request body accepts a JSON Patch payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchFieldGroup'
        required: true
      responses:
        "200":
          description: A successful response returns the details of the updated mixin.
          content: {}
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      deprecated: true
      x-codegen-request-body-name: body
  /{CONTAINER_ID}/classes:
    get:
      tags:
      - Classes
      summary: List classes
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [classes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/classes.html)\
        \ on Experience League."
      operationId: listClasses
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to list resources from.\
          \ To list core resources provided by Adobe, use `global`. To list custom\
          \ resources defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "The desired response format. For listing calls, the following\
          \ `Accept` header values are permitted: \n<table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed-id+json</code></td><td>Returns\
          \ a short summary of each resource, generally the preferred header for listing.</td></tr><tr><td><code>application/vnd.adobe.xed+json</code></td><td>Returns\
          \ full JSON for each resource, with the original <code>$ref</code> and <code>allOf</code>\
          \ attributes included.</td></tr></tbody></table>"
        required: true
        schema:
          type: string
      - name: property
        in: query
        description: "A comma-separated list of top-level object properties to be\
          \ returned in the response. For example, `property=meta:intendedToExtend==https://ns.adobe.com/xdm/context/profile`\
          \ returns only field groups that are compatible with the XDM Individual\
          \ Profile class."
        schema:
          type: string
      - name: orderby
        in: query
        description: "Sort the listed resources by specified fields. For example `orderby=title`\
          \ sorts results by title in ascending order (A-Z). Adding a `-` before the\
          \ field name (`orderby=-title`) sorts items in descending order (Z-A). Multiple\
          \ fields can also be included to denote primary and secondary sort orders\
          \ (for example, `orderby=title,description`)."
        schema:
          type: string
      - name: start
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the `orderby` field received in the previous page. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.

          For example, if the `orderby` parameter is set to `orderby=name,firstname`, the `start` parameter would contain a value for the `name` property. In this case, if you wanted to show the next 20 entries of a resource immediately following the name "Miller", you would use: `?orderby=name,firstname&start=Miller&limit=20`.
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `limit` restricts the maximum number of items that should be returned for a given request. This parameter cannot be used without an `orderby` parameter present.

          The `limit` parameter specifies a positive integer (between `0` and `500`) as a *hint* as to the maximum number of items that should be returned. For example, `limit=5` returns only five resources in the list. However, this value is not strictly honored. The actual response size may be smaller or larger as constrained by the need to provide the reliable operation of the `start` parameter, if one is provided.
        schema:
          type: number
      responses:
        "200":
          description: A successful response returns a list of all classes in the
            container.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listClassesResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid `Accept` header for a listing call with no version
            supplied (e.g. `application/vnd.adobe.xed-id+json`) before trying again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorList'
  /{CONTAINER_ID}/classes/{CLASS_ID}:
    get:
      tags:
      - Classes
      summary: Retrieve a class
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [classes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/classes.html)\
        \ on Experience League."
      operationId: retrieveClass
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to retrieve a resource\
          \ from. To retrieve a core resource provided by Adobe, use `global`. To\
          \ retrieve a custom resource defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: CLASS_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the class you want to
          look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns the details of the class.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lookupClassResponse'
        "400":
          description: "The `Accept` header is invalid or missing. Ensure that you\
            \ are providing a valid `Accept` header for a single lookup call, including\
            \ a major version (e.g. `application/vnd.adobe.xed-id+json; version=1`)\
            \ before trying again."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorLookup'
        "404":
          description: The resource is not found.
          content: {}
  /tenant/classes:
    post:
      tags:
      - Classes
      summary: Create a custom class
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [classes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/classes.html)\
        \ on Experience League."
      operationId: createClass
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: The request payload must include an `allOf` attribute referencing
          either 'https://ns.adobe.com/xdm/data/record' or 'https://ns.adobe.com/xdm/data/time-series'.
          This value represents the data behavior upon which the class is based. `allOf`
          may also optionally include field groups or custom fields that will be included
          each time the class is used.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createClass'
        required: true
      responses:
        "201":
          description: A successful response returns the details of the newly created
            class.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createClassResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
  /tenant/classes/{CLASS_ID}:
    put:
      tags:
      - Classes
      summary: Update a custom class
      description: |-
        A PUT request essentially re-writes the class, therefore the request body must include all fields required to create (POST) a class. This is especially useful when updating a lot of information in the class at once.

        >**NOTE**: For more information on using this operation, see the [classes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/classes.html) on Experience League.
      operationId: replaceClass
      parameters:
      - name: CLASS_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the class you want to
          update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON payload must include all of the fields that were originally\
          \ required for creating the class, but with updated values. This includes\
          \ an `allOf` attribute referencing the behavior of the class."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceClass'
        required: true
      responses:
        "200":
          description: A successful response returns the details of the updated class.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateClassResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Classes
      summary: Delete a custom class
      description: |-
        Remove a class by performing a DELETE request to the `$id` of the class being removed.

        A successful deletion returns an empty response body and HTTP status 204 (No Content).

        >**NOTE**: For more information on using this operation, see the [classes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/classes.html) on Experience League.
      operationId: removeClass
      parameters:
      - name: CLASS_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the class you want to
          delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "A successful response returns an empty response body and HTTP\
            \ status 204 (No Content), indicating that the resource has been deleted."
          content: {}
        "404":
          description: The resource is not found.
          content: {}
    patch:
      tags:
      - Classes
      summary: Update one or more attributes of a custom class
      description: |-
        You can use this endpoint to update one or more attributes for a custom class.
        The Schema Registry supports all standard JSON Patch operations, including `add`, `remove`, and `replace`, to allow users to modify or update classes they have defined.
        >**NOTE**: For more information on JSON Patch, including all available operations, please refer to the [the official JSON Patch specification](https://datatracker.ietf.org/doc/html/rfc6902). > >For more information on using this operation, see the [classes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/classes.html) on Experience League.
      operationId: updateClass
      parameters:
      - name: CLASS_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the class you want to
          update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: The request body accepts a JSON Patch payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchClass'
        required: true
      responses:
        "200":
          description: A successful response returns the the details of the updated
            class.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patchClassResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
  /{CONTAINER_ID}/datatypes:
    get:
      tags:
      - Data types
      summary: List data types
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [data types endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/data-types.html)\
        \ on Experience League."
      operationId: listDataTypes
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to list resources from.\
          \ To list core resources provided by Adobe, use `global`. To list custom\
          \ resources defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "The desired response format. For listing calls, the following\
          \ `Accept` header values are permitted: \n<table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed-id+json</code></td><td>Returns\
          \ a short summary of each resource, generally the preferred header for listing.</td></tr><tr><td><code>application/vnd.adobe.xed+json</code></td><td>Returns\
          \ full JSON for each resource, with the original <code>$ref</code> and <code>allOf</code>\
          \ attributes included.</td></tr></tbody></table>"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: property
        in: query
        description: "A comma-separated list of top-level object properties to be\
          \ returned in the response. For example, `property=meta:intendedToExtend==https://ns.adobe.com/xdm/context/profile`\
          \ returns only field groups that are compatible with the XDM Individual\
          \ Profile class."
        schema:
          type: string
      - name: orderby
        in: query
        description: "Sort the listed resources by specified fields. For example `orderby=title`\
          \ sorts results by title in ascending order (A-Z). Adding a `-` before the\
          \ field name (`orderby=-title`) sorts items in descending order (Z-A). Multiple\
          \ fields can also be included to denote primary and secondary sort orders\
          \ (for example, `orderby=title,description`)."
        schema:
          type: string
      - name: start
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the `orderby` field received in the previous page. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.

          For example, if the `orderby` parameter is set to `orderby=name,firstname`, the `start` parameter would contain a value for the `name` property. In this case, if you wanted to show the next 20 entries of a resource immediately following the name "Miller", you would use: `?orderby=name,firstname&start=Miller&limit=20`.
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `limit` restricts the maximum number of items that should be returned for a given request. This parameter cannot be used without an `orderby` parameter present.

          The `limit` parameter specifies a positive integer (between `0` and `500`) as a *hint* as to the maximum number of items that should be returned. For example, `limit=5` returns only five resources in the list. However, this value is not strictly honored. The actual response size may be smaller or larger as constrained by the need to provide the reliable operation of the `start` parameter, if one is provided.
        schema:
          type: number
      responses:
        "200":
          description: A successful response returns a list of all data types in the
            specified container.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listDataTypesResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid `Accept` header for a listing call with no version
            supplied (e.g. `application/vnd.adobe.xed-id+json`) before trying again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorList'
  /{CONTAINER_ID}/datatypes/{DATA_TYPE_ID}:
    get:
      tags:
      - Data types
      summary: Retrieve a data type
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [data types endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/data-types.html)\
        \ on Experience League."
      operationId: retrieveDataType
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to retrieve a resource\
          \ from. To retrieve a core resource provided by Adobe, use `global`. To\
          \ retrieve a custom resource defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: DATA_TYPE_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the data type in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns the details of the data type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lookupDataTypeResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid accept header for a lookup call including a version
            number (e.g. `application/vnd.adobe.xed+json;version=1`) before trying
            again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorLookup'
  /tenant/datatypes:
    post:
      tags:
      - Data types
      summary: Create a custom data type
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [data types endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/data-types.html)\
        \ on Experience League."
      operationId: createDataType
      parameters:
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: |-
          Unlike field groups, defining a data type does not require `meta:extends` or `meta:intendedToExtend` fields, nor do fields need to be nested to avoid collisions.
          When it comes to defining the field structure of data type itself, you can use primitive types (like `string` or `object`) or you can reference other existing data types through `$ref` attributes. See the guide on [defining custom XDM fields in the API](../tutorials/custom-fields-api.md) for detailed guidance on the expected format for different XDM field types.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDataType'
        required: true
      responses:
        "201":
          description: A successful response returns the details of the newly created
            data type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createDataTypeResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
  /tenant/datatypes/{DATA_TYPE_ID}:
    put:
      tags:
      - Data types
      summary: Update a custom data type
      description: |-
        A PUT request essentially re-writes the data type, therefore the request body must include all fields required to create (POST) a data type. This is especially useful when updating a lot of information in the data type at once.

        >**NOTE**: For more information on using this operation, see the [data types endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/data-types.html) on Experience League.
      operationId: replaceDatatype
      parameters:
      - name: DATA_TYPE_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the data type in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON payload must include all of the fields that were originally\
          \ required for creating the data type, but with updated values."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceDataType'
        required: true
      responses:
        "200":
          description: A successful response returns the details of the updated data
            type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/putDataTypeResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Data types
      summary: Delete a custom class
      description: |-
        Removing a data type is done through a DELETE request to the `$id` of the data type being removed.

        A successful deletion returns an empty response body and HTTP status 204 (No Content).

        >**NOTE**: For more information on using this operation, see the [data types endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/data-types.html) on Experience League.
      operationId: deleteDatatype
      parameters:
      - name: DATA_TYPE_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the data type in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "A successful response returns an empty response body and HTTP\
            \ status 204 (No Content), indicating that the class has been deleted."
          content: {}
        "404":
          description: The resource is not found.
          content: {}
        "500":
          description: An internal server error occurred.
          content: {}
    patch:
      tags:
      - Data types
      summary: Update a custom data type's attributes
      description: |-
        You can use this endpoint to update one or more attributes of a custom data type.
        The Schema Registry supports all standard JSON Patch operations, including `add`, `remove`, and `replace`, to allow users to modify or update data types they have defined.

        >**NOTE**: For more information on JSON Patch, including all available operations, please refer to the [the official JSON Patch specification](https://datatracker.ietf.org/doc/html/rfc6902). > >For more information on using this operation, see the [data types endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/data-types.html) on Experience League.
      operationId: updateDataType
      parameters:
      - name: DATA_TYPE_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the data type in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: The request body accepts a JSON Patch payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchDataType'
        required: true
      responses:
        "200":
          description: A successful response returns the details of the updated data
            type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patchDataTypeResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
  /{CONTAINER_ID}/descriptors:
    get:
      tags:
      - Descriptors
      summary: List descriptors
      description: |-
        Schemas define a static view of data entities, but do not provide specific details on how data based on these schemas (datasets) may relate to one another. Platform allows you to describe these relationships and other interpretive metadata about a schema through the use of descriptors.

        Descriptors are tenant-level metadata for schemas, meaning they are unique to your IMS Organization and all descriptor operations take place in the `tenant` container.

        Each schema can have one or more schema descriptor entities applied to it. Each schema descriptor entity includes a descriptor `@type` and the `sourceSchema` to which it applies. Once applied, these descriptors apply to all datasets created using the schema.

        >**NOTE**: For more information on using this operation, see the [descriptors endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/descriptors.html) on Experience League.
      operationId: listDescriptors
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to list resources from.\
          \ To list core resources provided by Adobe, use `global`. To list custom\
          \ resources defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. Descriptors require unique `Accept` headers using `xdm` instead of `xed`. The following values are permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xdm-id+json</code></td><td>Returns a list of descriptor IDs, grouped by their <code>@type</code>.</td></tr><tr><td><code>application/vnd.adobe.xdm-link+json</code></td><td>Returns a list of descriptor API paths, grouped by their <code>@type</code>.</td></tr><tr><td><code>application/vnd.adobe.xdm+json</code></td><td>Returns a list of descriptor objects, grouped by their <code>@type</code>.</td></tr><tr><td><code>application/vnd.adobe.xdm-v2{-id/-link}+json</code></td><td>Including the <code>-v2</code> option in any of the above <code>Accept</code> headers permits paging functionality, returning a results array with a <code>_page</code> attribute that can be used to request the next page if needed.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      - name: property
        in: query
        description: "A comma-separated list of top-level object properties to be\
          \ returned in the response. For example, `property=meta:intendedToExtend==https://ns.adobe.com/xdm/context/profile`\
          \ returns only field groups that are compatible with the XDM Individual\
          \ Profile class."
        schema:
          type: string
      - name: orderby
        in: query
        description: "Sort response by specified fields separated by \",\" and/or\
          \ prefix field with \"-\" for descending order. Used by the v2 option of\
          \ the API, as indicated by the `Accept` header."
        schema:
          type: string
      - name: limit
        in: query
        description: "Specify a limit for the number of response results to be displayed\
          \ (must be between 0 and 500). Used by the v2 option of the API, as indicated\
          \ by the `Accept` header."
        schema:
          type: number
      - name: start
        in: query
        description: "The start value of the first `orderBy` field. The value of this\
          \ parameter be the same data type as that of the `orderBy` field (e.g. strings\
          \ or integers). Used by the v2 option of the API, as indicated by the `Accept`\
          \ header."
        schema:
          type: string
      responses:
        "200":
          description: "A successful response returns a list of all existing descriptors,\
            \ separated by type."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listDescriptorsResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid `Accept` header for the descriptors endpoint with
            no version supplied (e.g. `application/vnd.adobe.xdm+json`) before trying
            again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorDescriptorList'
  /{CONTAINER_ID}/descriptors/{DESCRIPTOR_ID}:
    get:
      tags:
      - Descriptors
      summary: Retrieve a descriptor
      description: |-
        View the details of a specific descriptor by performing a lookup (GET) request using the `@id` of the descriptor. Descriptors are not versioned, therefore no `Accept` header is required in the lookup request.

        >**NOTE**: For more information on using this operation, see the [descriptors endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/descriptors.html) on Experience League.
      operationId: retrieveDescriptor
      parameters:
      - name: CONTAINER_ID
        in: path
        description: "The name of the container that you want to retrieve a resource\
          \ from. To retrieve a core resource provided by Adobe, use `global`. To\
          \ retrieve a custom resource defined by your organization, use `tenant`."
        required: true
        schema:
          type: string
      - name: DESCRIPTOR_ID
        in: path
        description: The unique ID (`@id`) of the descriptor in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns the details of the descriptor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityDescriptorResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid `Accept` header for the descriptors endpoint with
            no version supplied (e.g. `application/vnd.adobe.xdm+json`) before trying
            again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorDescriptorLookup'
  /tenant/descriptors:
    post:
      tags:
      - Descriptors
      summary: Create a descriptor
      description: "You can create a new descriptor by making a POST request. The\
        \ required request payload fields vary based on the `@type` of descriptor\
        \ being defined. For details on the requirements for each descriptor type,\
        \ refer to the section on [defining descriptors](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/descriptors.html#defining-descriptors)\
        \ on Experience League."
      operationId: createDescriptor
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: "The required request payload fields vary based on the `@type`\
          \ of descriptor being defined. For details on the requirements for each\
          \ descriptor type, refer to the section on [defining descriptors](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/descriptors.html?lang=en#defining-descriptors)\
          \ in the API guide."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDescriptor'
        required: true
      responses:
        "201":
          description: A successful response returns the details of the newly created
            descriptor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createDescriptorResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
  /tenant/descriptors/{DESCRIPTOR_ID}:
    put:
      tags:
      - Descriptors
      summary: Update a descriptor
      description: |-
        You can update a descriptor by making a PUT request. This action essentially rewrites the existing descriptor, therefore the payload must include all fields that were required when the descriptor was first defined.

        >**NOTE**: For more information on using this operation, see the [descriptors endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/descriptors.html) on Experience League.
      operationId: updateDescriptor
      parameters:
      - name: DESCRIPTOR_ID
        in: path
        description: The unique ID (`@id`) of the descriptor in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The type of content being sent in the body of the request. When\
          \ sending requests that include payloads to the Schema Registry API, this\
          \ header must be included with a value of `application/json`."
        required: true
        schema:
          type: string
      requestBody:
        description: "The required request payload fields vary based on the `@type`\
          \ of descriptor being defined. For details on the requirements for each\
          \ descriptor type, refer to the section on [defining descriptors](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/descriptors.html?lang=en#defining-descriptors)\
          \ in the API guide."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDescriptor'
        required: true
      responses:
        "200":
          description: A successful response returns the details of the updated descriptor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createDescriptorResponse'
        "400":
          description: The request payload was incorrectly formatted. Check your payload
            formatting before trying again.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Descriptors
      summary: Delete a descriptor
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [descriptors endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/descriptors.html)\
        \ on Experience League."
      operationId: deleteDescriptor
      parameters:
      - name: DESCRIPTOR_ID
        in: path
        description: The unique ID (`@id`) of the descriptor in question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "A successful response returns an empty response body and HTTP\
            \ status 204 (No Content), indicating that the descriptor has been deleted."
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: The resource is not found.
          content: {}
  /tenant/unions:
    get:
      tags:
      - Unions
      summary: List union schemas
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [unions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/unions.html)\
        \ on Experience League."
      operationId: listUnionSchemas
      parameters:
      - name: Accept
        in: header
        description: "The desired response format. For listing calls, the following\
          \ `Accept` header values are permitted: \n<table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed-id+json</code></td><td>Returns\
          \ a short summary of each resource, generally the preferred header for listing.</td></tr><tr><td><code>application/vnd.adobe.xed+json</code></td><td>Returns\
          \ full JSON for each resource, with the original <code>$ref</code> and <code>allOf</code>\
          \ attributes included.</td></tr></tbody></table>"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: property
        in: query
        description: "A comma-separated list of top-level object properties to be\
          \ returned in the response. For example, `property=meta:intendedToExtend==https://ns.adobe.com/xdm/context/profile`\
          \ returns only field groups that are compatible with the XDM Individual\
          \ Profile class."
        schema:
          type: string
      - name: orderby
        in: query
        description: "Sort the listed resources by specified fields. For example `orderby=title`\
          \ sorts results by title in ascending order (A-Z). Adding a `-` before the\
          \ field name (`orderby=-title`) sorts items in descending order (Z-A). Multiple\
          \ fields can also be included to denote primary and secondary sort orders\
          \ (for example, `orderby=title,description`)."
        schema:
          type: string
      - name: start
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

          Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the `orderby` field received in the previous page. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.

          For example, if the `orderby` parameter is set to `orderby=name,firstname`, the `start` parameter would contain a value for the `name` property. In this case, if you wanted to show the next 20 entries of a resource immediately following the name "Miller", you would use: `?orderby=name,firstname&start=Miller&limit=20`.
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          When used in conjunction with an `orderby` parameter, `limit` restricts the maximum number of items that should be returned for a given request. This parameter cannot be used without an `orderby` parameter present.

          The `limit` parameter specifies a positive integer (between `0` and `500`) as a *hint* as to the maximum number of items that should be returned. For example, `limit=5` returns only five resources in the list. However, this value is not strictly honored. The actual response size may be smaller or larger as constrained by the need to provide the reliable operation of the `start` parameter, if one is provided.
        schema:
          type: number
      responses:
        "200":
          description: A successful response returns a list of all union schemas with
            format dependent on the `Accept` header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listUnionsResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid `Accept` header for a listing call with no version
            supplied (e.g. `application/vnd.adobe.xed-id+json`) before trying again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorList'
  /tenant/unions/{UNION_ID}:
    get:
      tags:
      - Unions
      summary: Retrieve a union schema
      description: ">**NOTE**: For more information on using this operation, see the\
        \ [unions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/unions.html)\
        \ on Experience League."
      operationId: retrieveUnionSchema
      parameters:
      - name: UNION_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` of the union schema in
          question.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response returns the details of the union.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lookupUnionResponse'
        "400":
          description: The `Accept` header is invalid or missing. Ensure that you
            are providing a valid accept header for a lookup call including a version
            number (e.g. `application/vnd.adobe.xed+json;version=1`) before trying
            again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptErrorLookup'
  /rpc/export/{RESOURCE_ID}:
    get:
      tags:
      - Export/Import
      summary: Retrieve an export payload
      description: |-
        You can use this endpoint to retrieve an export payload for a specific resource in order to transfer it into a different sandbox or IMS Organization.

        >**NOTE**: For more information on using this operation, see the [export](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/export.html) and [import endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/import.html) on Experience League.
      operationId: retrieveExportPayload
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      - name: RESOURCE_ID
        in: path
        description: "The `meta:altId` or URL-encoded `$id` value of the schema, field\
          \ group, or data type you want to export."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "A successful response returns the details of the exported\
            \ resource and its dependent field groups and data types, with any tenant\
            \ ID values being replaced with `<XDM_TENANTID_PLACEHOLDER>`. The contents\
            \ of this payload can then be used as the request body in a POST `/rpc/import`\
            \ call to import the resource to the desired sandbox or IMS Organization."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importExportPayload'
        "404":
          description: "No schema could be found for the specified {SCHEMA_ID}. Double-check\
            \ that you are providing a valid {SCHEMA_ID} and are using the correct\
            \ {IMS_ORG} and {SANDBOX_NAME} headers for that schema before trying again."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
  /rpc/import:
    post:
      tags:
      - Export/Import
      summary: Import a resource
      description: |-
        Use an export payload to import a resource into a different sandbox or IMS Organization.

        >**NOTE**: For more information on using this operation, see the [export/import endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/export-import.html) on Experience League.
      operationId: importResource
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The unique ID ({IMS_ORG}) of the IMS Organization that you want\
          \ to import the resource into."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox that you want to import the resource\
          \ into. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      requestBody:
        description: "The payload returned by a GET `/rpc/export/{RESOURCE_ID}` call,\
          \ indicating which schemas, field groups, and/or data types should be imported\
          \ into the destination IMS Organization and sandbox."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importExportPayload'
        required: false
      responses:
        "200":
          description: "A successful response returns the details of the imported\
            \ resource, with the appropriate `{TENANT_ID}` applied for the specified\
            \ IMS Organization."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importResponse'
        "400":
          description: "The resources failed to import due to a conflict. In order\
            \ to import XDM resources, their `$id` and `title` values must be unique\
            \ within the destination IMS Org and sandbox. The error message will indicate\
            \ which field contains the conflicting value. Change this value in the\
            \ request payload before attempting the import again."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importError'
      x-codegen-request-body-name: body
  /rpc/sampledata/{SCHEMA_ID}:
    get:
      tags:
      - Sample data
      summary: Retrieve sample data
      description: |-
        Retrieve sample data for a schema.
        >**NOTE**: For more information on using this operation, see the [sample data endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/sample-data.html) on Experience League.
      operationId: retrieveSampleData
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: |-
          The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
          <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
        required: true
        schema:
          type: string
      - name: SCHEMA_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` value of the schema you
          want to generate sample data for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "A successful response returns a sample ingestion file, mapped\
            \ to the structure of the specified schema."
          content:
            application/json:
              schema:
                type: object
                example:
                  '@id': /uri-reference
                  xdm:name: Example Offer Name
                  xdm:representations:
                  - xdm:channel: https://ns.adobe.com/xdm/common/uri
                    xdm:components:
                    - '@type': https://ns.adobe.com/experience/offer-management/content-component-text
                      dc:format: application/vnd.adobe.photoshop
                      dc:language:
                      - |2+

                      repo:id: urn:aaid:sc:US:6dc33479-13ca-4b19-b25d-c805eff8a69e
                      repo:name: Example Repo Name
                      repo:resolveURL: https://plaftform.adobe.io/resolveByPath?path=&quot;/mycorp/content/projectx/fragment/prod/herobanners/banner14.html3&quot;
                    xdm:placement: https://ns.adobe.com/xdm/common/uri
                  xdm:status: draft
                  xdm:tags:
                  - https://ns.adobe.com/xdm/common/uri
        "404":
          description: "No schema could be found for the specified {SCHEMA_ID}. Double-check\
            \ that you are providing a valid {SCHEMA_ID} and are using the correct\
            \ {IMS_ORG} and {SANDBOX_NAME} headers for that schema before trying again."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
  /rpc/auditlog/{RESOURCE_ID}:
    get:
      tags:
      - Audit log
      summary: Retrieve a resource's audit log
      description: |-
        This endpoint retrieves a resource's audit log, which shows a list of all the changes made to the resource.

        >**NOTE**: For more information on using this operation, see the [audit log endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/audit-log.html) on Experience League.
      operationId: retrieveAuditLog
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform\
          \ integration, prefixed with \"Bearer \". For more information on how to\
          \ obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The API key which can be copied from your Experience Platform\
          \ integration. For more information on how to obtain this value, visit the\
          \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The IMS Organization ID which can be copied from your Experience\
          \ Platform integration. For more information on how to obtain this value,\
          \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-sandbox-name
        in: header
        description: "The name of the sandbox in which the operation will take place.\
          \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)\
          \ for more information."
        required: true
        schema:
          type: string
      - name: RESOURCE_ID
        in: path
        description: The `meta:altId` or URL-encoded `$id` value of the resource whose
          changes you wish to view.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "A successful response returns an array of change logs for\
            \ the specified resource. Each change object provides details on what\
            \ action was performed to which field(s), the user that made the change,\
            \ and a timestamp for when the change was committed."
          content:
            application/json:
              schema:
                type: array
                example:
                - id: "https://ns.adobe.com/{TENANT_ID}/schemas/50649eb1b040bf042d6400a0335901cd2a97d31a4eac4330"
                  updatedUser: "{USER_ID}"
                  imsOrg: "{IMS_ORG}"
                  updatedTime: 02-19-2021 05:43:56
                  requestId: a14NMF0jd6BIfyXaHdTDl4bC4R0r9rht
                  clientId: "{CLIENT_ID}"
                  sandBoxId: 28e74200-e3de-11e9-8f5d-7f27416c5f0d
                  updates:
                  - id: "https://ns.adobe.com/{TENANT_ID}/schemas/50649eb1b040bf042d6400a0335901cd2a97d31a4eac4330"
                    xdmType: schemas
                    action: remove
                    path: /meta:usageCount
                    value: 0
                - id: "https://ns.adobe.com/{TENANT_ID}/schemas/50649eb1b040bf042d6400a0335901cd2a97d31a4eac4330"
                  updatedUser: "{USER_ID}"
                  imsOrg: "{IMS_ORG}"
                  updatedTime: 02-19-2021 05:43:56
                  requestId: pFQbgmWrdbJrNB9GdxTSGECpXYWspu68
                  clientId: "{CLIENT_ID}"
                  sandBoxId: 28e74200-e3de-11e9-8f5d-7f27416c5f0d
                  updates:
                  - id: "https://ns.adobe.com/{TENANT_ID}/classes/11052164b588f0c29584bf6ae1a6663a59aa65426c82389f"
                    xdmType: classes
                    action: remove
                    path: "/definitions/customFields/properties/_{TENANT_ID}/properties/loyaltySunday_ABC"
                    value:
                      title: LoyaltySundayABC
                      description: ""
                      type: string
                      isRequired: false
                      required: []
                      meta:xdmType: string
                  - id: "https://ns.adobe.com/{TENANT_ID}/classes/11052164b588f0c29584bf6ae1a6663a59aa65426c82389f"
                    xdmType: classes
                    action: remove
                    path: "/definitions/customFields/properties/_{TENANT_ID}/properties/loyaltyMoxee_XYZ"
                    value:
                      title: LoyaltyMoxeeXYZ
                      description: ""
                      type: string
                      isRequired: false
                      required: []
                      meta:xdmType: string
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The `$id` of the resource that was changed. This\
                        \ value will typically represent the resource specified in\
                        \ the request path, but may represent a dependent resource\
                        \ if that is the source of the change."
                    updatedUser:
                      type: string
                      description: The ID of the user that updated the resource.
                    imsOrg:
                      type: string
                      description: The ID of the IMS Org that owns the resource.
                    updatedTime:
                      type: string
                      description: A timestamp of when the resource was updated.
                    requestId:
                      type: string
                      description: A unique ID for the request that retrieved the
                        audit log data.
                    clientId:
                      type: string
                      description: The ID of the client that updated the resource.
                    sandboxId:
                      type: string
                      description: The ID of the sandbox that owns the resource.
                    updates:
                      type: array
                      description: A list of changes made to the specified resource
                        or one of its dependent resources.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: "The `$id` of the resource that was changed.\
                              \ This value will typically represent the resource specified\
                              \ in the request path, but may represent a dependent\
                              \ resource if that is the source of the change."
                          xdmType:
                            type: string
                            description: The type of XDM resource that was changed.
                          action:
                            type: string
                            description: The type of change that was made.
                          path:
                            type: string
                            description: "A [JSON Pointer](https://experienceleague.adobe.com/docs/experience-platform/landing/platform-apis/api-fundamentals.html?lang=en#json-pointer)\
                              \ string indicating the path to the specific field that\
                              \ was changed or added."
                          value:
                            type: string
                            description: The value that was assigned to the new or
                              updated field.
components:
  schemas:
    statsResponse:
      type: object
      properties:
        imsOrg:
          type: string
          description: The ID of the IMS Organization that the returned stats apply
            to.
          example: "{IMS_ORG}"
        tenantId:
          type: string
          description: The tenant ID of the IMS Organization identified under `imsOrg`.
          example: "{TENANT_ID}"
        counts:
          type: object
          properties:
            schemas:
              type: integer
              description: The number of schemas currently stored in the Schema Library.
              example: 4
            mixins:
              type: integer
              description: The number of field groups currently stored in the Schema
                Library.
              example: 38
            datatypes:
              type: integer
              description: The number of data types currently stored in the Schema
                Library.
              example: 382
            classes:
              type: integer
              description: The number of classes currently stored in the Schema Library.
              example: 5
            unions:
              type: integer
              description: The number of union schemas currently stored in the Schema
                Library.
              example: 2
          description: Provides the total counts of different XDM resources currently
            stored in the Schema Library.
        recentlyCreatedResources:
          type: array
          description: Array of objects containing details of recently created resources.
          items:
            $ref: '#/components/schemas/listResponseItemWithVersion'
        recentlyUpdatedResources:
          type: array
          description: Array of objects containing details of recently updated resources.
          items:
            $ref: '#/components/schemas/listResponseItemWithVersion'
        classUsage:
          type: array
          description: Provides information about which schemas are being employed
            for each class in the Schema Library.
          example:
          - $id: https://ns.adobe.com/xdm/context/profile
            title: XDM Individual Profile
            numberOfSchemas: 3
            schemas:
            - $id: "https://ns.adobe.com/{TENANT_ID}/schemas/3d569c62921ac9371ad148afbaec3891547aca2a49575cef"
              title: Customers
              description: Basic profile schema.
            - $id: "https://ns.adobe.com/{TENANT_ID}/schemas/ad79ff2868d65545812ffe6745a2085d0b5deff379bc3faf"
              title: Loyalty Members
              description: Describes members of the loyalty program.
            - $id: "https://ns.adobe.com/{TENANT_ID}/schemas/274f17bc5807ff307a046bab1489fb18,"
              title: "Tenant Data Schema,"
              meta:altId: "_{TENANT_ID}.schemas.274f17bc5807ff307a046bab1489fb18,"
          - $id: https://ns.adobe.com/xdm/context/profile
            title: XDM ExperienceEvent
            numberOfSchemas: 1
            schemas:
            - $id: "https://ns.adobe.com/{TENANT_ID}/schemas/7a3739168b1cb52b1489f6f3c43eaa66ff155fa87cd1e5ee"
              title: Website Event
              description: Describes a web traffic event.
          items:
            $ref: '#/components/schemas/classUsageItem'
    classUsageItem:
      type: object
      properties:
        $id:
          type: string
          description: The URI ID of the class whose usage stats are being listed.
          example: https://ns.adobe.com/xdm/context/profile
        title:
          type: string
          description: The title of the class whose usage stats are being listed.
          example: XDM Individual Profile
        numberOfSchemas:
          type: integer
          description: The number of schemas that are based on the class.
          example: 2
        schemas:
          type: array
          description: A list of objects that describe the basic details about the
            schemas that are based on the class.
          items:
            $ref: '#/components/schemas/listResponseItem'
    linksBasic:
      type: object
      properties:
        next:
          type: string
          description: "A URI for the next page in the response, if one exists. Contains\
            \ `null` if this is the last or only page in the response."
          example: "null"
      description: Contains various links related to the response.
    linksSchemas:
      allOf:
      - $ref: '#/components/schemas/linksBasic'
      - type: object
        properties:
          global_schemas:
            type: object
            properties:
              href:
                type: string
                description: The path for retrieving schemas from the global container.
                example: https://platform.adobe.io/data/foundation/schemaregistry/global/schemas
            description: Contains an `href` property that links to the path for retrieving
              schemas from the global container.
    listSchemasResponse:
      allOf:
      - $ref: '#/components/schemas/listResponseBasic'
      - type: object
        properties:
          _links:
            $ref: '#/components/schemas/linksSchemas'
    listResponse:
      allOf:
      - $ref: '#/components/schemas/listResponseBasic'
      - type: object
        properties:
          _links:
            $ref: '#/components/schemas/linksBasic'
    listFieldGroupsResponse:
      allOf:
      - $ref: '#/components/schemas/listResponse'
      - type: object
        properties:
          results:
            type: object
    listResponseBasic:
      type: object
      properties:
        results:
          type: array
          description: Lists the basic details of the returned XDM resources.
          items:
            $ref: '#/components/schemas/listResponseItemWithVersion'
        _page:
          type: object
          properties:
            orderby:
              type: string
              description: The attribute that results are sorted by.
              example: title
            next:
              type: string
              description: "A URI for the next page in the response, if one exists.\
                \ Contains `null` if this is the last or only page in the response."
              example: "null"
            count:
              type: integer
              description: The number of results returned per page.
              example: 2
          description: Contains pagination information related to the response.
        _links:
          $ref: '#/components/schemas/linksBasic'
      example:
        results:
        - $id: "https://ns.adobe.com/{TENANT_ID}/schemas/0238be93d3e7a06aec5e0655955901ec"
          meta:altId: "_{TENANT_ID}.schemas.0238be93d3e7a06aec5e0655955901ec"
          version: "1.4"
          title: Hotels
        - $id: "https://ns.adobe.com/{TENANT_ID}/schemas/0ef4ce0d390f0809fad490802f53d30b"
          meta:altId: "_{TENANT_ID}.schemas.0ef4ce0d390f0809fad490802f53d30b"
          version: "1.0"
          title: Loyalty Members
        _page:
          orderby: title
          count: 2
        _links:
          global_schemas:
            href: https://platform.adobe.io/data/foundation/schemaregistry/global/schemas
    listResponseItem:
      type: object
      properties:
        title:
          type: string
          description: The title of the XDM resource.
          example: Tenant Data Schema
        $id:
          type: string
          description: The URI ID of the XDM resource.
          example: "https://ns.adobe.com/{TENANT_ID}/schemas/274f17bc5807ff307a046bab1489fb18"
        meta:altId:
          type: string
          description: An alternate dot-notation ID for the XDM resource.
          example: "_{TENANT_ID}.schemas.274f17bc5807ff307a046bab1489fb18"
    listResponseItemWithVersion:
      allOf:
      - $ref: '#/components/schemas/listResponseItem'
      - type: object
        properties:
          version:
            type: string
            description: The current version of the XDM resource.
            example: "1.1"
    listUnionsResponse:
      type: object
      properties:
        results:
          type: array
          description: Lists the returned union schemas.
          items:
            $ref: '#/components/schemas/unionBasic'
      example:
        results:
        - $id: https://ns.adobe.com/xdm/context/profile__union
          meta:altId: _xdm.context.profile__union
          meta:resourceType: unions
          version: "1.0"
          title: XDM Individual Profile
          type: object
          description: "An XDM Individual Profile forms a singular representation\
            \ of the attributes and interests of both identified and partially-identified\
            \ individuals. Less-identified profiles may contain only anonymous behavioral\
            \ signals, such as browser cookies, while highly-identified profiles may\
            \ contain detailed personal information such as name, date of birth, location,\
            \ and email address. As a profile grows, it becomes a robust repository\
            \ of personal information, identification information, contact details,\
            \ and communication preferences for an individual."
          allOf:
          - {}
          - $ref: https://ns.adobe.com/xdm/context/profile-test-profile
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/e16d03cd4f0f1cd0f837ceada0aa478e"
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/03a07059cad2a4d772385bcf8105750f"
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/6287e6dfaf504f1eb47842492431255d"
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/5a55c7ba8bfe66d1ec0fd5b7e6a2a280c45c6e3312c259ef"
          - $ref: https://ns.adobe.com/xdm/mixins/profile-consents
          - $ref: https://ns.adobe.com/xdm/common/external-source-system-audit-details
          - $ref: https://ns.adobe.com/xdm/context/profile-person-details
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/1e9576c98a5d2a67ac90da1a271f5eb2"
          - $ref: https://ns.adobe.com/xdm/context/profile-privacy
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/44850059caa530684c4507d0e01647e9"
          - $ref: https://ns.adobe.com/xdm/mixins/profile/profile-loyalty-details
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/d0b9284f0610076e97f57dfadf78b3de"
          - $ref: https://ns.adobe.com/experience/campaign/profile-all
          - $ref: https://ns.adobe.com/xdm/context/profile-personal-details
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/811a7c6627d5af6680cdfebf81c101c2"
          - $ref: https://ns.adobe.com/experience/profile-edgeregion
          - $ref: https://ns.adobe.com/xdm/context/profile
          - $ref: https://ns.adobe.com/xdm/context/identitymap
          - $ref: https://ns.adobe.com/experience/profile/profile-all
          - $ref: https://ns.adobe.com/xdm/context/profile-segmentation
          - $ref: https://ns.adobe.com/xdm/context/profile-preferences-details
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/5e903c020e4cd4ef65ec4b3ebcc0a1df9ab2c064f303e377"
          - $ref: https://ns.adobe.com/xdm/context/profile-work-details
          imsOrg: "{IMS_ORG}"
          meta:extends:
          - "https://ns.adobe.com/{TENANT_ID}/schemas/7c92ae0a47db946ba5d7d47b1cfbca4b"
          - https://ns.adobe.com/xdm/common/extensible
          - "https://ns.adobe.com/{TENANT_ID}/schemas/5d70026f5522fc60b3c81f6523b83c86"
          - "https://ns.adobe.com/{TENANT_ID}/mixins/5a55c7ba8bfe66d1ec0fd5b7e6a2a280c45c6e3312c259ef"
          - https://ns.adobe.com/xdm/mixins/profile-consents
          - "https://ns.adobe.com/{TENANT_ID}/schemas/c447e8716f1d4598be9e36dcd64cd55a"
          - https://ns.adobe.com/xdm/common/external-source-system-audit-details
          - "https://ns.adobe.com/{TENANT_ID}/mixins/d0b9284f0610076e97f57dfadf78b3de"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/653e53eb04341d09453c9b6a5fb43d1b4ca9526ec274856d"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/c65ddf08cf2d4a2fe94bd06113bf4bc4c855e12a936410d5"
          - "https://ns.adobe.com/{TENANT_ID}/mixins/811a7c6627d5af6680cdfebf81c101c2"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/ea2208ffef6dc12851f938e54bc723f2b6aa1a7bcb9b9535"
          - https://ns.adobe.com/experience/profile/profile-all
          - https://ns.adobe.com/xdm/context/profile-work-details
          - "https://ns.adobe.com/{TENANT_ID}/schemas/a938858fbe085db9cc0d7b17ca7da28d"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/e5c13b941fc87d3614f742528e8c30693baae7c41af01fc2"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/b67de72ed55dcafec654ec9818eb55a4"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/e7bc97acfaf14832fd666cbd6b3629e1"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/afb2da1c042e4413de24f4096157c9f6a72cc43b57ee1a"
          - https://ns.adobe.com/experience/campaign/profile-all
          - https://ns.adobe.com/xdm/context/profile
          - https://ns.adobe.com/xdm/context/profile-segmentation
          - https://ns.adobe.com/xdm/context/profile-preferences-details
          - "https://ns.adobe.com/{TENANT_ID}/schemas/36966a17ce64bcee6544df170f7299759d3dce41c8cbee6"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/b29ba32d98a8b1f00388c6c6eceff4db6917fd174eab4c55"
          - "https://ns.adobe.com/{TENANT_ID}/mixins/5e903c020e4cd4ef65ec4b3ebcc0a1df9ab2c064f303e377"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/456bdc7d1216fb96fa42495a449f39c2"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/579a2817c2342751afb9241015da9741"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/be9f753fc193a23baa8893bbe7679afe"
          - https://ns.adobe.com/xdm/common/auditable
          - "https://ns.adobe.com/{TENANT_ID}/schemas/f09963a76904b524f6419a50c19dd4318061d82d8b04638"
          - "https://ns.adobe.com/{TENANT_ID}/mixins/e16d03cd4f0f1cd0f837ceada0aa478e"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/b1e6dd903c29dc7aea408ecd1ed040f0c161df7961fc50b2"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/d29a200b5deb6cfb55d3b865ef627f33"
          - https://ns.adobe.com/xdm/context/profile-person-details
          - https://ns.adobe.com/xdm/context/profile-privacy
          - "https://ns.adobe.com/{TENANT_ID}/mixins/44850059caa530684c4507d0e01647e9"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/e348088f36cb2dc90d14737de6832aa35c7a7f1a116e1dbe"
          - https://ns.adobe.com/xdm/mixins/profile/profile-loyalty-details
          - https://ns.adobe.com/xdm/context/profile-personal-details
          - https://ns.adobe.com/xdm/data/record
          - https://ns.adobe.com/experience/profile-edgeregion
          - https://ns.adobe.com/xdm/context/identitymap
          - "https://ns.adobe.com/{TENANT_ID}/schemas/ebbbb87cb534798841d760ea2c5d861d"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/3494225dfbfb0d9ac346b00a1142c3a1c0751aff9dbbf5ef"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/6fd18629565e429e5379c77c2755618b"
          - https://ns.adobe.com/xdm/context/profile-test-profile
          - "https://ns.adobe.com/{TENANT_ID}/schemas/4fcf5778706905d53c138b1ed4d94c6c"
          - "https://ns.adobe.com/{TENANT_ID}/mixins/03a07059cad2a4d772385bcf8105750f"
          - "https://ns.adobe.com/{TENANT_ID}/mixins/6287e6dfaf504f1eb47842492431255d"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/ac95d88f11b47688ef2f24f55fe5f3a9a607bb2c4325e68d"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/70e3226d662a19800837b7dd7cfc3ef6"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/5df4f4cc39462136cbbead3481f878a878420025282a53b8"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/3a1859ec31ba93153050f92d981aec5d97b350d22cf960d5"
          - "https://ns.adobe.com/{TENANT_ID}/mixins/1e9576c98a5d2a67ac90da1a271f5eb2"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/3d569c62921ac9371ad148afbaec3891547aca2a49575cef"
          meta:xdmType: object
          meta:registryMetadata:
            eTag: e4655a460374dec4dd7c32d3075a4ffc8249146b4d9c6ae09682da51266a78da
            meta:globalLibVersion: 1.28.1
          meta:class: https://ns.adobe.com/xdm/context/profile
          meta:containerId: tenant
        - $id: https://ns.adobe.com/xdm/context/experienceevent__union
          meta:altId: _xdm.context.experienceevent__union
          meta:resourceType: unions
          version: "1.0"
          title: XDM ExperienceEvent
          type: object
          description: "An ExperienceEvent is a fact record of what occurred, including\
            \ the point in time and identity of the individual involved. ExperienceEvents\
            \ can be either explicit (directly observable human actions) or implicit\
            \ (raised without a direct human action) and are recorded without aggregation\
            \ or interpretation. They are critical for time-domain analytics as they\
            \ allow for observation and analysis of changes that occur in a given\
            \ window of time and the comparison between multiple windows of time to\
            \ track trends."
          allOf:
          - $ref: https://ns.adobe.com/experience/journeyOrchestration/stepEvents/journeyStepEventDataFetchFields
          - $ref: https://ns.adobe.com/experience/journeyOrchestration/stepEvents/journeyStepEventCommonFields
          - $ref: https://ns.adobe.com/xdm/context/experienceevent-commerce
          - $ref: https://ns.adobe.com/xdm/context/experienceevent-web
          - $ref: https://ns.adobe.com/xdm/context/experienceevent-marketing
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/ae0c9aadd004dbd2c438077f500df26781c414e60bbf4a54"
          - $ref: https://ns.adobe.com/xdm/context/experienceevent-environment-details
          - $ref: https://ns.adobe.com/xdm/context/experienceevent
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/1a7a5de2a84c6aacbf86c8d282a891a0"
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/7b5217dec3313f1a2a067ff5a29066c0"
          - $ref: https://ns.adobe.com/xdm/context/identitymap
          - $ref: https://ns.adobe.com/experience/journeyOrchestration/stepEvents/journeyStepEventActionExecutionFields
          - $ref: "https://ns.adobe.com/{TENANT_ID}/mixins/90e1950ab23ab1e71273c2aab0bbf5e978d5d9a6a1cc5bab"
          - $ref: https://ns.adobe.com/experience/campaign/orchestration/eventid
          imsOrg: "{IMS_ORG}"
          meta:extends:
          - https://ns.adobe.com/xdm/data/time-series
          - "https://ns.adobe.com/{TENANT_ID}/schemas/cece2f127694fc27e9233480018790b3ceb4f3e50a55cf80"
          - https://ns.adobe.com/experience/journeyOrchestration/stepEvents/journeyStepEventDataFetchFields
          - https://ns.adobe.com/experience/journeyOrchestration/stepEvents/journeyStepEventCommonFields
          - "https://ns.adobe.com/{TENANT_ID}/schemas/3423b2c60609e0418ded3962fcc47ed8"
          - https://ns.adobe.com/xdm/context/experienceevent-commerce
          - https://ns.adobe.com/xdm/common/extensible
          - "https://ns.adobe.com/{TENANT_ID}/schemas/f8fe82b4e8bd1ee85db5ad0172664957ef8c9931245cb7e6"
          - https://ns.adobe.com/xdm/context/experienceevent-web
          - https://ns.adobe.com/xdm/context/experienceevent-marketing
          - "https://ns.adobe.com/{TENANT_ID}/mixins/ae0c9aadd004dbd2c438077f500df26781c414e60bbf4a54"
          - https://ns.adobe.com/xdm/context/experienceevent-environment-details
          - https://ns.adobe.com/xdm/context/experienceevent
          - "https://ns.adobe.com/{TENANT_ID}/mixins/1a7a5de2a84c6aacbf86c8d282a891a0"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/4425853159dc7e494b8971a4de80daf97571bd5c30d743cf"
          - "https://ns.adobe.com/{TENANT_ID}/mixins/7b5217dec3313f1a2a067ff5a29066c0"
          - https://ns.adobe.com/xdm/context/identitymap
          - https://ns.adobe.com/experience/journeyOrchestration/stepEvents/journeyStepEventActionExecutionFields
          - "https://ns.adobe.com/{TENANT_ID}/mixins/90e1950ab23ab1e71273c2aab0bbf5e978d5d9a6a1cc5bab"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/5d4a826626bbff36134b24b92dd61f83"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/bacec2361d131bf03211cf3c2372673f"
          - "https://ns.adobe.com/{TENANT_ID}/schemas/43f12f6de7d667db7f11f35e6af43802"
          - https://ns.adobe.com/experience/campaign/orchestration/eventid
          meta:xdmType: object
          meta:registryMetadata:
            eTag: e4655a460374dec4dd7c32d3075a4ffc8249146b4d9c6ae09682da51266a78da
            meta:globalLibVersion: 1.28.1
          meta:class: https://ns.adobe.com/xdm/context/experienceevent
          meta:containerId: tenant
        - $id: https://ns.adobe.com/xdm/context/segmentdefinition__union
          meta:altId: _xdm.context.segmentdefinition__union
          meta:resourceType: unions
          version: "1.0"
          title: Segment definition
          type: object
          description: This is the base class for a segment definition which includes
            required fields like identity of a segment and name of segment. Segment
            definitions coming from various system can use this class to build Segment
            Definition XDM schema.
          allOf:
          - $ref: https://ns.adobe.com/xdm/context/identitymap
          - $ref: https://ns.adobe.com/xdm/context/segmentdefinition
          imsOrg: "{IMS_ORG}"
          meta:extends:
          - "https://ns.adobe.com/{TENANT_ID}/schemas/23255099a00826c31bbad8fa9519d3d513d5171bf2b787a2"
          - https://ns.adobe.com/xdm/common/auditable
          - https://ns.adobe.com/xdm/data/record
          - https://ns.adobe.com/xdm/context/identitymap
          - https://ns.adobe.com/xdm/context/segmentdefinition
          meta:xdmType: object
          meta:registryMetadata:
            eTag: e4655a460374dec4dd7c32d3075a4ffc8249146b4d9c6ae09682da51266a78da
            meta:globalLibVersion: 1.28.1
          meta:class: https://ns.adobe.com/xdm/context/segmentdefinition
          meta:containerId: tenant
    createSchema:
      required:
      - allOf
      - description
      - title
      - type
      type: object
      properties:
        type:
          type: string
          description: The JSON Schema data type for the resource. Must be set to
            `object`.
          example: object
        title:
          type: string
          description: A title for the schema.
          example: New Schema
        description:
          type: string
          description: A description for the schema.
          example: Description of the new schema.
        allOf:
          type: array
          description: "Lists the class and/or field groups whose fields the schema\
            \ implements. Each object contains a single property (`$ref`) whose value\
            \ represents the `$id` of the class or field group the new schema will\
            \ implement. One class must be provided, with zero or more additional\
            \ field groups."
          items:
            type: object
            properties:
              $ref:
                type: string
                description: The `$id` of the class or field group whose fields will
                  be utilized by the schema.
                example: https://ns.adobe.com/xdm/context/profile
    updateSchemaResponse:
      allOf:
      - $ref: '#/components/schemas/singleSchemaResponse'
      - type: object
        properties:
          version:
            type: object
            example: "1.1"
    createSchemaResponse:
      allOf:
      - $ref: '#/components/schemas/singleSchemaResponse'
    lookupResourceCore:
      type: object
      properties:
        $id:
          type: string
          description: The URI ID of the XDM resource.
          example: "https://ns.adobe.com/{TENANT_ID}/schemas/d4ad4b8463a67f6755f2aabbeb9e02c7"
        meta:altId:
          type: string
          description: An alternate dot-notation ID for the XDM resource.
          example: "_{TENANT_ID}.schemas.d4ad4b8463a67f6755f2aabbeb9e02c7"
        meta:resourceType:
          type: string
          description: The type of XDM resource.
          example: schemas
        version:
          type: string
          description: The current version of the resource.
          example: "1.4"
        title:
          type: string
          description: The title of the resource.
          example: Hotels
        type:
          type: string
          description: The JSON Schema element type that represents the XDM resource
            (typically `object`).
          example: object
        description:
          type: string
          description: A description for the resource.
    lookupResourceWithDefinitions:
      allOf:
      - $ref: '#/components/schemas/lookupResourceCore'
      - type: object
        properties:
          definitions:
            type: object
            properties: {}
            description: Contains definitions for the unique attributes provided by
              the resource.
          allOf:
            type: array
            description: A list of objects that refer to the common definitions and
              fields that the resource inherits.
            items:
              $ref: '#/components/schemas/allOfRef'
          meta:extensible:
            type: boolean
            description: Indicates whether this resource is extensible or not.
          meta:abstract:
            type: boolean
            description: Indicates whether this resource is abstract or not.
    singleDataTypeResponse:
      allOf:
      - $ref: '#/components/schemas/lookupResourceWithDefinitions'
      - type: object
        properties:
          meta:extends:
            type: array
            description: An array that contains the `$id` values of the XDM resources
              this data type extends.
            items:
              type: string
              description: The `$id` of the resource this data type extends.
      - $ref: '#/components/schemas/xdmTypeToSchema'
      - $ref: '#/components/schemas/metaRegistryMetadata'
    singleFieldGroupResponse:
      allOf:
      - $ref: '#/components/schemas/lookupResourceWithDefinitions'
      - type: object
        properties:
          meta:intendedToExtend:
            type: array
            description: An array that contains the `$id` of the class this field
              group is compatible with.
            items:
              type: string
              description: The `$id` of the class this field group is compatible with.
      - $ref: '#/components/schemas/xdmTypeToSchema'
      - $ref: '#/components/schemas/metaRegistryMetadata'
      - type: object
        properties:
          meta:tags:
            type: object
            properties: {}
            description: (For `global` field groups only) Describes various Adobe-managed
              categorization tags for the field group.
          meta:createdDate:
            type: object
            properties: {}
            description: (For `global` field groups only) A timestamp of when the
              global field group was released.
    singleBehaviorResponse:
      allOf:
      - $ref: '#/components/schemas/lookupResourceWithDefinitions'
      - $ref: '#/components/schemas/xdmTypeToSchema'
      - $ref: '#/components/schemas/metaRegistryMetadata'
    metaRegistryMetadata:
      type: object
      properties:
        meta:registryMetadata:
          $ref: '#/components/schemas/registryMetadata'
    xdmTypeToSchema:
      type: object
      properties:
        meta:xdmType:
          type: string
          description: The XDM resource type (typically `object`).
        meta:status:
          type: string
          description: (For `global` resources only) The status of the resource.
        $schema:
          type: string
          description: The JSON schema definition that this resource is based on.
    singleClassResponse:
      allOf:
      - $ref: '#/components/schemas/singleBehaviorResponse'
    allOfRef:
      type: object
      properties:
        $ref:
          type: string
          description: The `$id` of the XDM resource.
        type:
          type: string
          description: The resource type (typically `object`).
        meta:xdmType:
          type: string
          description: The XDM resource type (typically `object`).
    singleSchemaResponse:
      allOf:
      - $ref: '#/components/schemas/lookupResourceCore'
      - type: object
        properties:
          allOf:
            type: array
            description: "A list of objects that refer to other classes, field groups,\
              \ or data types whose properties are inherited by this XDM resource."
            items:
              type: object
              properties:
                $ref:
                  type: string
                  description: The URI `$id` of the referenced XDM resource.
          imsOrg:
            type: string
            description: The ID of the IMS Org that owns this resource.
          meta:extensible:
            type: boolean
            description: Indicates whether this resource is extensible or not.
          meta:abstract:
            type: boolean
            description: Indicates whether this is an abstract resource.
          meta:extends:
            type: array
            description: A list of URI `$id`s for the XDM objects that this resource
              extends.
            items:
              type: string
          meta:xdmType:
            type: string
            description: The type of JSON Schema element that the XDM resource represents
              (typically `object`).
          meta:registryMetadata:
            $ref: '#/components/schemas/registryMetadata'
    metaClass:
      type: object
      properties:
        meta:class:
          type: string
          description: The URI `$id` of the class that the schema is based on.
    resourceContainers:
      type: object
      properties:
        meta:containerId:
          type: string
          description: "The container for the schema, either `global` or `tenant`."
        meta:sandboxId:
          type: string
          description: The ID of the Platform sandbox that contains the schema.
        meta:sandboxType:
          type: string
          description: "The type of Platform sandbox that contains the schema, either\
            \ `production` or `development`."
    metaTenantNamespace:
      type: object
      properties:
        meta:tenantNamespace:
          type: string
          description: "The namespace that all custom fields that the schema employs\
            \ can be found under. Takes the form of your organization's tenant ID\
            \ prepended with an underscore: `_{TENANT_ID}`."
    lookupSchemaResponse:
      allOf:
      - $ref: '#/components/schemas/singleSchemaResponse'
      - $ref: '#/components/schemas/metaClass'
      - $ref: '#/components/schemas/resourceContainers'
      - $ref: '#/components/schemas/metaTenantNamespace'
    registryMetadata:
      type: object
      properties:
        repo:createdDate:
          type: integer
          description: A Unix timestamp of when the resource was created.
        repo:lastModifiedDate:
          type: integer
          description: A Unix timestamp of when the resource was last modified.
        xdm:createdClientId:
          type: string
          description: The ID of the client that created the resource.
        xdm:lastModifiedClientId:
          type: string
          description: The ID of the client that last modified the resource.
        xdm:createdUserId:
          type: string
          description: The ID of the user that created the resource.
        xdm:lastModifiedUserId:
          type: string
          description: The ID of the user that last modified the resource.
        etag:
          type: string
          description: An HTTP entity tag (ETag) for the resource.
        meta:globalLibVersion:
          type: string
          description: The current global library version of the resource.
        meta:usageCount:
          type: integer
          description: The number of instances where this resource is referenced by
            other XDM resources.
      description: Contains registry-specific metadata about the XDM resource.
    lookupUnionResponse:
      allOf:
      - $ref: '#/components/schemas/unionBasic'
      - type: object
        properties:
          meta:sandboxId:
            type: string
            description: The ID of the sandbox this union is contained in.
          meta:sandboxType:
            type: string
            description: "The type of sandbox this union is contained in, either `production`\
              \ or `development`."
    unionBasic:
      allOf:
      - $ref: '#/components/schemas/lookupResourceCore'
      - type: object
        properties:
          allOf:
            type: array
            description: Lists the class and/or field groups that comprise the union
              schema.
            items:
              type: object
              properties:
                $ref:
                  type: string
                  description: The `$id` of the class or field group whose fields
                    are included in the union.
          imsOrg:
            type: string
            description: The ID for the IMS Organization that owns the union schema.
          meta:extends:
            type: array
            description: "A list of `$id` strings for the schemas, field groups, and\
              \ other resources that participate in the union."
            items:
              type: string
          meta:xdmType:
            type: string
            description: "The JSON Schema data type for the resource, typically `object`."
          meta:registryMetadata:
            type: object
            properties:
              etag:
                type: string
                description: An HTTP entity tag (ETag) for the union schema.
              meta:globalLibVersion:
                type: string
                description: The current global library version of the union schema.
            description: Contains various metadata about the union schema.
          meta:class:
            type: string
            description: The `$id` of the class this union schema is based on.
          meta:containerId:
            type: string
            description: The container that the union is located in.
    patchClass:
      allOf:
      - $ref: '#/components/schemas/patchSchema'
    patchSchema:
      type: array
      description: A list of JSON Patch operation objects. Each object contains information
        about the action to be performed and the attribute to perform it on.
      items:
        required:
        - op
        - path
        type: object
        properties:
          op:
            type: string
            description: The JSON Patch operation to be performed.
            example: add
          path:
            type: string
            description: The path to the field that the operation should be performed
              on.
            example: /meta:immutableTags-
          value:
            type: string
            description: "If adding or updating an attribute, this property indicates\
              \ the value that should be set for that property."
            example: union
    patchSchemaResponse:
      allOf:
      - $ref: '#/components/schemas/singleSchemaResponse'
      - type: object
        properties:
          version:
            type: object
            example: "1.1"
          meta:immutableTags:
            type: array
            description: "When present and containing a single string value of `union`,\
              \ indicates that this schema is enabled for use in Real-time Customer\
              \ Profile."
            example:
            - union
            items:
              type: string
    replaceSchema:
      required:
      - allOf
      - description
      - title
      - type
      properties:
        type:
          type: string
          example: object
        title:
          type: string
          example: New Schema
        description:
          type: string
          example: Description of the new schema.
        allOf:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                example: "https://ns.adobe.com/{TENANT_ID}/classes/994062a01edc258a12cc730b71831854"
      allOf:
      - $ref: '#/components/schemas/createSchema'
    listClassesResponse:
      allOf:
      - $ref: '#/components/schemas/listResponse'
      - type: object
        properties:
          results:
            type: object
    createClass:
      required:
      - allOf
      - description
      - title
      - type
      type: object
      properties:
        type:
          type: string
          description: The JSON Schema data type for the payload. Must be set to `object`.
          example: object
        title:
          type: string
          description: A title for the class.
          example: New Class
        description:
          type: string
          description: A description for the class.
          example: Description of the new class.
        allOf:
          type: array
          description: Lists the behavior that the class inherits along with any additional
            class-level fields.
          items:
            type: object
            properties:
              $ref:
                type: string
                description: The `$id` of the referenced XDM resource.
                example: https://ns.adobe.com/xdm/data/record
    updateClassResponse:
      allOf:
      - $ref: '#/components/schemas/lookupClassResponse'
    patchClassResponse:
      allOf:
      - $ref: '#/components/schemas/lookupClassResponse'
    createClassResponse:
      allOf:
      - $ref: '#/components/schemas/lookupClassResponse'
    lookupClassResponse:
      allOf:
      - $ref: '#/components/schemas/singleSchemaResponse'
      - $ref: '#/components/schemas/resourceContainers'
      - $ref: '#/components/schemas/metaTenantNamespace'
    replaceClass:
      allOf:
      - $ref: '#/components/schemas/createClass'
      - type: object
        properties:
          description:
            type: object
            example: Updated description of the new class.
          allOf:
            type: object
    createFieldGroup:
      required:
      - meta:intendedToExtend
      - title
      - type
      type: object
      properties:
        type:
          type: string
          description: The JSON Schema data type for the field group. Must be set
            to `object`.
          example: object
        title:
          type: string
          description: A title for the field group.
          example: Property Details
        description:
          type: string
          description: A description for the field group.
          example: Detailed information related to the properties owned and operated
            by the company.
        meta:intendedToExtend:
          type: array
          description: Contains the `$id` value(s) of the class(es) that this field
            group is compatible with.
          items:
            type: string
            description: The `$id` value of the class that this field group is compatible
              with.
            example: "https://ns.adobe.com/{TENANT_ID}/classes/19e1d8b5098a7a76e2c10a81cbc99590"
        definitions:
          type: object
          properties: {}
          description: "Describes the unique attributes provided by the field group\
            \ that are not inherited from other XDM resources. Custom attributes must\
            \ be nested under `properties._{TENANT_ID}` to avoid collisions with similar\
            \ fields provided by classes and other field groups. For details on how\
            \ to define different field types to include in your field group, see\
            \ the [field constraints guide](https://experienceleague.adobe.com/docs/experience-platform/xdm/schema/field-constraints.html?lang=en#define-fields)."
          example:
            property:
              properties:
                _{TENANT_ID}:
                  type: object
                  properties:
                    propertyName:
                      type: string
                      title: Property Name
                      description: Name of the property
                    propertyCity:
                      title: Property City
                      description: City where the property is located.
                      type: string
                    phoneNumber:
                      title: Phone Number
                      description: Primary phone number for the property.
                      type: string
                    propertyType:
                      type: string
                      title: Property Type
                      description: Type and primary use of property.
                      enum:
                      - retail
                      - yoga
                      - fitness
                      meta:enum:
                        retail: Retail Store
                        yoga: Yoga Studio
                        fitness: Fitness Center
                    propertyConstruction:
                      "$ref ": "https://ns.adobe.com/{TENANT_ID}/datatypes/24c643f618647344606222c494bd0102"
        allOf:
          type: array
          description: A list of reference strings that determine the attributes that
            the field group provides. A string can refer to a custom field definition
            provided under the `definitions` object (e.g. `#/definitions/property`)
            or the `$id` of another field group or data type that this field group
            extends or employs.
          items:
            type: object
            properties:
              $ref:
                type: string
                description: A string reference to a custom field definition provided
                  under the `definitions` object (e.g. `#/definitions/property`) or
                  the `$id` of another field group or data type that this field group
                  extends or employs.
                example: '#/definitions/property'
    patchFieldGroupResponse:
      allOf:
      - $ref: '#/components/schemas/updateFieldGroupResponse'
      - type: object
        properties:
          definitions:
            type: object
            example: ""
    updateFieldGroupResponse:
      allOf:
      - $ref: '#/components/schemas/createFieldGroupResponse'
      - type: object
        properties:
          version:
            type: object
            example: "1.3"
    createFieldGroupResponse:
      allOf:
      - $ref: '#/components/schemas/singleFieldGroupResponse'
    lookupFieldGroupResponse:
      allOf:
      - $ref: '#/components/schemas/singleFieldGroupResponse'
    patchFieldGroup:
      allOf:
      - $ref: '#/components/schemas/patchSchema'
    replaceFieldGroup:
      allOf:
      - $ref: '#/components/schemas/createFieldGroup'
    listDataTypesResponse:
      allOf:
      - $ref: '#/components/schemas/listResponse'
      - type: object
        properties:
          results:
            type: object
    createDataType:
      required:
      - title
      - type
      type: object
      properties:
        type:
          type: string
          description: The JSON Schema data type for the resource. Must be set to
            `object` or `array`.
          example: object
        title:
          type: string
          description: A title for the data type.
          example: Property Construction
        description:
          type: string
          description: A description for the data type.
          example: Information related to the property construction
        properties:
          type: object
          properties: {}
          description: "If `type` is set to `object`, this field describes the attributes\
            \ that the object will provide. Not supported for `array` data types.\
            \ See the guide on [defining XDM field types in the API](https://experienceleague.adobe.com/docs/experience-platform/xdm/tutorials/custom-fields-api.html)\
            \ for more information on how to format XDM fields."
        items:
          type: object
          properties: {}
          description: "If `type` is set to `array`, this field describes the type\
            \ and structure of each array list item. Not supported for `object` data\
            \ types. See the guide on [defining XDM field types in the API](https://experienceleague.adobe.com/docs/experience-platform/xdm/tutorials/custom-fields-api.html)\
            \ for more information on how to format XDM fields."
      example:
        title: Property Construction
        description: Information related to the property construction
        type: object
        properties:
          yearBuilt:
            type: integer
            title: Year Built
            description: The year the property was constructed.
          propertyType:
            type: string
            title: Property Type
            description: Type of building or structure in which the property exists.
            enum:
            - freeStanding
            - mall
            - shoppingCenter
            meta:enum:
              freeStanding: Free Standing Building
              mall: Mall Space
              shoppingCenter: Shopping Center
    patchDataTypeResponse:
      allOf:
      - $ref: '#/components/schemas/createDataTypeResponse'
      - type: object
        properties:
          version:
            type: object
            example: "1.1"
          properties:
            type: object
            example: ""
    putDataTypeResponse:
      allOf:
      - $ref: '#/components/schemas/createDataTypeResponse'
      - type: object
        properties:
          description:
            type: object
            example: Updated description of the data type.
          version:
            type: object
            example: "1.1"
    createDataTypeResponse:
      allOf:
      - $ref: '#/components/schemas/singleDataTypeResponse'
      - $ref: '#/components/schemas/resourceContainers'
      - $ref: '#/components/schemas/metaTenantNamespace'
    lookupDataTypeResponse:
      allOf:
      - $ref: '#/components/schemas/singleDataTypeResponse'
      - type: object
        properties:
          meta:createdDate:
            type: object
            properties: {}
            description: (For `global` data types only) A timestamp of when the global
              data type was released.
    patchDataType:
      type: array
      items:
        type: object
        properties:
          op:
            type: string
            description: Type of JSON Patch operation being performed.
            example: add
          path:
            type: string
            description: Location where the operation is being performed.
            example: /properties/field3
          value:
            type: object
            properties: {}
            description: "Required elements vary depending on type of 'value' (e.g.\
              \ string, integer, object, etc.)"
            example:
              title: Field 3
              type: string
              format: date
              description: Description of Field 3.
    replaceDataType:
      allOf:
      - $ref: '#/components/schemas/createDataType'
      - type: object
        properties:
          description:
            type: object
            example: Updated description for the data type.
    listDescriptorsResponse:
      type: object
      properties:
        xdm:alternateDisplayInfo:
          type: array
          description: Lists the friendly name descriptors owned by your organization.
          items:
            $ref: '#/components/schemas/friendlyNameDescriptorResponse'
        xdm:descriptorIdentity:
          type: array
          description: Lists the identity descriptors owned by your organization.
          items:
            $ref: '#/components/schemas/identityDescriptorResponse'
        xdm:descriptorReferenceIdentity:
          type: array
          description: Lists the reference identity descriptors owned by your organization.
          items:
            $ref: '#/components/schemas/referenceDescriptorResponse'
        xdm:descriptorOneToOne:
          type: array
          description: Lists the relationship descriptors owned by your organization.
          items:
            $ref: '#/components/schemas/relationshipDescriptorResponse'
    lookupDescriptorResponse:
      required:
      - '@type'
      - xdm:sourceSchema
      - xdm:sourceVersion
      type: object
      properties:
        '@type':
          type: string
          example: xdm:descriptorIdentity
          enum:
          - xdm:descriptorOneToOne
          - xdm:descriptorOneToMany
          - xdm:descriptorManyToMany
          - xdm:descriptorIdentity
          - xdm:descriptorPrimaryKey
          - xdm:alternateDisplayInfo
        xdm:sourceSchema:
          type: string
          example: "https://ns.adobe.com/{TENANT_ID}/schemas/fbc52b243d04b5d4f41eaa72a8ba58be"
        xdm:sourceVersion:
          type: integer
          example: 1
        xdm:sourceProperty:
          type: string
          example: /mobilePhone/number
        xdm:namespace:
          type: string
          example: Phone
        xdm:property:
          type: string
          example: xdm:code
          enum:
          - xdm:id
          - xdm:code
        xdm:isPrimary:
          type: boolean
          example: false
        createdUser:
          type: string
        imsOrg:
          type: string
        createClient:
          type: string
        updatedUser:
          type: string
        created:
          type: integer
          example: 1548900090542
        update:
          type: integer
          example: 1548900090542
        meta:containerId:
          type: string
          example: tenant
        '@id':
          type: string
          example: 3c53ee74276b8342af3cc94129b5226272fd419c
    createDescriptor:
      type: object
      properties:
        '@type':
          type: string
          description: The descriptor type.
          enum:
          - xdm:alternateDisplayInfo
          - xdm:descriptorIdentity
          - xdm:descriptorReferenceIdentity
          - xdm:descriptorOneToOne
        xdm:sourceSchema:
          type: string
          description: The URI `$id` of the schema that this descriptor applies to.
        xdm:sourceVersion:
          type: string
          description: The latest major version of the `sourceSchema`.
        xdm:sourceProperty:
          type: string
          description: The path to the field within the `sourceSchema` that this descriptor
            applies to.
      example:
        '@type': xdm:descriptorIdentity
        xdm:sourceSchema: "https://ns.adobe.com/{TENANT_ID}/schemas/5b8d40b434bec502955d3e0144c4ce14d096897c6b0ca11f"
        xdm:sourceVersion: 1
        xdm:sourceProperty: /homeAddress
        xdm:description:
          en_us: The home address for the customer.
    createDescriptorResponse:
      allOf:
      - $ref: '#/components/schemas/basicDescriptorDetails'
      - $ref: '#/components/schemas/descriptorOrgAndVersion'
      - $ref: '#/components/schemas/resourceContainers'
    importExportPayload:
      type: array
      example:
      - $id: https://ns.adobe.com/<XDM_TENANTID_PLACEHOLDER>/mixins/443fe51457047d958f4a97853e64e0eca93ef34d7990583b
        meta:altId: _<XDM_TENANTID_PLACEHOLDER>.mixins.443fe51457047d958f4a97853e64e0eca93ef34d7990583b
        meta:resourceType: mixins
        version: "1.0"
        title: Example field group
        type: object
        description: ""
        definitions:
          customFields:
            type: object
            properties:
              _<XDM_TENANTID_PLACEHOLDER>:
                type: object
                properties:
                  customerId:
                    title: Customer ID
                    description: ""
                    type: string
                    isRequired: false
                    meta:xdmType: string
                meta:xdmType: object
          meta:xdmType: object
        allOf:
        - "$ref ": '#/definitions/customFields'
          type: object
          meta:xdmType: object
        meta:extensible: true
        meta:abstract: true
        meta:intendedToExtend: []
        meta:xdmType: object
        meta:sandboxId: ff0f6870-c46d-11e9-8ca3-036939a64204
        meta:sandboxType: production
      - $id: https://ns.adobe.com/<XDM_TENANTID_PLACEHOLDER>/schemas/20af3f1d4b175f27ba59529d1b51a0c79fc25df454117c80
        meta:altId: _<XDM_TENANTID_PLACEHOLDER>.schemas.20af3f1d4b175f27ba59529d1b51a0c79fc25df454117c80
        meta:resourceType: schemas
        version: "1.1"
        title: Example schema
        type: object
        description: ""
        allOf:
        - $ref: https://ns.adobe.com/xdm/context/profile
          type: object
          meta:xdmType: object
        - $ref: https://ns.adobe.com/<XDM_TENANTID_PLACEHOLDER>/mixins/443fe51457047d958f4a97853e64e0eca93ef34d7990583b
          type: object
          meta:xdmType: object
        meta:extensible: false
        meta:abstract: false
        meta:extends:
        - https://ns.adobe.com/<XDM_TENANTID_PLACEHOLDER>/mixins/443fe51457047d958f4a97853e64e0eca93ef34d7990583b
        - https://ns.adobe.com/xdm/common/auditable
        - https://ns.adobe.com/xdm/data/record
        - https://ns.adobe.com/xdm/context/profile
        meta:xdmType: object
        meta:class: https://ns.adobe.com/xdm/context/profile
        meta:sandboxId: ff0f6870-c46d-11e9-8ca3-036939a64204
        meta:sandboxType: production
      items:
        type: object
        properties: {}
    importResponse:
      type: array
      example:
      - $id: "https://ns.adobe.com/{TENANT_ID}/mixins/443fe51457047d958f4a97853e64e0eca93ef34d7990583b"
        meta:altId: "_{TENANT_ID}.mixins.443fe51457047d958f4a97853e64e0eca93ef34d7990583b"
        meta:resourceType: mixins
        version: "1.0"
        title: Example field group
        type: object
        description: ""
        definitions:
          customFields:
            type: object
            properties:
              _{TENANT_ID}:
                type: object
                properties:
                  customerId:
                    title: Customer ID
                    description: ""
                    type: string
                    isRequired: false
                    meta:xdmType: string
                meta:xdmType: object
          meta:xdmType: object
        allOf:
        - "$ref ": '#/definitions/customFields'
          type: object
          meta:xdmType: object
        meta:extensible: true
        meta:abstract: true
        meta:intendedToExtend: []
        meta:xdmType: object
        meta:sandboxId: ff0f6870-c46d-11e9-8ca3-036939a64204
        meta:sandboxType: production
      - $id: "https://ns.adobe.com/{TENANT_ID}/schemas/20af3f1d4b175f27ba59529d1b51a0c79fc25df454117c80"
        meta:altId: "_{TENANT_ID}.schemas.20af3f1d4b175f27ba59529d1b51a0c79fc25df454117c80"
        meta:resourceType: schemas
        version: "1.1"
        title: Example schema
        type: object
        description: ""
        allOf:
        - "$ref ": https://ns.adobe.com/xdm/context/profile
          type: object
          meta:xdmType: object
        - "$ref ": "https://ns.adobe.com/{TENANT_ID}/mixins/443fe51457047d958f4a97853e64e0eca93ef34d7990583b"
          type: object
          meta:xdmType: object
        meta:extensible: false
        meta:abstract: false
        meta:extends:
        - "https://ns.adobe.com/{TENANT_ID}/mixins/443fe51457047d958f4a97853e64e0eca93ef34d7990583b"
        - https://ns.adobe.com/xdm/common/auditable
        - https://ns.adobe.com/xdm/data/record
        - https://ns.adobe.com/xdm/context/profile
        meta:xdmType: object
        meta:class: https://ns.adobe.com/xdm/context/profile
        meta:sandboxId: ff0f6870-c46d-11e9-8ca3-036939a64204
        meta:sandboxType: production
      items:
        type: object
        properties: {}
    customFields:
      type: object
      properties:
        $ref:
          type: string
          example: '#/definitions/customFields'
        type:
          type: string
          example: object
        meta:xdmType:
          type: string
          example: object
    importError:
      type: object
      example:
        type: http://ns.adobe.com/aep/errors/XDM-3005-400
        title: Import Resource Failed
        status: 400
        report:
          registryRequestId: 1c282c30-d6ca-40a3-a694-e914a12f249d
          timestamp: 10-22-2020 06:33:12
          detailed-message: "Failed to import resources. Error: Title must be unique.\
            \ An object https://ns.adobe.com/{TENANT_ID}/mixins/443fe51457047d958f4a97853e64e0eca93ef34d7990583b\
            \ already exists with the same title"
          sub-errors: []
        detail: "Failed to import resources. Error: Title must be unique. An object\
          \ https://ns.adobe.com/{TENANT_ID}/mixins/443fe51457047d958f4a97853e64e0eca93ef34d7990583b\
          \ already exists with the same title"
    notFoundError:
      type: object
      example:
        type: http://ns.adobe.com/aep/errors/XDM-1012-404
        title: Resource Not Found
        status: 404
        report:
          registryRequestId: a6773f98-f5ba-4e3e-8ff8-320136cc6c48
          timestamp: 10-22-2020 06:42:13
          detailed-message: "Requested resource https://ns.adobe.com/{TENANT_ID}/schemas/20af3f1d4b175f27ba59529d1b51a0c79fc25df454117\
            \ with version 1 is not found"
        detail: "Requested resource https://ns.adobe.com/{TENANT_ID}/schemas/20af3f1d4b175f27ba59529d1b51a0c79fc25df454117\
          \ with version 1 is not found"
    record:
      type: string
      example: '#/definitions/record'
    loyalty:
      type: string
      example: '#/definitions/loyalty'
    profile-person-details:
      type: string
      example: '#/definitions/profile-person-details'
    acceptErrorList:
      allOf:
      - $ref: '#/components/schemas/errorBasic'
    acceptErrorLookup:
      allOf:
      - $ref: '#/components/schemas/errorBasic'
    acceptErrorDescriptorList:
      allOf:
      - $ref: '#/components/schemas/errorBasic'
    acceptErrorDescriptorLookup:
      allOf:
      - $ref: '#/components/schemas/errorBasic'
    errorBasic:
      type: object
      properties:
        type:
          type: string
          description: The XDM error code.
        title:
          type: string
          description: The error code title.
        status:
          type: integer
          description: The HTTP status code for the error.
        report:
          type: object
          properties:
            registryRequestId:
              type: string
              description: A unique ID for the report.
            timestamp:
              type: string
              description: A timestamp of when the error occurred.
            detailed-message:
              type: string
              description: A detailed message about what caused the error.
            sub-errors:
              type: array
              description: Contains details about other errors that this error is
                a parent of.
              items:
                $ref: '#/components/schemas/errorBasic'
          description: Contains registry information about the error.
        detail:
          type: string
          description: A detailed message about what caused the error.
    friendlyNameDescriptorResponse:
      allOf:
      - $ref: '#/components/schemas/basicDescriptorDetails'
      - $ref: '#/components/schemas/descriptorOrgAndVersion'
      - type: object
        properties:
          xdm:title:
            type: string
            description: The alternate display title that the descriptor applies to
              the target field (`sourceProperty`).
          xdm:description:
            type: string
            description: The alternate description that the descriptor applies to
              the target field (`sourceProperty`).
      - $ref: '#/components/schemas/resourceContainers'
      - $ref: '#/components/schemas/metaRegistryMetadata'
    identityDescriptorResponse:
      allOf:
      - $ref: '#/components/schemas/basicDescriptorDetails'
      - $ref: '#/components/schemas/descriptorOrgAndVersion'
      - type: object
        properties:
          xdm:namespace:
            type: string
            description: "The [identity namespace](https://experienceleague.adobe.com/docs/experience-platform/identity/namespaces.html)\
              \ that this descriptor applies to the target field (`sourceProperty`).\
              \ An identity namespace can be referenced using its string-based `code`\
              \ value (e.g. `Email`) or its corresponding integer `id` (e.g. `6`)."
          xdm:property:
            type: string
            description: "If `xdm:namespace` uses the namespace's string-based identifier,\
              \ this value should be set to `xdm:code`. If `xdm:namespace` uses the\
              \ namespace's integer ID, this value should be set to `xdm:id`."
          xdm:isPrimary:
            type: boolean
            description: Indicates whether this target field (`sourceProperty`) represents
              the primary identity for the target schema (`sourceSchema`).
      - $ref: '#/components/schemas/resourceContainers'
      - $ref: '#/components/schemas/metaRegistryMetadata'
    referenceDescriptorResponse:
      allOf:
      - $ref: '#/components/schemas/basicDescriptorDetails'
      - $ref: '#/components/schemas/descriptorOrgAndVersion'
      - type: object
        properties:
          xdm:identityNamespace:
            type: string
            description: "The [identity namespace](https://experienceleague.adobe.com/docs/experience-platform/identity/namespaces.html)\
              \ of the destination schema's primary identity field, which the target\
              \ field (`sourceProperty`) in the source schema references."
      - $ref: '#/components/schemas/resourceContainers'
      - $ref: '#/components/schemas/metaRegistryMetadata'
    relationshipDescriptorResponse:
      allOf:
      - $ref: '#/components/schemas/basicDescriptorDetails'
      - type: object
        properties:
          xdm:destinationSchema:
            type: string
            description: The `$id` of the destination schema in the relationship.
          xdm:destinationVersion:
            type: string
            description: The latest major version of the destination schema in the
              relationship.
      - $ref: '#/components/schemas/descriptorOrgAndVersion'
      - $ref: '#/components/schemas/resourceContainers'
      - $ref: '#/components/schemas/metaRegistryMetadata'
    basicDescriptorDetails:
      allOf:
      - type: object
        properties:
          '@id':
            type: string
            description: The unique ID for the descriptor.
      - $ref: '#/components/schemas/createDescriptor'
    descriptorOrgAndVersion:
      type: object
      properties:
        imsOrg:
          type: string
          description: The ID of the IMS Organization that owns this descriptor.
        version:
          type: string
          description: The current major version of the descriptor.
  parameters:
    containerIdList:
      name: CONTAINER_ID
      in: path
      description: "The name of the container that you want to list resources from.\
        \ To list core resources provided by Adobe, use `global`. To list custom resources\
        \ defined by your organization, use `tenant`."
      required: true
      schema:
        type: string
    containerIdLookup:
      name: CONTAINER_ID
      in: path
      description: "The name of the container that you want to retrieve a resource\
        \ from. To retrieve a core resource provided by Adobe, use `global`. To retrieve\
        \ a custom resource defined by your organization, use `tenant`."
      required: true
      schema:
        type: string
    SCHEMA_ID:
      name: SCHEMA_ID
      in: path
      description: The `meta:altId` or URL-encoded `$id` of the schema in question.
      required: true
      schema:
        type: string
    BEHAVIOR_ID:
      name: BEHAVIOR_ID
      in: path
      description: The `meta:altId` or URL-encoded `$id` of the behavior in question.
      required: true
      schema:
        type: string
    CLASS_ID:
      name: CLASS_ID
      in: path
      description: The `meta:altId` or URL-encoded `$id` of the class in question.
      required: true
      schema:
        type: string
    MIXIN_ID:
      name: MIXIN_ID
      in: path
      description: The `meta:altId` or URL-encoded `$id` of the mixin in question.
      required: true
      schema:
        type: string
    DATA_TYPE_ID:
      name: DATA_TYPE_ID
      in: path
      description: The `meta:altId` or URL-encoded `$id` of the data type in question.
      required: true
      schema:
        type: string
    DESCRIPTOR_ID:
      name: DESCRIPTOR_ID
      in: path
      description: The unique ID (`@id`) of the descriptor in question.
      required: true
      schema:
        type: string
    UNION_ID:
      name: UNION_ID
      in: path
      description: The `meta:altId` or URL-encoded `$id` of the union schema in question.
      required: true
      schema:
        type: string
    authorization:
      name: Authorization
      in: header
      description: "The access token which can be copied from your Experience Platform\
        \ integration, prefixed with \"Bearer \". For more information on how to obtain\
        \ this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
      required: true
      schema:
        type: string
    x-gw-ims-org-id:
      name: x-gw-ims-org-id
      in: header
      description: "The IMS Organization ID which can be copied from your Experience\
        \ Platform integration. For more information on how to obtain this value,\
        \ visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
      required: true
      schema:
        type: string
    x-api-key:
      name: x-api-key
      in: header
      description: "The API key which can be copied from your Experience Platform\
        \ integration. For more information on how to obtain this value, visit the\
        \ [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
      required: true
      schema:
        type: string
    x-sandbox-name:
      name: x-sandbox-name
      in: header
      description: "The name of the sandbox in which the operation will take place.\
        \ See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for\
        \ more information."
      required: true
      schema:
        type: string
    content-type:
      name: Content-Type
      in: header
      description: "The type of content being sent in the body of the request. When\
        \ sending requests that include payloads to the Schema Registry API, this\
        \ header must be included with a value of `application/json`."
      required: true
      schema:
        type: string
    accept:
      name: Accept
      in: header
      description: |-
        The desired response format. For lookup requests, a `version` parameter must be included, with the following `Accept` header values being permitted:
        <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed+json; version=1</code></td><td>Returns only the basic details of the resource, with all inherited fields relegated to <code>$ref</code> and <code>allOf</code> properties.</td></tr><tr><td><code>application/vnd.adobe.xed-full+json; version=1</code></td><td>Returns the full details of the resource, including the details all fields inherited from other resources.</td></tr><tr><td><code>application/vnd.adobe.xed-notext+json; version=1</code></td><td>Returns only the basic details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-notext+json; version=1</code></td><td>Returns the full details of the resource, but with no titles or descriptions.</td></tr><tr><td><code>application/vnd.adobe.xed-full-desc+json; version=1</code></td><td>Returns the full details of the resource, including descriptions but with no titles.</td></tr></tbody></table>
      required: true
      schema:
        type: string
    acceptListing:
      name: Accept
      in: header
      description: "The desired response format. For listing calls, the following\
        \ `Accept` header values are permitted: \n<table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xed-id+json</code></td><td>Returns\
        \ a short summary of each resource, generally the preferred header for listing.</td></tr><tr><td><code>application/vnd.adobe.xed+json</code></td><td>Returns\
        \ full JSON for each resource, with the original <code>$ref</code> and <code>allOf</code>\
        \ attributes included.</td></tr></tbody></table>"
      required: true
      schema:
        type: string
    acceptDescriptors:
      name: Accept
      in: header
      description: |-
        The desired response format. Descriptors require unique `Accept` headers using `xdm` instead of `xed`. The following values are permitted:
        <table><thead><tr><th>Accept</th><th>Description</th></tr></thead><tbody><tr><td><code>application/vnd.adobe.xdm-id+json</code></td><td>Returns a list of descriptor IDs, grouped by their <code>@type</code>.</td></tr><tr><td><code>application/vnd.adobe.xdm-link+json</code></td><td>Returns a list of descriptor API paths, grouped by their <code>@type</code>.</td></tr><tr><td><code>application/vnd.adobe.xdm+json</code></td><td>Returns a list of descriptor objects, grouped by their <code>@type</code>.</td></tr><tr><td><code>application/vnd.adobe.xdm-v2{-id/-link}+json</code></td><td>Including the <code>-v2</code> option in any of the above <code>Accept</code> headers permits paging functionality, returning a results array with a <code>_page</code> attribute that can be used to request the next page if needed.</td></tr></tbody></table>
      required: true
      schema:
        type: string
    property:
      name: property
      in: query
      description: "A comma-separated list of top-level object properties to be returned\
        \ in the response. For example, `property=meta:intendedToExtend==https://ns.adobe.com/xdm/context/profile`\
        \ returns only field groups that are compatible with the XDM Individual Profile\
        \ class."
      schema:
        type: string
    orderBy:
      name: orderby
      in: query
      description: "Sort the listed resources by specified fields. For example `orderby=title`\
        \ sorts results by title in ascending order (A-Z). Adding a `-` before the\
        \ field name (`orderby=-title`) sorts items in descending order (Z-A). Multiple\
        \ fields can also be included to denote primary and secondary sort orders\
        \ (for example, `orderby=title,description`)."
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: |-
        When used in conjunction with an `orderby` parameter, `limit` restricts the maximum number of items that should be returned for a given request. This parameter cannot be used without an `orderby` parameter present.

        The `limit` parameter specifies a positive integer (between `0` and `500`) as a *hint* as to the maximum number of items that should be returned. For example, `limit=5` returns only five resources in the list. However, this value is not strictly honored. The actual response size may be smaller or larger as constrained by the need to provide the reliable operation of the `start` parameter, if one is provided.
      schema:
        type: number
    start:
      name: start
      in: query
      description: |-
        When used in conjunction with an `orderby` parameter, `start` specifies where the paginated list of items should begin. This parameter cannot be used without an `orderby` parameter present.

        Typically, this parameter is omitted in order to obtain the first page of results. After that, `start` should be set to the maximum value of the primary sort property of the `orderby` field received in the previous page. The API response then returns entries beginning with those that have a primary sort property from `orderby` strictly greater than (for ascending) or strictly less than (for descending) the specified value.

        For example, if the `orderby` parameter is set to `orderby=name,firstname`, the `start` parameter would contain a value for the `name` property. In this case, if you wanted to show the next 20 entries of a resource immediately following the name "Miller", you would use: `?orderby=name,firstname&start=Miller&limit=20`.
      schema:
        type: string
  requestBodies:
    patchPayload:
      description: The request body accepts a JSON Patch payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patchSchema'
      required: true
    patchClassPayload:
      description: The request body accepts a JSON Patch payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patchClass'
      required: true
    patchFieldGroupPayload:
      description: The request body accepts a JSON Patch payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patchFieldGroup'
      required: true
    createSchemaPayload:
      description: The JSON payload must include an `allOf` attribute referencing
        the `$id` of the base class the that the schema will implement.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSchema'
      required: true
    replaceSchemaPayload:
      description: "The JSON payload must include all of the fields that were originally\
        \ required for creating the schema, but with updated values. This includes\
        \ an `allOf` attribute referencing the `$id` of the class the schema will\
        \ implement."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/replaceSchema'
      required: true
    createClassPayload:
      description: The request payload must include an `allOf` attribute referencing
        either 'https://ns.adobe.com/xdm/data/record' or 'https://ns.adobe.com/xdm/data/time-series'.
        This value represents the data behavior upon which the class is based. `allOf`
        may also optionally include field groups or custom fields that will be included
        each time the class is used.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createClass'
      required: true
    replaceClassPayload:
      description: "The JSON payload must include all of the fields that were originally\
        \ required for creating the class, but with updated values. This includes\
        \ an `allOf` attribute referencing the behavior of the class."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/replaceClass'
      required: true
    fieldGroupPayload:
      description: The JSON payload must include a 'meta:intendedToExtend' field listing
        the '$id' of the class(es) with which the field group is compatible.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createFieldGroup'
      required: true
    replaceFieldGroupPayload:
      description: "The JSON payload must include all of the fields that were originally\
        \ required for creating the field group, but with updated values. This includes\
        \ an `allOf` attribute referencing the `$id` of the class the schema will\
        \ implement."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/replaceFieldGroup'
      required: true
    createDataTypePayload:
      description: |-
        Unlike field groups, defining a data type does not require `meta:extends` or `meta:intendedToExtend` fields, nor do fields need to be nested to avoid collisions.
        When it comes to defining the field structure of data type itself, you can use primitive types (like `string` or `object`) or you can reference other existing data types through `$ref` attributes. See the guide on [defining custom XDM fields in the API](../tutorials/custom-fields-api.md) for detailed guidance on the expected format for different XDM field types.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createDataType'
      required: true
    patchDataTypePayload:
      description: The request body accepts a JSON Patch payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patchDataType'
      required: true
    replaceDataTypePayload:
      description: "The JSON payload must include all of the fields that were originally\
        \ required for creating the data type, but with updated values."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/replaceDataType'
      required: true
    descriptorPayload:
      description: "The required request payload fields vary based on the `@type`\
        \ of descriptor being defined. For details on the requirements for each descriptor\
        \ type, refer to the section on [defining descriptors](https://experienceleague.adobe.com/docs/experience-platform/xdm/api/descriptors.html?lang=en#defining-descriptors)\
        \ in the API guide."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createDescriptor'
      required: true
x-original-swagger-version: "2.0"
