swagger: '2.0'
info:
  version: '1.0'
  title: Dataset Service API
  description: >-
    The Dataset Service API provides several endpoints to help you manage data usage labels for existing datasets within the Data Lake. Data usage labels are part of Adobe Experience Platform Data Governance, which allows you to manage customer data and ensure compliance with regulations, restrictions, and policies applicable to data use. Dataset Service is separate from Catalog Service, which manages other dataset metadata.

    - Related documentation:
        - [Data Governance documentation](http://www.adobe.com/go/data-governance-overview-en)
        - [Catalog Service documentation](http://www.adobe.com/go/data-catalog-service-overview-en)

    - Visualize API calls with Postman (a free, third-party software):
        - [Dataset Service API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Dataset%20Service%20API.postman_collection.json)
        - [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
        - [Steps for importing environments and collections in Postman](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/)

    - API paths:
        - PLATFORM Gateway URL: https://<span>platform.adobe.io/
        - Base path for this API: /data/foundation/dataset
        - Example of a complete path: https://<span>platform.adobe.io/data/foundation/dataset/datasets/5abd49645591445e1ba04f87/labels

    - Required headers:
        - All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        - All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
        - All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

basePath: /data/foundation/dataset
host: platform.adobe.io
tags:
  - name: Datasets
    description: A dataset is a storage and management construct for a collection of data, typically a table, that contains a schema (columns) and fields (rows). Data usage labels can be applied to entire datasets or individual fields within those datasets in order to enforce usage restrictions.
produces:
  - application/json
paths:
  '/datasets/{DATASET_ID}/labels':
    get:
      tags:
        - Datasets
      summary: Retrieve data usage labels for a specific dataset
      description: >-
        You can use this endpoint to retrieve data usage labels for a specified dataset.

        >**NOTE**: See the tutorial on [managing labels for datasets using APIs](https://experienceleague.adobe.com/docs/experience-platform/data-governance/labels/dataset-api.html) for more information on using this endpoint.
      operationId: retrieveDatasetLabels
      parameters:
        - $ref: '#/parameters/DATASET_ID'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      produces:
        - application/json
      responses:
        '200':
          description: The data usage labels for the specified dataset were retrieved.
          schema:
            $ref: '#/definitions/LabelPayload'
        '404':
          description: The labels entity was not found. If the dataset indicated in the request path does not have any existing labels applied, this error will occur.
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags:
        - Datasets
      summary: Add data usage labels to a specific dataset
      description: >-
        You can use this endpoint to add data usage labels to a specified dataset or fields.

        >**NOTE**: See the tutorial on [managing labels for datasets using APIs](https://experienceleague.adobe.com/docs/experience-platform/data-governance/labels/dataset-api.html) for more information on using this endpoint.
      operationId: addDatasetLabels
      produces: 
        - application/json
      parameters:
        - $ref: '#/parameters/DATASET_ID'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/json-header'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LabelPayload'
      responses:
        '201':
          description: The data usage labels were successfully added.
          schema:
            $ref: '#/definitions/LabelPayload'
        '403':
          description: The labels entity already exists. Use a PUT request instead.
          schema:
            $ref: '#/definitions/ForbiddenError'
        '409':
            description: A data usage policy violation has ocurred.
            schema:
              $ref: '#/definitions/ConflictError'
    put:
      tags:
        - Datasets
      summary: Update the data usage labels for a specific dataset
      description: >-
        You can use this endpoint to update the data usage labels for a specified dataset or fields.

         >**NOTE**: See the tutorial on [managing labels for datasets using APIs](https://experienceleague.adobe.com/docs/experience-platform/data-governance/labels/dataset-api.html) for more information on using this endpoint.
      operationId: updateDatasetLabels
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/DATASET_ID'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/json-header'
        - $ref: '#/parameters/If-Match'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LabelPayload'
      responses:
        '200':
            description: "The data usage labels were successfully updated."
            schema:
              $ref: '#/definitions/LabelPayload'
        '404':
            description: "The labels entity was not found."
            schema:
              $ref: '#/definitions/NotFoundError'
        '409':
            description: "A data usage policy violation has ocurred."
            schema:
              $ref: '#/definitions/ConflictError'

parameters:
  x-sandbox-name:
    name: x-sandbox-name
    description: >-
      The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information.
    required: true
    type: string
    in: header
  authorization:
    name: Authorization
    description: >-
      The access token which can be copied from your Experience Platform integration, prefixed with "Bearer". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: >-
      The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: >-
      The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  json-header:
    name: Content-Type
    description: The media type being sent in the request payload. The required value for calls to the Dataset Service API is `application/json`.
    required: true
    type: string
    in: header
  DATASET_ID:
    name: DATASET_ID
    in: path
    type: string
    required: true
    description: >-
      The ID of an existing dataset. Dataset IDs can be retrieved using the [Catalog Service API](https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/catalog.yaml).
  If-Match:
    name: If-Match
    in: header
    required: true
    description: >- 
      The version of the dataset entity to compare against. As a requirement for all PUT and DELETE requests for dataset labels, the call will only update the dataset entity if the "If-Match" string matches that of the "etag" header that is returned in all responses from the Dataset Service API.
    type: string
definitions:
  LabelPayload:
      type: object
      properties:
        labels:
          type: array
          description: A list of data usage labels that have been applied to the dataset as a whole.
          items:
            type: string
            example: ["C1", "C2"]
        optionalLabels:
          type: array
          description: A list of individual fields within the dataset that have data usage labels applied.
          items:
            type: object
            properties:
              option:
                type: object
                description: Describes the field that the labels have been applied to.
                properties:
                  id: 
                    type: string
                    example: "https://ns.adobe.com/{TENANT_ID}/schemas/{SCHEMA_ID}"
                    description: The URL `$id` of the dataset's schema.
                  contentType:
                    type: string
                    example: "application/vnd.adobe.xed-full+json;version=1"
                    description: The content type and version of the schema.
                  schemaPath:
                    type: string
                    example: "/properties/repositoryCreatedBy"
                    description: The path to the specific field in the schema.
              labels:
                type: array
                description: A list of data usage labels that have been applied to the field described in the sibling `option` property.
                items:
                  type: string
                  example: ["S1", "S2"]
  ForbiddenError:
    allOf:
      - $ref: '#/definitions/NotFoundError'
    example:
      timeStamp: "2020-06-26T16:01:09.091Z"
      status: "FORBIDDEN"
      code: "PES-403"
      message: "POST Forbidden. Entity already exists. Use PUT instead."
      path: "/entities"
  NotFoundError:
    type: object
    properties:
      timestamp:
        type: string
        example: "2021-04-21T19:56:46.551Z"
        description: A timestamp of when the error occurred.
      status:
        type: string
        example: "NOT_FOUND"
        description: The error status.
      code:
        type: string
        example: "PES-404"
        description: The Policy Service error code.
      message:
        type: string
        example: "GET Entities Not Found"
        description: The error message.
      path:
        type: string
        example: "/entities/AEP:dataset:60105b5e1af43c18db857d69"
        description: The path used in the lookup attempt, containing the ID of the dataset whose labels were not found.
  ConflictError:
    type: object
    properties:
      code:
        type: string
        example: "PES-409"
        description: The Policy Service error code.
      message:
        type: string
        example: "Policy conflict error"
        description: The error message.
      violations:
        type: array
        description: A list of policy violations that the attempted action triggered.
        items:
          $ref: '#/definitions/policyViolation'
      count:
        type: number
        example: 1
        description: The number of policy violations that were triggered.
  policyViolation:
    type: object
    properties:
      enforcementRef:
        type: string
        example: "/dulepolicy/marketingActions/core/g72cbgy644bsgc3becbba1e197fa25c1e/constraints"
        description: Indicates the marketing action whose policy constraints were violated.
      entities:
        type: array
        description: A list of dataset entities that were involved in the violation, including their associated labels.
        items: 
          $ref: '#/definitions/LabelPayload'
      violatedPolicies:
        type: array
        description: A list of policies that were violated for the datasets and/or fields listed in the `entities` array.
        items:
          $ref: '#/definitions/violatedPolicy'
  violatedPolicy:
    type: object
    properties:
      id:
        type: string
        example: "corepolicy_0001"
        description: The policy ID
      name:
        type: string
        example: "3rd party export restriction"
        description: The name of the policy.
      status:
        type: string
        example: "ENABLED"
        description: The current status of the policy.
      description:
        type: string
        example: "Policy for restricting data export to 3rd parties."
        description: A friendly description for the policy.
      deny:
        $ref: '#/definitions/policyDeny'
  policyDeny:
    type: object
    description: An object that describes the specific labels (or combinations therein) that the policy restricts, as well as other metadata.
    properties:
      label:
        type: string
        example: "C1"
        description: If only checking against a single label, this property should be used to indicate that label. If multiple labels are being used as part of the expression, then `operator` and `operands` must be used instead.
      operator:
        type: string
        example: "AND"
        description: When including multiple labels in the expression, this property indicates the relationship the labels have (`AND` or `OR`).
      operands:
        type: array
        description: A list of labels to check for. If `operator` is set to `AND`, all labels must be present for a violation to occur. If `operator` is set to `OR`, only one of the listed labels needs to be present to trigger a violation.
        items: 
          type: string
          example: [{ "label": "C1" }, { "label": "C2"}]
      imsOrg:
        type: string
        example: "{IMS_ORG}"
        description: The ID of the IMS Org that owns the policy.
      sandboxName:
        type: string
        example: "prod"
        description: The name of the sandbox that contains the policy.
      created:
        type: number
        example: 1529696681413
        description: A unix timestamp of when the policy was created.
      createdClient:
        type: string
        example: "{CLIENT_ID}"
        description: The client that was used to create the policy.
      createdUser:
        type: string
        example: "{USER_ID}"
        description: The user that created the policy.
      updated:
        type: number
        example: 1529696681413
        description: A unix timestamp of when the policy was last updated.
      updatedClient:
        type: string
        example: "{CLIENT_ID}"
        description: The client that was used to last update the policy.
      updatedUser:
        type: string
        example: "{USER_ID}"
        description: The user that last updated the policy.
      marketingActionRefs:
        type: array
        description: A list of marketing actions that the policy applies to.
        items:
          type: string
          example: ["https://platform.adobe.io/data/foundation/dulepolicy/marketingActions/core/exportToThirdParty"]
      _links:
        $ref: '#/definitions/_links'
  _links:
    type: object
    description: Contains pagination URLs to view the rest of the response.
    properties:
      self:
        type: object
        description: Contains the URL for the currently displayed response page.
        properties:
          href:
            type: string
            description: The URL for the currently displayed response page.
            example: https://platform.adobe.io/data/foundation/dulepolicy/policies/custom/5db3393907d49f198b8f0e6a
      next:
        type: object
        description: Contains the URL for the next response page.
        properties:
          href:
            type: string
            description: The URL for the next response page.
      page:
        type: object
        description: Contains a templated URL for viewing other response pages.
        properties:
          href:
            type: string
            description: The templated URL for viewing other response pages.
          templated:
            type: boolean
            description: Indicates that the sibling `href` property is a template.