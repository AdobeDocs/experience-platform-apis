openapi: 3.1.0
info:
  title: Reactor API
  description: |-
    Use the Reactor API to programmatically manage resources and develop tag extensions in Adobe Experience Platform.
    **Related documentation**:
      * [Tags overview and UI documentation](https://adobe.com/go/launch_help_en)
      * [Reactor API guides](https://adobe.com/go/reactor-api-overview)

    **API paths**:
      * Reactor Gateway URL: https://<span>reactor.adobe.io
      * Example of a complete path for making a call to `/properties`: https://<span>reactor.adobe.io/properties

    **Required headers**:
      * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en).
      * All GET requests to the Reactor API require an `Accept` header to determine what data is returned by the system. In most cases, this value will be `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`).
      * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type`. The specific `Content-Type` value for each call is provided in the parameters sections in the endpoints listed below.

    - **API error handling**:
        - Refer to the Experience Platform API troubleshooting guide for [FAQs](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#faq), [API status codes](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#api-status-codes), and [request header errors](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#request-header-errors).
  version: "1.0"
servers:
- url: //reactor.adobe.io
tags:
- name: (NEW) Interactive API documentation
  description: You can now interact with the Experience Platform API endpoints directly from this API reference page. Get your [authentication credentials](https://www.adobe.com/go/platform-api-get-credentials-en) and use the **Try it** functionality in the right rail. Note that by using this functionality, you are making real API calls. Keep this in mind when you interact with production sandboxes.
- name: Companies
  description: "A company represents the organization of a tags user, typically a business. These companies match 1:1 with IMS Organization IDs. API users will only have visibility into the companies to which they have access. Nearly all API usage is performed using an Adobe I/O integration which is scoped to a single IMS Org, and therefore the /companies endpoint is not a major part of most workflows. Most use cases start with a property instead."
- name: Properties
  description: "A property is a container that holds most of the other resources available within the Reactor API. The only resources that are not owned by a property are audit events, companies, extension packages, and profiles. A property belongs to exactly one company, and a company can have many properties."
- name: Data elements
  description: "A data element functions as a variable which points to an important piece of data within your application. Data elements are used within rules and extension configurations. When the rule is triggered at runtime in a browser or an application, the value of the data element is resolved and used within the rule."
- name: Rules
  description: "Rules control the behavior of the resources contained in a deployed library. A rule is a group of one or more rule components, and exists to tie the rule components together in a logical way."
- name: Rule components
  description: "Rule components are the individual items that make up a rule. Rule components have three basic types: events (what triggers a rule), conditions (what the rule checks to determine an action), and actions (what the rule executes depending on whether the condition is met). A rule component can **only** belong to exactly one rule."
- name: Extension packages
  description: "An extension package represents a grouping of individual capabilities that can be made available to a tags user. Most commonly, these capabilities come in the form of rule components (events, conditions, and actions) and data elements, but can also include main modules and shared modules. The capabilities provided by an extension package are installed as an extension when it is included in a library."
- name: Extension package usage authorization
  description: "An extension package usage authorization is an authorization granted by the package owner to other companies for the private use of the extension package versions."
- name: Extensions
  description: An extension represents the installed instance of an extension package. An extension makes the features defined by an extension package available to a property. These features are leveraged when creating data elements and rule components.
- name: Libraries
  description: "A library is a collection of resources (extensions, rules, and data elements) that represent the desired behavior of a property. Libraries are compiled into builds, and those builds are assigned to different environments as they move down the publishing flow from testing to production."
- name: Builds
  description: "A tag library is compiled into a build in order for it to be assigned to an environment for testing and deployment. The contents of a build varies depending on the resources included in the library, the configuration of the environment to which the build is assigned, and the platform of the property that the build belongs to."
- name: Environments
  description: "An environment indicates the specific host where a build can be deployed, and whether the build should be deployed as a set of files or compressed in an archive format. In the Reactor API, environments are separate from hosts themselves, which are managed by the /hosts endpoint."
- name: Hosts
  description: A host represents a hosted destination where a library build can be delivered and ultimately deployed. Hosts can be either Akamai or SFTP servers.
- name: Secrets
  description: A secret is a resource that represents an authentication credential. Secrets are used in event forwarding to authenticate to another system for secure data exchange. Secrets can only be created within event forwarding properties (properties whose `platform` attribute is set to `edge`).
- name: App configurations
  description: App configurations allow credentials to be stored and retrieved for later use.
- name: Audit events
  description: "An audit event is a record of a specific change to another tag resource, generated at the time the change is made. These are system events which can be subscribed to through the use of a callback function."
- name: Callbacks
  description: A callback is a message that Platform sends to a URL host whenever a new audit event is generated.
- name: Notes
  description: "Notes are textual annotations that you can add to certain tag resources, such as data elements, extensions, libraries, properties, rules, and rule components."
- name: Profiles
  description: "A profile represents a tags user. Platform does not maintain its own database of users and permissions, and instead relies on Adobe IDs managed by Adobeâ€™s company-wide Identity Management System (IMS). A profile contains all the information about the logged-in user, including all the Adobe Orgs to which they belong, the product profiles they belong to within each Org, and the rights they have from each product profile."
- name: Search
  description: "The search endpoint provides a way to find resources matching a desired criteria, expressed as a query. All queries are scoped to your current company and accessible properties."
paths:
  /companies:
    get:
      security: []
      tags:
      - Companies
      summary: List companies
      description: ">**NOTE**: For more information on using this operation, see the [companies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/companies.html) on Experience League."
      operationId: listCompanies
      parameters:
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `Bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: org_id
        in: query
        description: Filter by `org_id`.
        schema:
          type: string
      - name: token
        in: query
        description: Filter by `token`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: "A successful response returns an array of companies, including their IDs and attributes."
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/companiesListResponse'
  /companies/{COMPANY_ID}:
    get:
      tags:
      - Companies
      summary: Retrieve a company
      description: ">**NOTE**: For more information on using this operation, see the [companies endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/companies.html) on Experience League."
      operationId: retrieveCompany
      parameters:
      - name: COMPANY_ID
        in: path
        description: The ID of the company you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the company.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/companiesLookupResponse'
  /companies/{COMPANY_ID}/properties:
    get:
      tags:
      - Companies
      - Properties
      summary: List a company's properties
      description: ">**NOTE**: For more information on using this operation, see the [properties endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/properties.html) on Experience League."
      operationId: listProperties
      parameters:
      - name: COMPANY_ID
        in: path
        description: The ID of the company whose properties you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: app_id
        in: query
        description: Filter by `app_id`.
        schema:
          type: string
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: copying
        in: query
        description: Filter by `copying`. This is a legacy attribute that is specific to properties that were migrated from the original Dynamic Tag Management (DTM) system to the current system. A `copying` property is a property that is populating its information from its original DTM implementation.
        schema:
          type: boolean
      - name: enabled
        in: query
        description: Filter by `enabled`.
        schema:
          type: string
      - name: platform
        in: query
        description: Filter by `platform`.
        schema:
          type: string
      - name: token
        in: query
        description: Filter by `token`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: "A successful response returns an array, listing the properties belonging to the specified company."
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/propertiesListResponse'
    post:
      tags:
      - Companies
      - Properties
      summary: Create a new property
      description: ">**NOTE**: For more information on using this operation, see the [properties endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/properties.html) on Experience League."
      operationId: createProperty
      parameters:
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json`
          on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      - name: COMPANY_ID
        in: path
        description: The ID of the company that you want to define the property under.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createPropertyPayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/propertiesLookupResponse'
      x-codegen-request-body-name: body
  /companies/{COMPANY_ID}/app_configurations:
    get:
      tags:
      - Companies
      - App configurations
      summary: List a company's app configurations
      description: ">**NOTE**: For more information on using this operation, see the [app configurations endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/app-configurations.html) on Experience League."
      operationId: listAppConfigurations
      parameters:
      - name: COMPANY_ID
        in: path
        description: The ID of the company whose app configurations you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: app_id
        in: query
        description: Filter by `app_id`.
        schema:
          type: string
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: key_type
        in: query
        description: Filter by `key_type`.
        schema:
          type: string
      - name: messaging_service
        in: query
        description: Filter by `messaging_service`.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: platform
        in: query
        description: Filter by `platform`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: "A successful response returns an array, listing the app configurations belonging to the specified company."
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/appConfigurationsListResponse'
    post:
      tags:
      - Companies
      - App configurations
      summary: Create an app configuration
      description: ">**NOTE**: For more information on using this operation, see the [app configurations endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/app-configurations.html) on Experience League."
      operationId: createAppConfiguration
      parameters:
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json`
          on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      - name: COMPANY_ID
        in: path
        description: The ID of the company that you want to define the app configuration
          under.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/appConfigurationsCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created app configuration.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/appConfigurationsLookupResponse'
      x-codegen-request-body-name: body
  /properties/{PROPERTY_ID}:
    get:
      tags:
      - Properties
      summary: Retrieve a property
      description: ">**NOTE**: For more information on using this operation, see the [properties endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/properties.html) on Experience League."
      operationId: retrieveProperty
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/propertiesLookupResponse'
    delete:
      tags:
      - Properties
      summary: Delete a property
      description: ">**NOTE**: For more information on using this operation, see the [properties endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/properties.html) on Experience League."
      operationId: deleteProperty
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - Properties
      summary: Update a property
      description: ">**NOTE**: For more information on using this operation, see the [properties endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/properties.html) on Experience League."
      operationId: updateProperty
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/propertiesUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/propertiesUpdateResponse'
      x-codegen-request-body-name: body
  /app_configurations/{CONFIG_ID}:
    get:
      tags:
      - App configurations
      summary: Retrieve an app configuration
      description: ">**NOTE**: For more information on using this operation, see the [app configurations endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/app-configurations.html) on Experience League."
      operationId: retrieveAppConfiguration
      parameters:
      - name: CONFIG_ID
        in: path
        description: The ID of the app configuration you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the app configuration.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/appConfigurationsLookupResponse'
    delete:
      tags:
      - App configurations
      summary: Delete an app configuration
      description: ">**NOTE**: For more information on using this operation, see the [app configurations endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/app-configurations.html) on Experience League."
      operationId: deleteAppConfiguration
      parameters:
      - name: CONFIG_ID
        in: path
        description: The ID of the app configuration you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - App configurations
      summary: Update an app configuration
      description: ">**NOTE**: For more information on using this operation, see the [app configurations endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/app-configurations.html) on Experience League."
      operationId: updateAppConfiguration
      parameters:
      - name: CONFIG_ID
        in: path
        description: The ID of the app configuration you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json`
          on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/appConfigurationsCreatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated app
            configuration.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/appConfigurationsUpdateResponse'
      x-codegen-request-body-name: body
  /app_configurations/{CONFIG_ID}/company:
    get:
      tags:
      - App configurations
      summary: Retrieve the company that owns an app configuration
      description: Retrieve the company that owns an app configuration
      operationId: retrieveAppConfigurationCompany
      parameters:
      - name: CONFIG_ID
        in: path
        description: The ID of the app configuration whose company you want to look
          up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the company that owns the app configuration.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/appConfigurationsCompanyLookupResponse'
  /properties/{PROPERTY_ID}/company:
    get:
      tags:
      - Properties
      summary: Retrieve the company that owns a property
      description: ">**NOTE**: For more information on using this operation, see the [properties endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/properties.html) on Experience League."
      operationId: retrievePropertyCompany
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose company you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the company that owns the property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/companiesLookupResponse'
  /properties/{PROPERTY_ID}/callbacks:
    get:
      tags:
      - Properties
      - Callbacks
      summary: List a property's callbacks
      description: ">**NOTE**: For more information on using this operation, see the [callbacks endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html) on Experience League."
      operationId: listCallbacks
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose callbacks you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of callbacks belonging to the specified property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/callbacksListResponse'
    post:
      tags:
      - Properties
      - Callbacks
      summary: Create a new callback
      description: ">**NOTE**: For more information on using this operation, see the [callbacks endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html) on Experience League."
      operationId: createCallback
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property that you want to create a callback for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json`
          on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/callbacksCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created callback.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/callbacksCreateResponse'
      x-codegen-request-body-name: body
  /properties/{PROPERTY_ID}/data_elements:
    get:
      tags:
      - Properties
      - Data elements
      summary: List a property's data elements
      description: ">**NOTE**: For more information on using this operation, see the [data elements endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/data-elements.html) on Experience League."
      operationId: listPropertyDataElements
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose data elements you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: published_at
        in: query
        description: Filter by `published_at` timestamp.
        schema:
          type: string
      - name: published
        in: query
        description: Filter by `published` status.
        schema:
          type: string
      - name: enabled
        in: query
        description: Filter by `enabled`.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: origin_id
        in: query
        description: Filter by `origin_id`.
        schema:
          type: string
      - name: revision_number
        in: query
        description: Filter by `revision_number`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of data elements belonging to the specified property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/dataElementsListResponse'
    post:
      tags:
      - Properties
      - Data elements
      summary: Create a data element
      description: ">**NOTE**: For more information on using this operation, see the [data elements endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/data-elements.html) on Experience League."
      operationId: createDataElement
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property that you want to create a data element for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/dataElementsCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created data element.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/dataElementsCreateResponse'
      x-codegen-request-body-name: body
  /properties/{PROPERTY_ID}/environments:
    get:
      tags:
      - Properties
      - Environments
      summary: List a property's environments
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: listEnvironments
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose environments you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: stage
        in: query
        description: Filter by `stage`.
        schema:
          type: string
      - name: token
        in: query
        description: Filter by `token`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of environments belonging to the specified property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsListResponse'
    post:
      tags:
      - Properties
      - Environments
      summary: Create an environment
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: createEnvironment
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property that you want to create an environment for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/environmentsCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created environment.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsCreateResponse'
      x-codegen-request-body-name: body
  /properties/{PROPERTY_ID}/extensions:
    get:
      tags:
      - Properties
      - Extensions
      summary: List a property's extensions
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: listExtensions
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose extensions you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: display_name
        in: query
        description: Filter by `display_name`.
        schema:
          type: string
      - name: enabled
        in: query
        description: Filter by `enabled`.
        schema:
          type: string
      - name: origin_id
        in: query
        description: Filter by `origin_id`.
        schema:
          type: string
      - name: published
        in: query
        description: Filter by `published` status.
        schema:
          type: string
      - name: published_at
        in: query
        description: Filter by `published_at` timestamp.
        schema:
          type: string
      - name: revision_number
        in: query
        description: Filter by `revision_number`.
        schema:
          type: string
      - name: version
        in: query
        description: Filter by `version`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of extensions belonging to the specified property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsListResponse'
    post:
      tags:
      - Properties
      - Extensions
      summary: Create an extension
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: createExtension
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property that you want to create an extension for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/extensionsCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created extension.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsCreateResponse'
      x-codegen-request-body-name: body
  /properties/{PROPERTY_ID}/hosts:
    get:
      tags:
      - Properties
      - Hosts
      summary: List a property's hosts
      description: ">**NOTE**: For more information on using this operation, see the [hosts endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/hosts.html) on Experience League."
      operationId: listHosts
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose hosts you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: display_name
        in: query
        description: Filter by `display_name`.
        schema:
          type: string
      - name: enabled
        in: query
        description: Filter by `enabled`.
        schema:
          type: string
      - name: origin_id
        in: query
        description: Filter by `origin_id`.
        schema:
          type: string
      - name: published
        in: query
        description: Filter by `published` status.
        schema:
          type: string
      - name: published_at
        in: query
        description: Filter by `published_at` timestamp.
        schema:
          type: string
      - name: revision_number
        in: query
        description: Filter by `revision_number`.
        schema:
          type: string
      - name: version
        in: query
        description: Filter by `version`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of hosts belonging to the specified property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/hostsListResponse'
    post:
      tags:
      - Properties
      - Hosts
      summary: Create a host
      description: ">**NOTE**: For more information on using this operation, see the [hosts endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/hosts.html) on Experience League."
      operationId: createHost
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property that you want to create a host for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/hostsCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created host.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/hostsCreateResponse'
      x-codegen-request-body-name: body
  /properties/{PROPERTY_ID}/libraries:
    get:
      tags:
      - Properties
      - Libraries
      summary: List a property's libraries
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: listLibraries
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose libraries you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: stale
        in: query
        description: "Filter by `stale` status. A library becomes stale when another library on the [upstream](https://experienceleague.adobe.com/docs/experience-platform/tags/publish/publishing-flow.html#upstream) has been changed and the current library needs to be rebuilt to reflect those changes. A library may also enter a stale state if one of the extensions it uses receives an update."
        schema:
          type: string
      - name: state
        in: query
        description: Filter by `state`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of libraries belonging to the specified property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesListResponse'
    post:
      tags:
      - Properties
      - Libraries
      summary: Create a library
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: createLibrary
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property that you want to create a library for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesCreateResponse'
      x-codegen-request-body-name: body
  /properties/{PROPERTY_ID}/rules:
    get:
      tags:
      - Properties
      - Rules
      summary: List a property's rules
      description: ">**NOTE**: For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League."
      operationId: listRules
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose rules you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: dirty
        in: query
        description: Filter by `dirty` (whether the resource contains changes that haven't been pushed to a library).
        schema:
          type: string
      - name: enabled
        in: query
        description: Filter by `enabled`.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: origin_id
        in: query
        description: Filter by `origin_id`.
        schema:
          type: string
      - name: published
        in: query
        description: Filter by `published` status.
        schema:
          type: string
      - name: published_at
        in: query
        description: Filter by `published_at` timestamp.
        schema:
          type: string
      - name: revision_number
        in: query
        description: Filter by `revision_number`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of rules belonging to the specified property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesListResponse'
    post:
      tags:
      - Properties
      - Rules
      summary: Create a rule
      description: ">**NOTE**: For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League."
      operationId: createRule
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property that you want to create a rule for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/rulesCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created rule.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesCreateResponse'
      x-codegen-request-body-name: body
  /properties/{PROPERTY_ID}/secrets:
    get:
      tags:
      - Properties
      - Secrets
      summary: List a property's secrets
      description: ">**NOTE**: For more information on using this operation, see the [secrets endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/secrets.html) on Experience League."
      operationId: listPropertySecrets
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose secrets you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: environment_id
        in: query
        description: Filter by `environment_id`.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: status
        in: query
        description: Filter by `status`.
        schema:
          type: string
      - name: type_of
        in: query
        description: Filter by `type`.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of secrets belonging to the specified property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/secretsListResponse'
    post:
      tags:
      - Properties
      - Secrets
      summary: Create a secret
      description: ">**NOTE**: For more information on using this operation, see the [secrets endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/secrets.html) on Experience League."
      operationId: createSecret
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property that you want to create a secret for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/secretsCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created secret.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/secretsCreateResponse'
      x-codegen-request-body-name: body
  /callbacks/{CALLBACK_ID}:
    get:
      tags:
      - Callbacks
      summary: Retrieve a callback
      description: ">**NOTE**: For more information on using this operation, see the [callbacks endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html) on Experience League."
      operationId: retrieveCallback
      parameters:
      - name: CALLBACK_ID
        in: path
        description: The ID of the callback you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the callback.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/callbacksLookupResponse'
    delete:
      tags:
      - Callbacks
      summary: Delete a callback
      description: ">**NOTE**: For more information on using this operation, see the [callbacks endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html) on Experience League."
      operationId: deleteCallback
      parameters:
      - name: CALLBACK_ID
        in: path
        description: The ID of the callback you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - Callbacks
      summary: Update a callback
      description: ">**NOTE**: For more information on using this operation, see the [callbacks endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html) on Experience League."
      operationId: updateCallback
      parameters:
      - name: CALLBACK_ID
        in: path
        description: The ID of the callback you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/callbacksUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated callback.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/callbacksUpdateResponse'
      x-codegen-request-body-name: body
  /data_elements/{DATA_ELEMENT_ID}:
    get:
      tags:
      - Data elements
      summary: Retrieve a data element
      description: ">**NOTE**: For more information on using this operation, see the [data elements endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/data-elements.html) on Experience League."
      operationId: retrieveDataElement
      parameters:
      - name: DATA_ELEMENT_ID
        in: path
        description: The ID of the data element you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the data element.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/dataElementsLookupResponse'
    patch:
      tags:
      - Data elements
      summary: Update a data element
      description: |-
        When updating a data element, its ID must be provided in both the request path and the request payload. These IDs must match in order for the call to be successful.

        You can also create a new revision of the data element which is assigned its own ID. The original data element may be discovered via the origin link. Revising a data element is achieved by supplying a `meta` attribute containing an `action` property with the value `revise`. Excluding this property will update the current revision of the data element without creating a new one.


        >**NOTE**: For more information on using this operation, see the [data elements endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/data-elements.html) on Experience League.
      operationId: updateDataElement
      parameters:
      - name: DATA_ELEMENT_ID
        in: path
        description: The ID of the data element you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/dataElementsUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated data element or its new revision.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/dataElementsUpdateResponse'
      x-codegen-request-body-name: body
  /environments/{ENVIRONMENT_ID}:
    get:
      tags:
      - Environments
      summary: Retrieve an environment
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: retrieveEnvironment
      parameters:
      - name: ENVIRONMENT_ID
        in: path
        description: The ID of the environment you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the environment.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsLookupResponse'
    delete:
      tags:
      - Environments
      summary: Delete an environment
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: deleteEnvironment
      parameters:
      - name: ENVIRONMENT_ID
        in: path
        description: The ID of the environment you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - Environments
      summary: Update an environment
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: updateEnvironment
      parameters:
      - name: ENVIRONMENT_ID
        in: path
        description: The ID of the environment you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/environmentsUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated environment.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsUpdateResponse'
      x-codegen-request-body-name: body
  /secrets/{SECRET_ID}:
    get:
      tags:
      - Secrets
      summary: Retrieve a secret
      description: ">**NOTE**: For more information on using this operation, see the [secrets endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/secrets.html) on Experience League."
      operationId: retrieveSecret
      parameters:
      - name: SECRET_ID
        in: path
        description: The ID of the secret you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the secret.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/secretsLookupResponse'
    delete:
      tags:
      - Secrets
      summary: Delete a secret
      description: ">**NOTE**: For more information on using this operation, see the [secrets endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/secrets.html) on Experience League."
      operationId: deleteSecret
      parameters:
      - name: SECRET_ID
        in: path
        description: The ID of the secret you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - Secrets
      summary: Test or retry a secret
      description: |-
        This call tests or retries a secret depending on the value of the `meta.action` property in the request payload. This call does not update the secret itself.


        You can retry a secret by setting the `action` property to `retry`. Retrying a secret is the action of manually triggering the secret exchange.


        If the secret in question is an `oauth2` type, you can test it by setting the `action` property to `test` instead. This performs an exchange with the authorization service and includes the response in the `test_exchange` attribute in the secretâ€™s `meta` object.


        >**NOTE**: For more information on using this operation, see the [secrets endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/secrets.html) on Experience League.
      operationId: testOrRetrySecret
      parameters:
      - name: SECRET_ID
        in: path
        description: The ID of the secret you want to test or retry.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/secretsUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated secret.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/secretsUpdateResponse'
      x-codegen-request-body-name: body
  /environments/{ENVIRONMENT_ID}/builds:
    get:
      tags:
      - Environments
      summary: List an environment's builds
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: listBuilds
      parameters:
      - name: ENVIRONMENT_ID
        in: path
        description: The ID of the environment whose related builds you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of builds that use the specified environment.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsBuildsListResponse'
  /environments/{ENVIRONMENT_ID}/secrets:
    get:
      tags:
      - Secrets
      - Environments
      summary: List an environment's secrets
      description: ">**NOTE**: For more information on using this operation, see the [secrets endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/secrets.html) on Experience League."
      operationId: listEnvironmentSecrets
      parameters:
      - name: ENVIRONMENT_ID
        in: path
        description: The ID of the environment whose related secrets you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of secrets that are associated with the specified environment.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsSecretsListResponse'
  /environments/{ENVIRONMENT_ID}/host:
    get:
      tags:
      - Environments
      summary: Retrieve a host
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: retrieveEnvironmentHost
      parameters:
      - name: ENVIRONMENT_ID
        in: path
        description: The ID of the environment whose host you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the environment's associated host.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsHostLookupResponse'
  /environments/{ENVIRONMENT_ID}/relationships/host:
    get:
      tags:
      - Environments
      summary: Retrieve the host relationship for an environment
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: retrieveHostRelationship
      parameters:
      - name: ENVIRONMENT_ID
        in: path
        description: The ID of the environment whose host relationship you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the host relationship for the specified environment.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsHostRelationshipLookupResponse'
  /environments/{ENVIRONMENT_ID}/library:
    get:
      tags:
      - Environments
      summary: Retrieve an environment's related library
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: retrieveEnvironmentLibrary
      parameters:
      - name: ENVIRONMENT_ID
        in: path
        description: The ID of the environment whose related library you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the environment's associated library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsLibraryLookupResponse'
  /environments/{ENVIRONMENT_ID}/property:
    get:
      tags:
      - Environments
      summary: Retrieve the property that owns an environment
      description: ">**NOTE**: For more information on using this operation, see the [environments endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/environments.html) on Experience League."
      operationId: retrieveEnvironmentProperty
      parameters:
      - name: ENVIRONMENT_ID
        in: path
        description: The ID of the environment whose related property you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the environment's associated property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/environmentsPropertyLookupResponse'
  /extension_packages:
    get:
      tags:
      - Extension packages
      summary: List extension packages
      description: ">**NOTE**: For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: listExtensionPackages
      parameters:
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: display_name
        in: query
        description: Filter by `display_name`.
        schema:
          type: string
      - name: status
        in: query
        description: Filter by `status`.
        schema:
          type: string
      - name: platform
        in: query
        description: Filter by `platform`.
        schema:
          type: string
      - name: version
        in: query
        description: Filter by `version`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: "A successful response returns an array of extension packages, including their IDs and attributes."
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionPackagesListResponse'
    post:
      tags:
      - Extension packages
      summary: Create an extension package
      description: ">**NOTE**: Instead of a JSON payload, this endpoint expects a file upload via multipart form data. > >For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: createExtensionPackage
      parameters:
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `multipart/form-data` for all requests that require archive file uploads.
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - package
              type: object
              properties:
                package:
                  type: string
                  description: The extension package archive file.
                  format: binary
        required: true
      responses:
        "202":
          x-summary: "Success"
          description: A successful response returns the details of the newly created extension package.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionPackagesCreateResponse'
  /extension_packages/{EXTENSION_PACKAGE_ID}:
    get:
      tags:
      - Extension packages
      summary: Retrieve an extension package
      description: ">**NOTE**: For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: retrieveExtensionPackage
      parameters:
      - name: EXTENSION_PACKAGE_ID
        in: path
        description: The ID of the extension package you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the extension package.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionPackagesLookupResponse'
    post:
      tags:
      - Extension packages
      summary: Update an extension package
      description: |-
        Only development extension packages can be updated using a new archive file. Once the extension package has been transitioned to either private or public, it can no longer be updated. If you want to add new functionality or fix bugs, you must first create a new extension package with the same name, but with a new version. When this new extension package is transitioned to private or public, it will become available in the marketplace and replace the previous version.

        >**NOTE**: For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League.
      operationId: updateExtensionPackage
      parameters:
      - name: EXTENSION_PACKAGE_ID
        in: path
        description: The ID of the development extension package you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `multipart/form-data` for all requests that require archive file uploads.
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - package
              type: object
              properties:
                package:
                  type: string
                  description: The extension package archive file.
                  format: binary
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated extension package.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionPackagesLookupResponse'
    patch:
      tags:
      - Extension packages
      summary: Privately release or discontinue an extension package
      description: "Once you have completed testing your extension package you can release it privately. This makes it available to any property within your company. After you have released it privately, you can begin the public release process by filling out the [Public Release Request Form](https://adobe.allegiancetech.com/cgi-bin/qwebcorporate.dll?idx=7DRB5U).\n  \n\nWhen privately releasing or discontinuing an extension package, its ID must be provided in both the request path and the request payload. These IDs must match in order for the call to be successful.\n\n\n>**NOTE**: For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: privateReleaseExtensionPackage
      parameters:
      - name: EXTENSION_PACKAGE_ID
        in: path
        description: The ID of the development extension package you want to privately release or discontinue.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/extensionPackagesPatchPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated extension package.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionPackagesPatchResponse'
      x-codegen-request-body-name: body
  /extension_packages/{EXTENSION_PACKAGE_ID}/versions:
    get:
      tags:
      - Extension packages
      summary: Retrieve an extension package's versions
      description: ">**NOTE**: For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: retrieveExtensionPackageVersion
      parameters:
      - name: EXTENSION_PACKAGE_ID
        in: path
        description: The ID of the extension package whose versions you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of each version of the extension package.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionPackagesVersionsListResponse'  
  /extension_packages/{EXTENSION_PACKAGE_ID}/extension_package_usage_authorizations:
    get:
      tags:
      - Extension package usage authorization
      summary: Retrieve extension package usage authorizations for an extension package
      description: ">**NOTE**: For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: retrieveExtensionPackageUsageAuthorizationForPackage
      parameters:
      - name: EXTENSION_PACKAGE_ID
        in: path
        description: The ID of the extension package you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of each version of the extension package.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/retrieveExtensionPackageUsageAuthorizationForPackageResponse'
    post:
      tags:
      - Extension package usage authorization
      summary: Create an extension package usage authorization
      description: ">**NOTE**: Instead of a JSON payload, this endpoint expects a file upload via multipart form data. > >For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: createExtensionPackageUsageAuthorization
      parameters:
      - name: EXTENSION_PACKAGE_ID
        in: path
        description: The ID of the extension package you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `multipart/form-data` for all requests that require archive file uploads.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/extensionPackagesCreateUsageAuthorizationPayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created extension package usage authorization.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionPackagesCreateUsageAuthorizationResponse'           

  /extension_package_usage_authorizations:
    get:
      tags:
      - Extension package usage authorization
      summary: Retrieve a list of extension package usage authorizations
      description: ">**NOTE**: For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: retrieveExtensionPackageUsageAuthorization
      parameters:
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of each extension package usage authorization.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/retrieveExtensionPackageUsageAuthorizationResponse'  
     
  /extension_package_usage_authorizations/{ID}:
    delete:
      tags:
      - Extension package usage authorization
      summary: Delete an extension package usage authorization
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: deletePackageUsageAuthorization
      parameters:
      - name: ID
        in: path
        description: The ID of the extension package usage authorization you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}  
    patch:
      tags:
      - Extension package usage authorization
      summary: Update an extension package usage authorization
      description: ">**NOTE**: Instead of a JSON payload, this endpoint expects a file upload via multipart form data. > >For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: updateExtensionPackageUsageAuthorization
      parameters:
      - name: ID
        in: path
        description: The ID of the extension package usage authorization you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `multipart/form-data` for all requests that require archive file uploads.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/extensionPackagesUpdateUsageAuthorizationPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated extension package usage authorization.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionPackagesUpdateUsageAuthorizationResponse'
  /extension_package_usage_authorizations/{EXTENSION_PACKAGE_USAGE_AUTHORIZATION_ID}/extension_package:
    get:
      tags:
      - Extension package usage authorization
      summary: Retrieve data for the extension package for an extension package usage authorization
      description: ">**NOTE**: For more information on using this operation, see the [extension packages endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extension-packages.html) on Experience League."
      operationId: retrieveDataExtensionPackageUsageAuthorization
      parameters:
      - name: EXTENSION_PACKAGE_USAGE_AUTHORIZATION_ID
        in: path
        description: The ID of the extension package usage authorization you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token which can be copied from your Experience Platform integration, prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of data for the extension package user athorization.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/retrieveDataExtensionPackageUsageAuthorizationResponse'   
  /extensions/{EXTENSION_ID}:
    get:
      tags:
      - Extensions
      summary: Retrieve an extension
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: retrieveExtension
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the extension.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsLookupResponse'
    delete:
      tags:
      - Extensions
      summary: Delete an extension
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: deleteExtension
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - Extensions
      summary: Revise an extension
      description: |-
        This operation creates a new revision of an extension with the current (head) revision. A revision of an extension has its own ID, and the original extension may be discovered via the `origin` link.

        When revising an extension, its ID must be provided in both the request path and the request payload. These IDs must match in order for the call to be successful.


        >**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League.
      operationId: reviseExtension
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension you want to revise.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json`
          on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/extensionsUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the new revision for the extension.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsUpdateResponse'
      x-codegen-request-body-name: body
  /extensions/{EXTENSION_ID}/extension_package:
    get:
      tags:
      - Extensions
      summary: Retrieve the extension package for an extension
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: retrievePackageForExtension
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension whose extension package you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the extension package associated with the specified extension.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsExtensionPackageLookupResponse'
  /extensions/{EXTENSION_ID}/libraries:
    get:
      tags:
      - Extensions
      summary: List the libraries that use an extension
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: listExtensionLibraries
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension whose libraries you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of libraries that use the specified extension.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsLibrariesListResponse'
  /extensions/{EXTENSION_ID}/property:
    get:
      tags:
      - Extensions
      summary: Retrieve an extension's property
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: retrieveExtensionProperty
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension whose property you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the property that owns the specified extension property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsPropertyLookupResponse'
  /extensions/{EXTENSION_ID}/origin:
    get:
      tags:
      - Extensions
      summary: Retrieve an extension's origin
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: retrieveExtensionOrigin
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension whose origin you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the specified extension's origin.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsOriginLookupResponse'
  /extensions/{EXTENSION_ID}/revisions:
    get:
      tags:
      - Extensions
      summary: List an extension's revisions
      description: ">**NOTE**: For more information on using this operation, see the [extensions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/extensions.html) on Experience League."
      operationId: listExtensionRevisions
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension whose revisions you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of revisions for the specified extension.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsRevisionsListResponse'
  /hosts/{HOST_ID}:
    get:
      tags:
      - Hosts
      summary: Retrieve a host
      description: ">**NOTE**: For more information on using this operation, see the [hosts endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/hosts.html) on Experience League."
      operationId: retrieveHost
      parameters:
      - name: HOST_ID
        in: path
        description: The ID of the host you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the host.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/hostsLookupResponse'
    delete:
      tags:
      - Hosts
      summary: Delete a host
      description: ">**NOTE**: For more information on using this operation, see the [hosts endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/hosts.html) on Experience League."
      operationId: deleteHost
      parameters:
      - name: HOST_ID
        in: path
        description: The ID of the host you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - Hosts
      summary: Update a host
      description: |-
        Only hosts with a `type_of` value of `sftp` may be updated.

        >**NOTE**: For more information on using this operation, see the [hosts endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/hosts.html) on Experience League.
      operationId: updateHost
      parameters:
      - name: HOST_ID
        in: path
        description: The ID of the host you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/hostsUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated host.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/hostsUpdateResponse'
      x-codegen-request-body-name: body
  /hosts/{HOST_ID}/property:
    get:
      tags:
      - Hosts
      summary: Retrieve a host's property
      description: ">**NOTE**: For more information on using this operation, see the [hosts endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/hosts.html) on Experience League."
      operationId: retrieveHostProperty
      parameters:
      - name: HOST_ID
        in: path
        description: The ID of the host whose property you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the property that owns the host.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/hostsPropertyLookupResponse'
  /libraries/{LIBRARY_ID}:
    get:
      tags:
      - Libraries
      summary: Retrieve a library
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: retrieveLibrary
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesLookupResponse'
    delete:
      tags:
      - Libraries
      summary: Delete a library
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: deleteLibrary
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - Libraries
      summary: Update a library
      description: |-
        This endpoint allows you to update the name of a library, or transition the library between different states in the [publishing flow](https://experienceleague.adobe.com/docs/launch/using/publish/publishing-flow.html).

        When updating a library, its ID must be provided in both the request path and the request payload. These IDs must match in order for the call to be successful.

        To transition the library between states, the payload must include a `meta` object, containing a single `action` property whose value represents the specific transition action. The available actions for a library depend on its current publishing state. See the API guide on [transitioning a library](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html#transition) for details on the available actions for each library state.

        To update the name of a library, the payload must include an `attributes` object, containing a single `name` property with the updated value.

        >**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League.
      operationId: updateLibrary
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesUpdateResponse'
      x-codegen-request-body-name: body
  /libraries/{LIBRARY_ID}/property:
    get:
      tags:
      - Libraries
      summary: Retrieve a library's property
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: retrieveLibraryProperty
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose related property you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the property associated with the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesPropertyLookupResponse'
  /libraries/{LIBRARY_ID}/builds:
    get:
      tags:
      - Builds
      - Libraries
      summary: List a library's builds
      description: ">**NOTE**: For more information on using this operation, see the [builds endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/builds.html) on Experience League."
      operationId: listLibraryBuilds
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose builds you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: status
        in: query
        description: Filter by `status`.
        schema:
          type: string
      - name: token
        in: query
        description: Filter by `token`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of builds belonging to the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/buildsListResponse'
    post:
      tags:
      - Libraries
      - Builds
      summary: Create a build
      description: |-
        This POST request does not accept a payload, as the build parameters are determined by the parent library.

        >**NOTE**: For more information on using this operation, see the [builds endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/builds.html) on Experience League.
      operationId: createBuild
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to create a build for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created build.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/buildsCreateResponse'
  /libraries/{LIBRARY_ID}/environment:
    get:
      tags:
      - Libraries
      summary: Retrieve a library's related environment
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: retrieveLibraryEnvironment
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose related environment you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the environment associated with the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesLookupEnvironmentResponse'
  /libraries/{LIBRARY_ID}/upstream_library:
    get:
      tags:
      - Libraries
      summary: Retrieve a library's upstream library
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: retrieveUpstreamLibrary
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose upstream library you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the upstream library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesLookupUpstreamResponse'
  /libraries/{LIBRARY_ID}/data_elements:
    get:
      tags:
      - Libraries
      summary: List a library's related data elements
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: listLibraryDataElements
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose related data elements you want to
          list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of data elements related to the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesDataElementsListResponse'
  /libraries/{LIBRARY_ID}/relationships/data_elements:
    get:
      tags:
      - Libraries
      summary: List a library's data element relationships
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: listLibraryRelationships
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose data element relationships you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of data element relationships attached to the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesDataElementRelationshipsListResponse'
    post:
      operationId: addDataElement
      tags:
      - Libraries
      summary: Add data elements to a specific library.
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to add data elements to.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesCreateDataElementRelationshipsPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the newly created relationship.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesDataElementRelationshipsCreateResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Libraries
      summary: Remove a library's data element relationships
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: deleteLibraryRelationships
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to remove a data element relationship from.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesDeleteDataElementRelationshipsPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the removed relationship.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesDataElementRelationshipsDeleteResponse'
      x-codegen-request-body-name: body
    patch:
      tags:
      - Libraries
      summary: Replace all data element relationships for a specific library
      description: |-
        This call replaces all of the existing data element relationships for a library with those you provide in the payload array.

        >**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League.
      operationId: updateLibraryRelationships
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to replace a data element relationship for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesUpdateDataElementRelationshipsPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the updated relationship.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesDataElementRelationshipsUpdateResponse'
      x-codegen-request-body-name: body
  /libraries/{LIBRARY_ID}/relationships/environment:
    get:
      operationId: getLibraryEnvironmentRelationship
      tags:
      - Libraries
      summary: Retrieve a library's environment relationship
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose environment relationship you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the environment relationship attached to the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesEnvironmentRelationshipLookupResponse'
    delete:
      tags:
      - Libraries
      summary: Remove a library's environment relationship
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: removeLibraryRelationship
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to remove an environment relationship from.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the removed relationship.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesEnvironmentRelationshipDeleteResponse'
    patch:
      tags:
      - Libraries
      summary: Set a library's environment relationship
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: updateLibraryRelationship
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to set an environment relationship for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesCreateEnvironmentRelationshipsPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the established relationship.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesEnvironmentRelationshipCreateResponse'
      x-codegen-request-body-name: body
  /libraries/{LIBRARY_ID}/extensions:
    get:
      tags:
      - Libraries
      summary: List a library's related extensions
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: listLibraryExtensions
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose related extensions you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of extensions associated with the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesExtensionsListResponse'
  /libraries/{LIBRARY_ID}/relationships/extensions:
    get:
      tags:
      - Libraries
      summary: List a library's extension relationships
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: listExtensionRelationships
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose extension relationships you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of extension relationship objects attached to the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesExtensionRelationshipsListResponse'
    post:
      tags:
      - Libraries
      summary: Add extensions to a specific library
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: addExtension
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to add extensions to.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesCreateExtensionRelationshipsPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: "A successful response returns a list of extension relationships attached to the library, including those just added."
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesExtensionRelationshipsCreateResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Libraries
      summary: Remove a library's extensions
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: removeLibraryExtensions
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to remove extensions from.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the updated list of extensions for the library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesExtensionRelationshipsDeleteResponse'
    patch:
      tags:
      - Libraries
      summary: Replace all extensions for a specific library
      description: |-
        This call replaces all of the existing extension relationships for a library with those you provide in the payload array.

        >**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League.
      operationId: updateLibraryExtensions
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose extensions you want to replace.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesUpdateExtensionRelationshipsPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of the library's replaced extensions.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesExtensionRelationshipsUpdateResponse'
      x-codegen-request-body-name: body
  /libraries/{LIBRARY_ID}/rules:
    get:
      tags:
      - Libraries
      summary: List a library's related rules
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: listLibraryRules
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose related rules you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of rules associated with the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesRulesListResponse'
  /libraries/{LIBRARY_ID}/relationships/rules:
    get:
      tags:
      - Libraries
      summary: List a library's rule relationships
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: listLibraryRuleRelationships
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose rule relationships you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of rule relationship objects attached to the specified library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesRuleRelationshipsListResponse'
    post:
      tags:
      - Libraries
      summary: Add rules to a specific library
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: addLibraryRules
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to add rules to.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesCreateRuleRelationshipsPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: "A successful response returns a list of rule relationships attached to the library, including those just added."
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesRuleRelationshipsCreateResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Libraries
      summary: Remove a library's rules
      description: ">**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League."
      operationId: removeLibraryRules
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to remove rules from.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesDeleteRuleRelationshipsPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the updated list of rules for the library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesRuleRelationshipsDeleteResponse'
      x-codegen-request-body-name: body
    patch:
      tags:
      - Libraries
      summary: Replace all rules for a specific library
      description: |-
        This call replaces all of the existing rule relationships for a library with those you provide in the payload array.

        >**NOTE**: For more information on using this operation, see the [libraries endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html) on Experience League.
      operationId: updateLibraryRules
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose rules you want to replace.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesUpdateRuleRelationshipsPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of the library's replaced rules.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesRuleRelationshipsUpdateResponse'
      x-codegen-request-body-name: body
  /builds/{BUILD_ID}:
    get:
      operationId: getBuild
      tags:
      - Builds
      summary: Look up a build by ID.
      description: ">**NOTE**: For more information on using this operation, see the [builds endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/builds.html) on Experience League."
      parameters:
      - name: BUILD_ID
        in: path
        description: The ID of the build you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the build.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/buildsLookupResponse'
    patch:
      tags:
      - Builds
      summary: Republish a build
      description: |-
        When republishing a build, its ID must be provided in both the request path and the request payload. These IDs must match in order for the call to be successful.

        >**NOTE**: For more information on using this operation, see the [builds endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/builds.html) on Experience League.
      operationId: republishBuild
      parameters:
      - name: BUILD_ID
        in: path
        description: The ID of the build you want to republish.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/buildsUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the build.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/buildsUpdateResponse'
      x-codegen-request-body-name: body
  /rules/{RULE_ID}:
    get:
      tags:
      - Rules
      summary: Retrieve a rule
      description: ">**NOTE**: For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League."
      operationId: retrieveRule
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the rule.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesLookupResponse'
    delete:
      tags:
      - Rules
      summary: Delete a rule
      description: ">**NOTE**: For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League."
      operationId: deleteRule
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - Rules
      summary: Update a rule
      description: |-
        When updating a rule, you have the option of creating a new revision of the rule which is assigned its own ID. The original rule may be discovered via the origin link. Revising a rule is achieved by supplying a `meta` attribute containing an `action` property with the value `revise`. Excluding this property will update the current revision of the rule without creating a new one.

        When updating or revising a rule, its ID must be provided in both the request path and the request payload. These IDs must match in order for the call to be successful.


        >**NOTE**: For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League.
      operationId: updateRule
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/rulesUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the new revision for the rule.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesUpdateResponse'
      x-codegen-request-body-name: body
  /rules/{RULE_ID}/rule_components:
    get:
      tags:
      - Rules
      - Rule components
      summary: List a rule's components
      description: ">**NOTE**: For more information on using this operation, see the [rule components endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rule-components.html) on Experience League."
      operationId: listRuleComponents
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule whose rule components you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: dirty
        in: query
        description: Filter by `dirty` (whether the resource contains changes that haven't been pushed to a library).
        schema:
          type: string
      - name: enabled
        in: query
        description: Filter by `enabled`.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: negate
        in: query
        description: Filter by `negate` (whether the rule component represents a negation).
        schema:
          type: string
      - name: origin_id
        in: query
        description: Filter by `origin_id`.
        schema:
          type: string
      - name: published
        in: query
        description: Filter by `published` status.
        schema:
          type: string
      - name: published_at
        in: query
        description: Filter by `published_at` timestamp.
        schema:
          type: string
      - name: revision_number
        in: query
        description: Filter by `revision_number`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of rule components attached to the rule.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ruleComponentsListResponse'
    post:
      tags:
      - Rules
      - Rule components
      summary: Create a new rule component
      description: ">**NOTE**: For more information on using this operation, see the [rule components endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rule-components.html) on Experience League."
      operationId: createRuleComponent
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule that you want to create a rule component for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ruleComponentsCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created rule component.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ruleComponentsCreateResponse'
      x-codegen-request-body-name: body
  /rules/{RULE_ID}/libraries:
    get:
      tags:
      - Rules
      summary: List all libraries that use a specific rule
      description: ">**NOTE**: For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League."
      operationId: listRuleLibraries
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule whose related libraries you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of libraries related to the specified rule.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesLibrariesListResponse'
  /rules/{RULE_ID}/property:
    get:
      tags:
      - Rules
      summary: Retrieve the property that owns a specific rule
      description: ">**NOTE**: For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League."
      operationId: retrieveRuleProperty
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule whose property you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the specified rule's property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesPropertyLookupResponse'
  /rules/{RULE_ID}/origin:
    get:
      tags:
      - Rules
      summary: Retrieve a rule's related origin
      description: ">**NOTE**: For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League."
      operationId: retrieveRuleOrigin
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule whose origin you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the specified rule's origin.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesOriginLookupResponse'
  /rules/{RULE_ID}/revisions:
    get:
      tags:
      - Rules
      summary: List a rule's revisions
      description: ">**NOTE**: For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League."
      operationId: listRuleRevisions
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule whose revisions you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of revisions for the specified rule.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesRevisionsListResponse'
  /rules/{RULE_ID}/rule_component_notes:
    get:
      tags:
      - Rules
      summary: List the notes for a rule's components
      description: ">**NOTE**: Notes attached directly to the rule itself are not included in results for this endpoint. > >For more information on using this operation, see the [rules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rules.html) on Experience League."
      operationId: listRulesComponentsNotes
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule whose rule component notes you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of notes attached to the rule components of the specified rule.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesRuleComponentsListResponse'
  /rule_components/{RULE_COMPONENT_ID}:
    get:
      tags:
      - Rule components
      summary: Retrieve a rule component
      description: ">**NOTE**: For more information on using this operation, see the [rule components endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rule-components.html) on Experience League."
      operationId: retrieveRuleComponent
      parameters:
      - name: RULE_COMPONENT_ID
        in: path
        description: The ID of the rule component you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the rule component.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ruleComponentsLookupResponse'
    delete:
      tags:
      - Rule components
      summary: Delete a rule component
      description: ">**NOTE**: For more information on using this operation, see the [rule components endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rule-components.html) on Experience League."
      operationId: deleteRuleComponent
      parameters:
      - name: RULE_COMPONENT_ID
        in: path
        description: The ID of the rule component you want to delete.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "204":
          x-summary: "No content"
          description: A successful response returns HTTP status 204 (No Content).
          content: {}
    patch:
      tags:
      - Rule components
      summary: Update a rule component
      description: |-
        When updating a rule component, its ID must be provided in both the request path and the request payload. These IDs must match in order for the call to be successful.

        >**NOTE**: For more information on using this operation, see the [rule components endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rule-components.html) on Experience League.
      operationId: updateRuleComponent
      parameters:
      - name: RULE_COMPONENT_ID
        in: path
        description: The ID of the rule component you want to update.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ruleComponentsUpdatePayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the new revision for the rule component.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ruleComponentsUpdateResponse'
      x-codegen-request-body-name: body
  /rule_components/{RULE_COMPONENT_ID}/extension:
    get:
      operationId: getRuleComponentExtension
      tags:
      - Rule components
      summary: Look up the extension that provides a specific rule component.
      description: ">**NOTE**: For more information on using this operation, see the [rule components endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rule-components.html) on Experience League."
      parameters:
      - name: RULE_COMPONENT_ID
        in: path
        description: The ID of the rule component whose extension you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the extension that provides the rule component.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ruleComponentsExtensionLookupResponse'
  /rule_components/{RULE_COMPONENT_ID}/origin:
    get:
      tags:
      - Rule components
      summary: Retrieve a rule component's origin
      description: ">**NOTE**: For more information on using this operation, see the [rule components endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rule-components.html) on Experience League."
      operationId: retrieveRuleComponentOrigin
      parameters:
      - name: RULE_COMPONENT_ID
        in: path
        description: The ID of the rule component whose origin you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the rule component's origin.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ruleComponentsOriginLookupResponse'
  /rule_components/{RULE_COMPONENT_ID}/rules:
    get:
      tags:
      - Rule components
      summary: List the rules that utilize a rule component
      description: ">**NOTE**: For more information on using this operation, see the [rule components endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/rule-components.html) on Experience League."
      operationId: listRuleComponentsRelatedRules
      parameters:
      - name: RULE_COMPONENT_ID
        in: path
        description: The ID of the rule component whose related rules you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of related rules attached the rule component.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ruleComponentsRulesListResponse'
  /notes/{NOTE_ID}:
    get:
      tags:
      - Notes
      summary: Retrieve a note
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: retrieveNote
      parameters:
      - name: NOTE_ID
        in: path
        description: The ID of the note you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the note.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/notesLookupResponse'
  /properties/{PROPERTY_ID}/notes:
    get:
      tags:
      - Properties
      - Notes
      summary: List a property's notes
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: listPropertyNotes
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property whose notes you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of notes belonging to the specified property.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/propertiesNotesListResponse'
    post:
      tags:
      - Properties
      - Notes
      summary: Create a note for a property
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: createPropertyNote
      parameters:
      - name: PROPERTY_ID
        in: path
        description: The ID of the property that you want to create a note for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/propertiesNotesCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created note.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/propertiesNotesCreateResponse'
      x-codegen-request-body-name: body
  /data_elements/{DATA_ELEMENT_ID}/notes:
    get:
      tags:
      - Data elements
      - Notes
      summary: List a data element's notes
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: listDataElementNotes
      parameters:
      - name: DATA_ELEMENT_ID
        in: path
        description: The ID of the data element whose notes you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of notes belonging to the specified data element.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/dataElementsNotesListResponse'
    post:
      tags:
      - Data elements
      - Notes
      summary: Create a note for a data element
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: createNote
      parameters:
      - name: DATA_ELEMENT_ID
        in: path
        description: The ID of the data element that you want to create a note for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/dataElementsNotesCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created note.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/dataElementsNotesCreateResponse'
      x-codegen-request-body-name: body
  /secrets/{SECRET_ID}/notes:
    get:
      tags:
      - Secrets
      - Notes
      summary: List a secret's notes
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: listSecretNotes
      parameters:
      - name: SECRET_ID
        in: path
        description: The ID of the secret whose notes you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of notes belonging to the specified secret.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/secretsNotesListResponse'
    post:
      tags:
      - Secrets
      - Notes
      summary: Create a note for a secret
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: createSecretNote
      parameters:
      - name: SECRET_ID
        in: path
        description: The ID of the secret that you want to create a note for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/secretsNotesCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created note.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/secretsNotesCreateResponse'
      x-codegen-request-body-name: body
  /secrets/{SECRET_ID}/data_elements:
    get:
      tags:
      - Secrets
      summary: List the data elements that reference a secret
      description: ">**NOTE**: For more information on using this operation, see the [secrets endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/secrets.html) on Experience League."
      operationId: listSecretDataElements
      parameters:
      - name: SECRET_ID
        in: path
        description: The ID of the secret whose data elements you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: dirty
        in: query
        description: Filter by `dirty` (whether the resource contains changes that haven't been pushed to a library).
        schema:
          type: string
      - name: enabled
        in: query
        description: Filter by `enabled`.
        schema:
          type: string
      - name: name
        in: query
        description: Filter by `name`.
        schema:
          type: string
      - name: origin_id
        in: query
        description: Filter by `origin_id`.
        schema:
          type: string
      - name: published
        in: query
        description: Filter by `published` status.
        schema:
          type: string
      - name: published_at
        in: query
        description: Filter by `published_at` timestamp.
        schema:
          type: string
      - name: revision_number
        in: query
        description: Filter by `revision_number`.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of data elements that use the specified secret.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/secretsDataElementsListResponse'
  /secrets/{SECRET_ID}/environment:
    get:
      tags:
      - Secrets
      summary: Retrieve a secret's environment
      description: ">**NOTE**: For more information on using this operation, see the [secrets endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/secrets.html) on Experience League."
      operationId: retrieveSecretEnvironment
      parameters:
      - name: SECRET_ID
        in: path
        description: The ID of the secret whose environment you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the environment that the secret is associated with.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/secretsLookupEnvironmentResponse'
  /secrets/{SECRET_ID}/property:
    get:
      tags:
      - Secrets
      summary: Retrieve a secret's property
      description: ">**NOTE**: For more information on using this operation, see the [secrets endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/secrets.html) on Experience League."
      operationId: retrieveSecretProperty
      parameters:
      - name: SECRET_ID
        in: path
        description: The ID of the secret whose property you want to retrieve.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the property that owns the secret.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/secretsPropertyLookupResponse'
  /extensions/{EXTENSION_ID}/notes:
    get:
      tags:
      - Extensions
      - Notes
      summary: List an extension's notes
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: listExtensionNotes
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension whose notes you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns an array of notes that are attached to the specified extension.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsNotesListResponse'
    post:
      tags:
      - Extensions
      - Notes
      summary: Create a note for an extension
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: createExtensionNote
      parameters:
      - name: EXTENSION_ID
        in: path
        description: The ID of the extension that you want to create a note for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/extensionsNotesCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created note.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/extensionsNotesCreateResponse'
      x-codegen-request-body-name: body
  /libraries/{LIBRARY_ID}/notes:
    get:
      tags:
      - Libraries
      - Notes
      summary: List a library's notes
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: listLibraryNotes
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library whose notes you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of notes attached them library.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesNotesListResponse'
    post:
      tags:
      - Libraries
      - Notes
      summary: Create a note for a library
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: createLibraryNote
      parameters:
      - name: LIBRARY_ID
        in: path
        description: The ID of the library that you want to create a note for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/librariesNotesCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created note.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/librariesNotesCreateResponse'
      x-codegen-request-body-name: body
  /rules/{RULE_ID}/notes:
    get:
      tags:
      - Rules
      - Notes
      summary: List a rule's notes
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: listRuleNotes
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule whose notes you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of notes attached the rule.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesNotesListResponse'
    post:
      tags:
      - Rules
      - Notes
      summary: Create a note for a rule
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: createNoteRule
      parameters:
      - name: RULE_ID
        in: path
        description: The ID of the rule that you want to create a note for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/rulesNotesCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created note.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/rulesNotesCreateResponse'
      x-codegen-request-body-name: body
  /rule_components/{RULE_COMPONENT_ID}/notes:
    get:
      tags:
      - Rule components
      - Notes
      summary: List a rule component's notes
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: listRuleComponentNotes
      parameters:
      - name: RULE_COMPONENT_ID
        in: path
        description: The ID of the rule component whose notes you want to list.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: text
        in: query
        description: Filter by `text`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns a list of notes attached the rule component.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ruleComponentsNotesListResponse'
    post:
      tags:
      - Rule components
      - Notes
      summary: Create a note for a rule component
      description: ">**NOTE**: For more information on using this operation, see the [notes endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/notes.html) on Experience League."
      operationId: createRuleComponentNote
      parameters:
      - name: RULE_COMPONENT_ID
        in: path
        description: The ID of the rule component that you want to create a note for.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ruleComponentsNotesCreatePayload'
        required: true
      responses:
        "201":
          x-summary: "Success"
          description: A successful response returns the details of the newly created note.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ruleComponentsNotesCreateResponse'
      x-codegen-request-body-name: body
  /audit_events:
    get:
      tags:
      - Audit events
      summary: List audit events
      description: ">**NOTE**: For more information on using this operation, see the [audit events endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/audit-events.html) on Experience League."
      operationId: listAuditEvents
      parameters:
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      - name: "page[size]"
        in: query
        description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
        schema:
          maximum: 100
          type: integer
          default: 25
      - name: "page[number]"
        in: query
        description: |-
          The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
          >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
        schema:
          type: integer
          default: 1
      - name: created_at
        in: query
        description: Filter by `created_at` timestamp.
        schema:
          type: string
      - name: updated_at
        in: query
        description: Filter by `updated_at` timestamp.
        schema:
          type: string
      - name: type_of
        in: query
        description: Filter by `type`.
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: "A successful response returns an array of audit events, including their IDs and attributes."
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/auditEventsListResponse'
  /audit_events/{EVENT_ID}:
    get:
      tags:
      - Audit events
      summary: Retrieve an audit event
      description: ">**NOTE**: For more information on using this operation, see the [audit events endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/audit-events.html) on Experience League."
      operationId: retrieveAuditEvent
      parameters:
      - name: EVENT_ID
        in: path
        description: The ID of the audit event you want to look up.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the audit event.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/auditEventsLookupResponse'
  /profile:
    get:
      tags:
      - Profiles
      summary: Retrieve the details of the currently logged-in user
      description: ">**NOTE**: For more information on using this operation, see the [profile endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/profile.html) on Experience League."
      operationId: retrieveUserDetails
      parameters:
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
        required: true
        schema:
          type: string
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the details of the profile.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/profilesLookupResponse'
  /search:
    post:
      tags:
      - Search
      summary: Perform a search
      description: |-
        The payload of a search request must contain a `query` object. This query object must contain at least one property whose key is a dot-notation path to the attribute being queried (e.g. `attributes.name`).
        >**NOTE**: For detailed information on how to construct a search payload, see the [search endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/search.html) on Experience League.
      operationId: createSearch
      parameters:
      - name: Authorization
        in: header
        description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: x-gw-ims-org-id
        in: header
        description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/searchPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: A successful response returns the results of the search query.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/searchResponse'
      x-codegen-request-body-name: body
components:
  schemas:
    dataCreate:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - attributes
          - type
          type: object
          properties:
            attributes:
              type: object
              properties: {}
              description: The attributes for the resource being created.
            type:
              type: string
              description: The type of resource being created.
              enum:
              - app_configurations
              - audit_events
              - builds
              - callbacks
              - companies
              - data_elements
              - environments
              - extensions
              - extension_packages
              - hosts
              - libraries
              - notes
              - properties
              - rules
              - rule_components
              - secrets
          description: Contains the attributes and type for the resource being created.
    dataCreateNoType:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - attributes
          type: object
          properties:
            attributes:
              type: object
              properties: {}
              description: The attributes for the resource being created.
          description: Contains the attributes for the resource being created.
    dataUpdateNoType:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - attributes
          type: object
          properties:
            attributes:
              type: object
              properties: {}
              description: The attributes for the resource being updated.
          description: Contains the attributes for the resource being updated.
    dataCreateWithRelationships:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties: {}
              description: The attributes for the resource being created.
            relationships:
              type: object
              description: The relationships for the resource being created.
            type:
              type: string
              description: The type of resource being created.
              enum:
              - app_configurations
              - audit_events
              - builds
              - callbacks
              - companies
              - data_elements
              - environments
              - extensions
              - extension_packages
              - hosts
              - libraries
              - notes
              - properties
              - rules
              - rule_components
              - secrets
          description: "Contains the attributes, relationships, and type for the resource being created."
    dataUpdate:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - attributes
          - id
          - type
          type: object
          properties:
            attributes:
              type: object
              properties: {}
              description: The modified attributes for the resource being updated.
            id:
              type: string
              description: The ID of resource being updated.
            type:
              type: string
              description: The type of resource being updated.
              enum:
              - app_configurations
              - audit_events
              - builds
              - callbacks
              - companies
              - data_elements
              - environments
              - extensions
              - extension_packages
              - hosts
              - libraries
              - notes
              - properties
              - rules
              - rule_components
              - secrets
          description: Contains the attributes and type for the resource being updated.
    dataUpdateExtensionPackage:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - id
          - meta
          - type
          type: object
          properties:
            id:
              type: string
              description: The ID of extension package being updated.
            type:
              type: string
              description: Must be set to `extension_packages`.
            meta:
              type: object
              properties:
                action:
                  type: string
                  description: "If this property is included with a value of `revise`, the call creates a new revision for the resource instead of overwriting the current revision."
              description: |-
                If this property is included with an `action` property set to `release_private`, the call releases the extension privately.


                If this property is included with an `action` property set to `discontinue`, the call discontinues the extension package.
          description: Contains info on the extension package being updated and the
            action being performed.
    secretsUpdatePayload:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - attributes
          - id
          - meta
          - type
          type: object
          properties:
            attributes:
              type: object
              properties:
                type_of:
                  type: string
                  description: The secret's type.
              description: Contains the `type_of` attribute of the secret being retried
                or tested.
            meta:
              required:
              - action
              type: object
              properties:
                action:
                  type: string
                  description: "If this property is set to `retry`, the call retries the secret. If this property is set to `test` and the secret in question is a `succeeded` `oauth` type, this call performs an exchange with the authorization service."
              description: Must be provided with an `action` that determines the action
                to be taken on the secret.
            id:
              type: string
              description: The ID of the secret being acted upon.
            type:
              type: string
              description: Must be set to `secrets`.
      example:
        data:
          attributes:
            type_of: oauth2
          meta:
            action: test
          id: SE6c15a7a64f9041b5985558ed3e19a449
          type: secrets
    dataUpdateLibrary:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - id
          - type
          type: object
          properties:
            id:
              type: string
              description: The ID of library being updated.
            type:
              type: string
              description: Must be set to `libraries`.
            attributes:
              type: object
              properties: {}
              description: The modified attributes for the resource being updated.
            meta:
              type: object
              properties:
                action:
                  type: string
                  description: "The library transition action. The available actions for a library depend on its current publishing state. See the API guide on [transitioning a library](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html#transition) for details on the available actions for each library state."
              description: "To transition the library between states, the payload must include a `meta` object, containing a single `action` property whose value represents the specific transition action. The available actions for a library depend on its current publishing state. See the API guide on [transitioning a library](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/libraries.html#transition) for details on the available actions for each library state."
          description: Contains info on the library being updated and the action being performed.
    dataUpdateWithMeta:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - attributes
          - id
          - meta
          - type
          type: object
          properties:
            attributes:
              type: object
              properties: {}
              description: The modified attributes for the resource being updated.
            meta:
              type: object
              properties:
                action:
                  type: string
                  description: "If this property is included with a value of `revise`, the call creates a new revision for the resource instead of overwriting the current revision."
              description: "If this property is included with an `action` property set to `revise`, the call creates a new revision for the resource instead of overwriting the current revision."
            id:
              type: string
              description: The ID of resource being updated.
            type:
              type: string
              description: The type of resource being updated.
              enum:
              - app_configurations
              - audit_events
              - builds
              - callbacks
              - companies
              - data_elements
              - environments
              - extensions
              - extension_packages
              - hosts
              - libraries
              - notes
              - properties
              - rules
              - rule_components
              - secrets
          description: Contains the attributes and type for the resource being updated.
    buildsUpdatePayload:
      required:
      - data
      type: object
      properties:
        data:
          required:
          - id
          - meta
          - type
          type: object
          properties:
            id:
              type: string
              description: The ID of the build being republished.
            type:
              type: string
              description: Must be set to `builds`.
            meta:
              type: object
              properties:
                action:
                  type: string
                  description: "If this property is included with a value of `republish`, the call republishes the build."
              description: "If this property is included with an `action` property set to `republish`, the call republishes the build."
          description: Contains the attributes and type for the build being republished.
      example:
        data:
          id: BLb408c04c20ba4a82b6df496969a99781
          type: builds
          meta:
            action: republish
    dataLookup:
      type: object
      properties:
        data:
          type: object
          properties: {}
          description: Contains the details of the resource.
    dataList:
      type: object
      properties:
        data:
          type: array
          description: Contains the results from the listing call.
          items:
            type: object
            properties: {}
    metaList:
      type: object
      properties:
        meta:
          type: object
          properties:
            pagination:
              type: object
              properties:
                current_page:
                  type: integer
                  description: The current page of the response.
                next_page:
                  type: integer
                  description: The next page of the response.
                prev_page:
                  type: integer
                  description: The previous page of the response.
                total_pages:
                  type: integer
                  description: The total number of pages in the response.
                total_count:
                  type: integer
                  description: The total number of results in the response.
              description: Contains pagination information about the list response.
          description: Contains a `pagination` object that provides pagination information about the list response.
    appConfigurationsAttributes:
      type: object
      properties:
        name:
          type: string
          description: The name of the app configuration.
        app_id:
          type: string
          description: The third-party ID for the app this configuration is built
            for.
        platform:
          type: string
          description: "The platform for the app configuration, either `web` or `mobile`."
        messaging_service:
          type: string
          description: "The messaging service for the configuration, such as Appleâ€™s `apns` or Googleâ€™s `fcm`. This value determines which key types can be used."
        key_type:
          type: string
          description: "The specific protocol supported by the `messaging_service` vendor. This value determines the definition of the `push_credential` object, which is only used by Adobe services and not included in API responses."
        push_credential:
          type: object
          properties: {}
          description: "An object that stores the credentials based on the specified protocol (`key_type`). The credential is encrypted at rest. This field is not normally decrypted or included in API responses, as only Adobe services can receive a response containing a decrypted `push_credential`."
    appConfigurationUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/appConfigurationsAttributes'
    appConfigurationsCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/appConfigurationsAttributes'
    callbacksAttributes:
      type: object
      properties:
        subscriptions:
          type: array
          description: Lists the audit event types that this callback is subscribed to.
          items:
            type: string
        url:
          type: string
          description: The URL that the callback will send messages to.
    callbacksUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataUpdate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/callbacksAttributes'
    callbacksCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreateNoType'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/callbacksAttributes'
    extensionsCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreateWithRelationships'
      - type: object
        properties:
          data:
            required:
            - relationships
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/extensionsAttributes'
              relationships:
                type: object
                allOf:
                - $ref: '#/components/schemas/extensionsRelationships'
    ruleComponentsCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreateWithRelationships'
      - type: object
        properties:
          data:
            required:
            - attributes
            - relationships
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/ruleComponentsCreateAttributes'
              relationships:
                type: object
                allOf:
                - $ref: '#/components/schemas/ruleComponentsRelationships'
    secretsCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreateWithRelationships'
      - type: object
        properties:
          data:
            required:
            - attributes
            - relationships
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/secretsAttributes'
              relationships:
                type: object
                allOf:
                - $ref: '#/components/schemas/secretsRelationships'
    environmentsUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreateWithRelationships'
      - type: object
        properties:
          data:
            required:
            - attributes
            - relationships
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/environmentsUpdateAttributes'
              relationships:
                type: object
                allOf:
                - $ref: '#/components/schemas/environmentsRelationships'
    environmentsCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreateWithRelationships'
      - type: object
        properties:
          data:
            required:
            - attributes
            - relationships
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/environmentsAttributes'
              relationships:
                type: object
                allOf:
                - $ref: '#/components/schemas/environmentsRelationships'
    notesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/notesAttributes'
    propertiesNotesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/notesCreatePayload'
    librariesNotesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/notesCreatePayload'
    rulesNotesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/notesCreatePayload'
    extensionsNotesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/notesCreatePayload'
    secretsNotesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/notesCreatePayload'
    dataElementsNotesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/notesCreatePayload'
    ruleComponentsNotesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/notesCreatePayload'
    rulesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/rulesCreateAttributes'
    librariesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/librariesAttributes'
    hostsUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/hostsAttributes'
    hostsCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/hostsCreateAttributes'
    librariesUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataUpdateLibrary'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/librariesAttributes'
    extensionsUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataUpdateWithMeta'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/extensionsAttributes'
    rulesUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataUpdateWithMeta'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/rulesAttributes'
    dataElementsUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataUpdateWithMeta'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/dataElementsAttributes'
    dataElementsCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreateWithRelationships'
      - type: object
        properties:
          data:
            required:
            - attributes
            - relationships
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/dataElementsCreateAttributes'
              relationships:
                type: object
                allOf:
                - $ref: '#/components/schemas/dataElementsRelationships'
    propertiesCreatePayload:
      allOf:
      - $ref: '#/components/schemas/dataCreate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/propertiesAttributes'
    ruleComponentsUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataUpdate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/ruleComponentsAttributes'
    propertiesUpdatePayload:
      allOf:
      - $ref: '#/components/schemas/dataUpdate'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
                allOf:
                - $ref: '#/components/schemas/propertiesAttributes'
    propertiesAttributes:
      type: object
      properties:
        name:
          type: string
          description: The name of the property.
        platform:
          type: string
          description: "The platform for the property, either `web` or `mobile`."
        development:
          type: boolean
          description: Indicates whether this property is in development.
        domains:
          type: array
          description: A list of domains associated with the property. This field is **required** when the property's `platform` attribute is set to `web`.
          items:
            type: string
        privacy:
          type: string
          description: A privacy-related category for the property.
        rule_component_sequencing_enabled:
          type: boolean
          description: Indicates whether rule component sequencing is enabled for the property.
        ssl_enabled:
          type: boolean
          description: Indicates whether Secure Sockets Layer (SSL) is enabled for the property.
        undefined_vars_return_empty:
          type: boolean
          description: Indicates whether missing data elements return an empty string on this property.
    createPropertyPayload:
      allOf:
      - $ref: '#/components/schemas/propertiesCreatePayload'
      - type: object
        properties:
          data:
            type: object
            properties:
              attributes:
                type: object
    relatedProperties:
      type: object
      properties:
        properties:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related properties for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related properties for the resource.
          description: Contains a link to the related properties for the resource.
    relatedCallbacks:
      type: object
      properties:
        callbacks:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related callbacks for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related callbacks for the resource.
          description: Contains a link to the related callbacks for the resource.
    relatedHosts:
      type: object
      properties:
        hosts:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related hosts for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related hosts for the resource.
          description: Contains a link to the related hosts for the resource.
    relatedBuilds:
      type: object
      properties:
        builds:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related builds for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related builds for the resource.
          description: Contains a link to the related builds for the resource.
    relatedEnvironments:
      type: object
      properties:
        environments:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related environments for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related environments for the resource.
          description: Contains a link to the related environments for the resource.
    relatedLibraries:
      type: object
      properties:
        libraries:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related libraries for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related libraries for the resource.
          description: Contains a link to the related libraries for the resource.
    relatedRevisions:
      type: object
      properties:
        revisions:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related revisions for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related revisions for the resource.
          description: Contains a link to the related revisions for the resource.
    relatedDataElements:
      type: object
      properties:
        data_elements:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related data elements for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related data elements for the resource.
          description: Contains a link to the related data elements for the resource.
    relatedDataElementsWithSelf:
      type: object
      properties:
        data_elements:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related data elements for the resource.
                self:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the relationship object for the resource's related data elements.
              description: Contains links that can be used in a subsequent fetch calls.
          description: Contains a link to the related data elements for the resource.
    relatedExtensionsWithSelf:
      type: object
      properties:
        extensions:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related extensions for the resource.
                self:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the relationship object for the resource's related extensions.
              description: Contains links that can be used in a subsequent fetch calls.
          description: Contains a link to the related extensions for the resource.
    relatedExtensions:
      type: object
      properties:
        extensions:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related extensions for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related extensions for the resource.
          description: Contains a link to the related extensions for the resource.
    relatedRuleComponents:
      type: object
      properties:
        rules:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related rule components for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related rule components for the resource.
          description: Contains a link to the related rule components for the resource.
    relatedRules:
      type: object
      properties:
        rules:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related rules for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related rules for the resource.
          description: Contains a link to the related rules for the resource.
    relatedRulesWithSelf:
      type: object
      properties:
        rules:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related rules for the resource.
                self:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the relationship object for the resource's related rules.
              description: Contains links that can be used in a subsequent fetch calls.
          description: Contains a link to the related rules for the resource.
    relatedNotes:
      type: object
      properties:
        notes:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related notes for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related notes for the resource.
          description: Contains a link to the related notes for the resource.
    relatedCompany:
      type: object
      properties:
        company:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related company.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related company.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the company.
                type:
                  type: string
                  description: The resource type for the company (`companies`).
              description: Contains further information about the related company.
          description: Contains information about the company that owns the resource.
    relatedLastBuild:
      type: object
      properties:
        last_build:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the build.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the build.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the build.
                type:
                  type: string
                  description: The resource type for the build (`builds`).
              description: Contains further information about the build.
          description: Contains information about the last build for a library.
    relatedUpstreamLibrary:
      type: object
      properties:
        upstream_library:
          type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the library.
                type:
                  type: string
                  description: The resource type for the library (`libraries`).
              description: Contains basic information about the upstream library.
          description: "Contains information about the [upstream library](https://experienceleague.adobe.com/docs/experience-platform/tags/publish/publishing-flow.html?lang=en#upstream) for this library."
    relatedOrigin:
      type: object
      properties:
        origin:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related origin.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related origin.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the origin.
                type:
                  type: string
                  description: The resource type for the origin.
              description: Contains further information about the related origin.
          description: Contains information about the resource's origin. The origin is the previous resource that was revised to make this resource.
    relatedEnvironment:
      type: object
      properties:
        environment:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related environment.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related environment.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the environment.
                type:
                  type: string
                  description: The resource type for the environment (`environments`).
              description: Contains further information about the related environment.
          description: Contains information about the environment that this resource is active under.
    relatedEnvironmentWithMeta:
      allOf:
      - $ref: '#/components/schemas/relatedEnvironment'
      - type: object
        properties:
          environment:
            type: object
            properties:
              meta:
                type: object
                properties:
                  stage:
                    type: string
                    description: The publishing flow stage for the environment.
                description: Contains meta information about the environment.
    relatedExtension:
      type: object
      properties:
        extension:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related extension.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related extension.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the extension.
                type:
                  type: string
                  description: The resource type for the extension (`extensions`).
              description: Contains further information about the related extension.
          description: Contains information about the extension that provides the resource.
    relatedExtensionPackage:
      type: object
      properties:
        extension_package:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the extension package.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the extension package.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the extension package.
                type:
                  type: string
                  description: The resource type for the extension package (`extension_packages`).
              description: Contains further information about the extension package.
          description: Contains information about the related package for the extension.
    relatedUpdatedWithExtension:
      type: object
      properties:
        updated_with_extension:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related extension.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related extension.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the extension.
                type:
                  type: string
                  description: The resource type for the extension (`extensions`).
              description: Contains further information about the related extension.
          description: "Contains information about the extension that updated the resource, if applicable."
    relatedUpdatedWithExtensionPackage:
      type: object
      properties:
        updated_with_extension_package:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related extension.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related extension.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the extension.
                type:
                  type: string
                  description: The resource type for the extension (`extensions`).
              description: Contains further information about the related extension.
          description: "Contains information about the extension that updated the resource, if applicable."
    relatedProperty:
      type: object
      properties:
        property:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related property for the resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related property for the resource.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the property.
                type:
                  type: string
                  description: The resource type for the property (`properties`).
              description: Contains further information about the related property.
          description: Contains details about the property that owns the resource.
    relatedEntity:
      type: object
      properties:
        entity:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related entity.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related entity.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the entity.
                type:
                  type: string
                  description: The resource type for the entity.
              description: Contains further information about the related entity.
          description: Contains details about the entity associated with the audit event.
    relatedResource:
      type: object
      properties:
        resource:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the related resource.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the related resource.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the resource.
                type:
                  type: string
                  description: The resource type.
              description: Contains further information about the related resource.
          description: Contains a link to the resource that that the note is attached to.
    relatedLibrary:
      type: object
      properties:
        library:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the library.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the library.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the library.
                type:
                  type: string
                  description: The resource type for the library (`libraries`).
              description: Contains further information about the library.
          description: Contains a link to the library that is assigned to this environment.
    relatedHost:
      type: object
      properties:
        host:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the host.
                self:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the relationship object for the host.
              description: Contains a `related` link that can be used in a subsequent API call to fetch the host.
            data:
              type: object
              properties:
                id:
                  type: string
                  description: The unique ID of the host.
                type:
                  type: string
                  description: The resource type for the host (`hosts`).
              description: Contains further information about the host.
          description: Contains a link to the host that is assigned to this environment.
    basicResourceProperties:
      type: object
      properties:
        id:
          type: string
          description: The unique ID for the resource.
        type:
          type: string
          description: The resource type.
    appConfigurationsEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the app configuration was created in the system.
              updated_at:
                type: string
                description: A timestamp of when the app configuration was last updated.
              app_id:
                type: string
                description: The third-party ID for the app this configuration is built for.
              name:
                type: string
                description: The name of the app configuration.
              platform:
                type: string
                description: "The platform for the app configuration, either `web`  or `mobile`."
              messaging_service:
                type: string
                description: "The messaging service for the configuration, such as  Appleâ€™s `apns` or Googleâ€™s `fcm`. This value determines which  key types can be used."
              key_type:
                type: string
                description: "The specific protocol supported by the `messaging_service`  vendor. This value determines the definition of the `push_credential`  object, which is only used by Adobe services and not included  in API responses."
            description: Contains the attributes for the app configuration.
          relationships:
            type: object
            description: Provides information about other entities that are related to this app configuration.
            allOf:
            - $ref: '#/components/schemas/relatedCompany'
          links:
            type: object
            properties:
              company:
                type: string
                description: A link to the company that owns the app configuration.
              self:
                type: string
                description: A link to the app configuration itself.
            description: Contains links related to the app configuration which can be used in subsequent fetch requests.
    propertiesEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the property was created in the system.
              enabled:
                type: boolean
                description: Indicates whether this property is enabled.
              name:
                type: string
                description: The name of the property.
              updated_at:
                type: string
                description: A timestamp of when the property was last updated.
              platform:
                type: string
                description: "The platform for the property, either `web` or `mobile`."
              development:
                type: boolean
                description: Indicates whether this property is in development.
              token:
                type: string
                description: |-
                  A unique token for the property.

                  When a build is pushed to an Adobe-managed host (`akamai`), this token is used to identify the property within the library's folder structure. This also prevent's the property's `id` value from being unnecessarily exposed. This also applies to `sftp` hosts so that libraries are constructed in the same manner.
              domains:
                type: array
                description: A list of domains associated with the property.
                items:
                  type: string
              undefined_vars_return_empty:
                type: boolean
                description: Indicates whether missing data elements return an empty string on this property.
              rule_component_sequencing_enabled:
                type: boolean
                description: Indicates whether rule component sequencing is enabled on this property.
            description: Contains the property's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this property.
            allOf:
            - $ref: '#/components/schemas/relatedCompany'
            - $ref: '#/components/schemas/relatedCallbacks'
            - $ref: '#/components/schemas/relatedHosts'
            - $ref: '#/components/schemas/relatedEnvironments'
            - $ref: '#/components/schemas/relatedLibraries'
            - $ref: '#/components/schemas/relatedDataElements'
            - $ref: '#/components/schemas/relatedExtensions'
            - $ref: '#/components/schemas/relatedRules'
            - $ref: '#/components/schemas/relatedNotes'
          links:
            type: object
            properties:
              company:
                type: string
                description: A link to the company that owns the property.
              data_elements:
                type: string
                description: A link to the data elements employed by the property.
              environments:
                type: string
                description: A link to the environments employed by the property.
              extensions:
                type: string
                description: A link to the extensions employed by the property.
              rules:
                type: string
                description: A link to the rules employed by the property.
              self:
                type: string
                description: A link to the property itself.
            description: Contains links related to the property which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              rights:
                type: array
                description: Lists the rights that are enabled for the property.
                items:
                  type: string
            description: Contains meta information about the property.
    dataElementsAttributes:
      type: object
      properties:
        name:
          type: string
          description: The name of the data element.
        delegate_descriptor_id:
          type: string
          description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the data element."
        clean_text:
          type: boolean
          description: Indicates whether the data element removes leading and trailing whitespace characters in text. This setting also converts any instances of two or more consecutive spaces in the middle of the text with just one space each.
        default_value:
          type: object
          description: The default value of the data element. Returns `null` if no default value exists.
        enabled:
          type: boolean
          description: Indicates whether this data element is enabled.
        force_lower_case:
          type: boolean
          description: Indicates whether the data element converts string values to lowercase.
        settings:
          type: string
          description: A custom settings JSON object represented as a string.
        storage_duration:
          type: string
          description: |-
            The duration that the data element's value will be persisted. This attribute is set to `null` by default, meaning the data element value will not persist at all. To implement storage, the following options are available:

            * `pageview`: Data element values are held in a JavaScript variable inside the library. If the user navigates to a new page or refreshes the page, the value is discarded. * `session`: Data element values are persisted to session storage. When the browser tab is closed, the value is discarded. * `visitor`: Data element values are persisted to local storage. The value will be persisted indefinitely.
          enum:
          - pageview
          - session
          - visitor
    dataElementsCreateAttributes:
      allOf:
      - $ref: '#/components/schemas/dataElementsAttributes'
    dataElementsRelationships:
      required:
      - extension
      type: object
      properties:
        extension:
          required:
          - data
          type: object
          properties:
            data:
              required:
              - id
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the extension.
                type:
                  type: string
                  description: The resource type for the extension (`extensions`).
              description: Contains the basic information about the extension.
          description: Establishes the required relationship between the data element and the extension that provides it.
    secretsRelationships:
      required:
      - environment
      type: object
      properties:
        environment:
          required:
          - data
          type: object
          properties:
            data:
              required:
              - id
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the environment.
                type:
                  type: string
                  description: The resource type for the environment (`environments`).
              description: Contains the basic information about the environment.
          description: Establishes the required relationship between the secret and the environment it is associated with.
    dataElementsEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the data element was created in the system.
              deleted_at:
                type: string
                description: A timestamp of when the data element was deleted from the system. Returns `null` if the data element still exists.
              dirty:
                type: boolean
                description: Indicates whether changes have been made to the data element that have not been pushed to a library.
              enabled:
                type: boolean
                description: Indicates whether this data element is enabled.
              name:
                type: string
                description: The name of the data element.
              published:
                type: boolean
                description: Indicates whether this data element has been published as part of a build.
              published_at:
                type: string
                description: A timestamp of when the data element was published. Returns `null` if `published` is set to `false`.
              updated_at:
                type: string
                description: A timestamp of when the data element was last updated.
              clean_text:
                type: boolean
                description: Indicates whether the data element removes leading and trailing whitespace characters in text. This setting also converts any instances of two or more consecutive spaces in the middle of the text with just one space each.
              default_value:
                type: object
                description: The default value of the data element. Returns `null` if no default value exists.
              delegate_descriptor_id:
                type: string
                description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html)  for the data element."
              force_lower_case:
                type: boolean
                description: Indicates whether the data element converts string values to lowercase.
              settings:
                type: string
                description: A custom settings JSON object represented as a string.
              storage_duration:
                type: string
                description: |-
                  The duration that the data element's value will be persisted. This attribute is set to `null` by default, meaning the data element value will not persist at all. To implement storage, the following options are available:

                  * `pageview`: Data element values are held in a JavaScript variable inside the library. If the user navigates to a new page or refreshes the page, the value is discarded. * `session`: Data element values are persisted to session storage. When the browser tab is closed, the value is discarded. * `visitor`: Data element values are persisted to local storage. The value will be persisted indefinitely.
                enum:
                - pageview
                - session
                - visitor
            description: Contains the data element's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this data element.
            allOf:
            - $ref: '#/components/schemas/relatedLibraries'
            - $ref: '#/components/schemas/relatedRevisions'
            - $ref: '#/components/schemas/relatedNotes'
            - $ref: '#/components/schemas/relatedProperty'
            - $ref: '#/components/schemas/relatedOrigin'
            - $ref: '#/components/schemas/relatedExtension'
            - $ref: '#/components/schemas/relatedUpdatedWithExtensionPackage'
            - $ref: '#/components/schemas/relatedUpdatedWithExtension'
          links:
            type: object
            properties:
              property:
                type: string
                description: A link to the property that owns the data element.
              origin:
                type: string
                description: A link to the origin of the data element. The origin is the data element that was updated to create this data element.
              self:
                type: string
                description: A link to the data element itself.
              extension:
                type: string
                description: A link to the extension that defines the data element's type.
            description: Contains links related to the data element which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              latest_revision_number:
                type: integer
                description: The latest revision number for the data element.
            description: Contains meta information about the data element.
    extensionsAttributes:
      type: object
      properties:
        delegate_descriptor_id:
          type: string
          description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the extension."
        enabled:
          type: boolean
          description: Indicates whether this extension is enabled.
        settings:
          type: string
          description: A custom settings JSON object represented as a string.
    extensionsRelationships:
      required:
      - extension_package
      type: object
      properties:
        extension_package:
          required:
          - data
          type: object
          properties:
            data:
              required:
              - id
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the extension package.
                type:
                  type: string
                  description: The resource type for the extension package (`extension_packages`).
              description: Provides the basic information about the extension package.
          description: Describes the extension package that defines the extension's capabilities.
    extensionsEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the extension was created in the system.
              deleted_at:
                type: string
                description: A timestamp of when the extension was deleted from the system. Returns `null` if the extension still exists.
              dirty:
                type: boolean
                description: Indicates whether changes have been made to the extension that have not been pushed to a library.
              enabled:
                type: boolean
                description: Indicates whether this extension is enabled.
              name:
                type: string
                description: The name of the extension.
              published:
                type: boolean
                description: Indicates whether this extension has been published.
              published_at:
                type: string
                description: A timestamp of when the extension was published. Returns `null` if `published` is set to `false`.
              revision_number:
                type: integer
                description: The revision number for the extension.
              updated_at:
                type: string
                description: A timestamp of when the extension was last updated.
              delegate_descriptor_id:
                type: string
                description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html)  for the extension."
              display_name:
                type: string
                description: A display name for the extension.
              review_status:
                type: string
                description: The current review status of the extension.
              version:
                type: string
                description: The version number of the extension.
              settings:
                type: string
                description: A custom settings JSON object represented as a string.
            description: Contains the extension's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this extension.
            allOf:
            - $ref: '#/components/schemas/relatedLibraries'
            - $ref: '#/components/schemas/relatedRevisions'
            - $ref: '#/components/schemas/relatedNotes'
            - $ref: '#/components/schemas/relatedProperty'
            - $ref: '#/components/schemas/relatedOrigin'
            - $ref: '#/components/schemas/relatedUpdatedWithExtensionPackage'
            - $ref: '#/components/schemas/relatedExtensionPackage'
          links:
            type: object
            properties:
              property:
                type: string
                description: A link to the property that owns the extension.
              origin:
                type: string
                description: A link to the origin of the extension. The origin is the extension that was updated to create this extension.
              self:
                type: string
                description: A link to the extension itself.
              extension_package:
                type: string
                description: A link to the extension package which defines the additional capabilities that the extension makes available.
              latest_extension_package:
                type: string
                description: A link to the latest extension package which defines the additional capabilities that the extension makes available.
            description: Contains links related to the extension which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              latest_revision_number:
                type: integer
                description: The latest revision number for the extension.
            description: Contains meta information about the extension.
    environmentsAttributes:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the environment.
        archive:
          type: boolean
          description: Indicates whether the environment should be archived.
        archive_passphrase:
          type: string
          description: A passphrase for the environment if `archive` is set to `true`.
        path:
          type: string
          description: The path for the environment.
        stage:
          type: string
          description: "The stage for the environment (`development`, `staging`, or `production`)."
    environmentsUpdateAttributes:
      type: object
      properties:
        name:
          type: string
          description: The name of the environment.
        archive:
          type: boolean
          description: Indicates whether the environment should be archived.
        archive_passphrase:
          type: string
          description: A passphrase for the environment if `archive` is set to `true`.
        path:
          type: string
          description: The path for the environment.
        include_debug_library:
          type: boolean
          description: Indicates whether a debug library is included for the environment.
    ruleComponentsRelationships:
      required:
      - extension
      type: object
      properties:
        extension:
          required:
          - data
          type: object
          properties:
            data:
              required:
              - id
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the extension.
                type:
                  type: string
                  description: The resource type for the extension (`extensions`).
              description: Contains basic information about the extension.
          description: Describes the extension that provides the rule component's type.
        rules:
          required:
          - data
          type: object
          properties:
            data:
              type: array
              description: Lists the basic information about the related rules.
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the extension.
                  type:
                    type: string
                    description: The resource type for the extension (`extensions`).
          description: Describes the rules that utilize the rule component.
    environmentsRelationships:
      required:
      - host
      type: object
      properties:
        host:
          required:
          - data
          type: object
          properties:
            data:
              required:
              - id
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the host.
                type:
                  type: string
                  description: The resource type for the host (`hosts`).
              description: Contains basic information about the host.
          description: Describes the host that the environment will be assigned to.
    environmentsEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              archive:
                type: boolean
                description: Indicates whether the environment is archived.
              created_at:
                type: string
                description: A timestamp of when the environment was created in the system.
              library_path:
                type: string
                description: The base path for the library that has been assigned to the environment.
              library_name:
                type: string
                description: The name of the JavaScript file that contains the library that has been assigned to the environment.
              library_entry_points:
                type: array
                description: "Contains an expanded list of all the libraries that  are built as part of this environment. Since only one library  can be built on an environment at a time, this array typically  contains the minified and unminified versions of the same library."
                items:
                  type: object
                  properties:
                    library_name:
                      type: string
                      description: The name of the JavaScript file that contains the library.
                    minified:
                      type: boolean
                      description: "Indicates whether this is the minified version of the library. The minified version of the library is significantly smaller and more efficient, and should therefore be the version that is employed on your webpage. The non-minified version contains comments and is provided for debugging purposes."
                    references:
                      type: array
                      description: "Contains the full path to the library, which is the `library_path` concatenated with the `library_name`."
                      items:
                        type: string
                    license_path:
                      type: string
                      description: "If this object represents a minified library, this attribute provides the full path to the un-minififed version."
              name:
                type: string
                description: The name of the environment.
              path:
                type: string
                description: The path for the environment.
              stage:
                type: string
                description: "The stage for the environment (`development`, `staging`,  or `production`)."
              updated_at:
                type: string
                description: A timestamp of when the environment was last updated.
              status:
                type: string
                description: The current status of the environment.
              token:
                type: string
                description: |-
                  A unique token for the environment.

                  When a build is pushed to an Adobe-managed host (`akamai`), this token is used to identify the environment within the library's folder structure. This also prevent's the environment's `id` value from being unnecessarily exposed. This also applies to `sftp` hosts so that libraries are constructed in the same manner.
            description: Contains the environment's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this environment.
            allOf:
            - $ref: '#/components/schemas/relatedLibrary'
            - $ref: '#/components/schemas/relatedBuilds'
            - $ref: '#/components/schemas/relatedHost'
            - $ref: '#/components/schemas/relatedProperty'
          links:
            type: object
            properties:
              property:
                type: string
                description: A link to the property that owns the environment.
              self:
                type: string
                description: A link to the environment itself.
            description: Contains links related to the environment which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              archive_encrypted:
                type: boolean
                description: Indicates whether the environment archive has been encrypted. An environment archive is ZIP file which can be downloaded for self-hosting purposes. An encrypted archive is one where a simple password has been applied for access control.
              script_sources:
                type: array
                description: "If `premium_cdn` has been enabled for the company that  owns this environment, this array lists the two different hosts  that the environment is associated with. One is the default host  and the other is host provided by the premium CDN."
                items:
                  type: string
            description: Contains meta information about the environment.
    hostsAttributes:
      type: object
      properties:
        name:
          type: string
          description: The name of the host.
        type_of:
          type: string
          description: "The host type, either `akamai` for an Adobe-managed host, or `sftp` for self-hosting."
        encrypted_private_key:
          type: string
          description: An encrypted private key that can be used for authentication.
        server:
          type: string
          description: The URL of the server associated with the host.
        skip_symlinks:
          type: boolean
          description: |-
            **Note**: This attribute is only available for SFTP hosts.

            By default, all SFTP hosts use symbolic links (symlinks) to reference library builds that are saved to the server. However, not all servers support the use of symlinks. When this attribute is included and set to `true`, the host uses a copy operation to update the build assets directly instead of using symlinks.
        path:
          type: string
          description: The path for the host (i.e. what comes after the `server` URL).
        port:
          type: integer
          description: The port number for the server URL.
        username:
          type: string
          description: A username associated with the host.
    hostsCreateAttributes:
      allOf:
      - $ref: '#/components/schemas/hostsAttributes'
    librariesAttributes:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the library.
    librariesEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the library was created in the system.
              name:
                type: string
                description: The name of the library.
              published_at:
                type: string
                description: A timestamp of when the library was published. Returns `null` if the library has not been published yet.
              state:
                type: string
                description: "The current state of the library within the [publishing flow](https://experienceleague.adobe.com/docs/experience-platform/tags/publish/publishing-flow.html?lang=en#state)."
              updated_at:
                type: string
                description: A timestamp of when the library was last updated.
              build_required:
                type: boolean
                description: Indicates whether changes have been made to the library that require a build to activate.
              stale:
                type: string
                description: |-
                  When present, this attribute indicates that the library has become stale.

                  A library enters a stale state when another library on the [upstream](https://experienceleague.adobe.com/docs/experience-platform/tags/publish/publishing-flow.html#upstream) has been changed and the current library needs to be rebuilt to reflect those changes. In this case, the value for the attribute would be `upstream_changed`.

                  A library may also enter a stale state if one of the extensions it uses receives an update. In this case, the value for the attribute would be `extension_upgraded`.
                enum:
                - upstream_changed
                - extension_upgraded
            description: Contains the library's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this library.
            allOf:
            - $ref: '#/components/schemas/relatedBuilds'
            - $ref: '#/components/schemas/relatedEnvironment'
            - $ref: '#/components/schemas/relatedDataElementsWithSelf'
            - $ref: '#/components/schemas/relatedExtensionsWithSelf'
            - $ref: '#/components/schemas/relatedNotes'
            - $ref: '#/components/schemas/relatedRulesWithSelf'
            - $ref: '#/components/schemas/relatedUpstreamLibrary'
            - $ref: '#/components/schemas/relatedProperty'
            - $ref: '#/components/schemas/relatedLastBuild'
          links:
            type: object
            properties:
              property:
                type: string
                description: A link to the property that owns the library.
              self:
                type: string
                description: A link to the library itself.
            description: Contains links related to the library which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              build_status:
                type: string
                description: The current build status for the library.
              build_required_detail:
                type: string
                description: A message regarding the current `build_required` status for the library.
            description: Contains meta information about the library.
    buildsEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the build was created in the system.
              status:
                type: string
                description: The current status of the build.
              updated_at:
                type: string
                description: A timestamp of when the build was last updated.
              token:
                type: string
                description: |-
                  A unique token for the build.

                  When a build is pushed to an Adobe-managed host (`akamai`), this token is used to identify the build within the library's folder structure. This also prevent's the build's `id` value from being unnecessarily exposed. This also applies to `sftp` hosts so that libraries are constructed in the same manner.
            description: Contains the build's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this build.
            allOf:
            - $ref: '#/components/schemas/relatedDataElements'
            - $ref: '#/components/schemas/relatedExtensions'
            - $ref: '#/components/schemas/relatedRules'
            - $ref: '#/components/schemas/relatedEnvironment'
            - $ref: '#/components/schemas/relatedLibrary'
            - $ref: '#/components/schemas/relatedProperty'
          links:
            type: object
            properties:
              environment:
                type: string
                description: A link to the environment that the build is assigned to.
              library:
                type: string
                description: A link to the library that the build is based on.
              self:
                type: string
                description: A link to the build itself.
            description: Contains links related to the build which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              artifact_url:
                type: string
                description: "The artifact URL for the build. This is the URL that  you embed on your webpage in order to install the build. When  embedded, this URL acts as a symlink to the `direct_artifact_url`  for the currently installed build. When you create a new build  for an environment, the symlink updates to point to the new `direct_artifact_url`  and stores the old one on the server. When republishing a build,  the symlink updates to point to the previous `direct_artifact_url`.  This allows you to easily change builds without needing to edit  client-side code."
              direct_artifact_url:
                type: string
                description: The direct artifact URL for the build.
              archive:
                type: boolean
                description: Indicates whether the build is archived.
              host_type_of:
                type: string
                description: "The host type for the environment that the build is  assigned to, either `akamai` for Adobe-managed hosting or `sftp`  for self hosting."
            description: Contains meta information about the build.
    rulesAttributes:
      type: object
      properties:
        name:
          type: string
          description: The name of the rule.
        enabled:
          type: boolean
          description: Indicates whether this rule will be enabled upon creation.
    rulesCreateAttributes:
      allOf:
      - $ref: '#/components/schemas/rulesAttributes'
    notesAttributes:
      required:
      - text
      type: object
      properties:
        text:
          type: string
          description: The contents of the note.
    notesEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              author_display_name:
                type: string
                description: The display name for the note's author.
              author_email:
                type: string
                description: The email address for the note's author.
              created_at:
                type: string
                description: A timestamp of when the note was created in the system.
              text:
                type: string
                description: The contents of the note.
            description: Contains the note's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this note.
            allOf:
            - $ref: '#/components/schemas/relatedResource'
          links:
            type: object
            properties:
              resource:
                type: string
                description: A link to the resource that the note is attached to.
              self:
                type: string
                description: A link to the note itself.
            description: Contains links related to the note which can be used in subsequent fetch requests.
    rulesEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the rule was created in the system.
              deleted_at:
                type: string
                description: A timestamp of when the rule was deleted from the system. Returns `null` if the rule still exists.
              dirty:
                type: boolean
                description: Indicates whether changes have been made to the rule that have not been pushed to a library.
              enabled:
                type: boolean
                description: Indicates whether this rule is enabled.
              name:
                type: string
                description: The name of the rule.
              published:
                type: boolean
                description: Indicates whether this rule has been published.
              published_at:
                type: string
                description: A timestamp of when the rule was published. Returns `null` if `published` is set to `false`.
              revision_number:
                type: integer
                description: The revision number for the rule.
              updated_at:
                type: string
                description: A timestamp of when the rule was last updated.
              review_status:
                type: string
                description: The current review status for the rule.
            description: Contains the rule's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this rule.
            allOf:
            - $ref: '#/components/schemas/relatedLibraries'
            - $ref: '#/components/schemas/relatedRevisions'
            - $ref: '#/components/schemas/relatedNotes'
            - $ref: '#/components/schemas/relatedProperty'
            - $ref: '#/components/schemas/relatedOrigin'
            - $ref: '#/components/schemas/relatedRuleComponents'
          links:
            type: object
            properties:
              property:
                type: string
                description: A link to the property that owns the rule.
              origin:
                type: string
                description: A link to the rule's origin.
              self:
                type: string
                description: A link to the rule itself.
              rule_components:
                type: string
                description: A link to the rule's associated rule components.
            description: Contains links related to the rule which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              latest_revision_number:
                type: string
                description: The latest revision number for the rule.
            description: Contains meta information about the rule.
    profilesEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            description: Contains the profile's attributes.
            allOf:
            - $ref: '#/components/schemas/profilesAttributes'
          links:
            type: object
            properties:
              self:
                type: string
                description: A link to the profile itself.
            description: Contains links related to the profile which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              rights:
                type: array
                description: Lists the permission rights granted to the profile.
                items:
                  type: string
            description: Contains meta information about the profile.
    ruleComponentsAttributes:
      type: object
      properties:
        name:
          type: string
          description: The name of the rule component.
        delegate_descriptor_id:
          type: string
          description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the rule component."
        delay_next:
          type: boolean
          description: Indicates whether the next rule component should be delayed while the current rule component is processing.
        extension_id:
          type: string
          description: The ID of the extension that provides the rule component's type.
        negate:
          type: boolean
          description: Indicates whether this rule component represents a negation (i.e. the component checks if a condition is NOT true in order to pass).
        order:
          type: integer
          description: The order position for the rule component. This is typically used for action-type rule components to determine the sequence that the actions should be executed in when the rule triggers.
        rule_order:
          type: number
          description: The order position for the parent rule. This determines the order or priority in which multiple rules are triggered for the same event for a property.
        settings:
          type: string
          description: A settings JSON object represented as a string.
        timeout:
          type: integer
          description: "If the rule component is time sensitive, this value represents the timeout value."
    ruleComponentsCreateAttributes:
      allOf:
      - $ref: '#/components/schemas/ruleComponentsAttributes'
    ruleComponentsEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the rule component was created in the system.
              delegate_descriptor_id:
                type: string
                description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html)  for the rule component."
              deleted_at:
                type: string
                description: A timestamp of when the rule component was deleted from the system. Returns `null` if the rule component still exists.
              dirty:
                type: boolean
                description: Indicates whether changes have been made to the rule component that have not been pushed to a library.
              name:
                type: string
                description: The name of the rule component.
              negate:
                type: boolean
                description: Indicates whether this rule component represents a negation (i.e. the component checks if a condition is NOT true in order to pass).
              order:
                type: integer
                description: The order position for the rule component. This is typically used for action-type rule components to determine the sequence that the actions should be executed in when the rule triggers.
              rule_order:
                type: number
                description: The order position for the parent rule. This determines the order or priority in which multiple rules are triggered for
                  the same event for a property.
              timeout:
                type: integer
                description: How long in milliseconds the system will allow this rule component to process before terminating it.
              delay_next:
                type: boolean
                description: Indicates whether the next rule component should be delayed while the current rule component is processing.
              published:
                type: boolean
                description: Indicates whether this rule component has been published.
              published_at:
                type: string
                description: A timestamp of when the rule component was published. Returns `null` if `published` is set to `false`.
              revision_number:
                type: integer
                description: The revision number for the rule component.
              updated_at:
                type: string
                description: A timestamp of when the rule component was last updated.
              settings:
                type: string
                description: A settings JSON object represented as a string.
            description: Contains the rule component's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this rule component.
            allOf:
            - $ref: '#/components/schemas/relatedUpdatedWithExtensionPackage'
            - $ref: '#/components/schemas/relatedUpdatedWithExtension'
            - $ref: '#/components/schemas/relatedExtension'
            - $ref: '#/components/schemas/relatedNotes'
            - $ref: '#/components/schemas/relatedOrigin'
            - $ref: '#/components/schemas/relatedProperty'
            - $ref: '#/components/schemas/relatedRules'
          links:
            type: object
            properties:
              extension:
                type: string
                description: A link to the extension that provides the rule component's type.
              origin:
                type: string
                description: A link to the rule component's origin.
              rules:
                type: string
                description: A link to the rules that utilized the rule component.
              self:
                type: string
                description: A link to the rule component itself.
            description: Contains links related to the rule component which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              latest_revision_number:
                type: string
                description: The latest revision number for the rule component.
            description: Contains meta information about the rule component.
    hostsEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the host was created in the system.
              server:
                type: string
                description: The URL of the server associated with the host.
              name:
                type: string
                description: The name of the host.
              path:
                type: string
                description: The path for the host (i.e. what comes after the `server` URL).
              port:
                type: integer
                description: The port number for the server URL.
              status:
                type: string
                description: The current status of the host.
              skip_symlinks:
                type: boolean
                description: |-
                  **Note**: This attribute is only available for SFTP hosts.

                  By default, all SFTP hosts use symbolic links (symlinks) to reference library builds that are saved to the server. However, not all servers support the use of symlinks. When this attribute is included and set to `true`, the host uses a copy operation to update the build assets directly instead of using symlinks.
              type_of:
                type: string
                description: "The host type, either `akamai` for an Adobe-managed  host, or `sftp` for self-hosting."
              updated_at:
                type: string
                description: A timestamp of when the host was last updated.
              username:
                type: string
                description: A username associated with the host.
            description: Contains the host's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this host.
            allOf:
            - $ref: '#/components/schemas/relatedProperty'
          links:
            type: object
            properties:
              property:
                type: string
                description: A link to the property that owns the host.
              self:
                type: string
                description: A link to the host itself.
            description: Contains links related to the host which can be used in subsequent fetch requests.
    callbacksEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the callback was created in the system.
              subscriptions:
                type: array
                description: Lists the audit event types that this callback is subscribed to.
                items:
                  type: string
              updated_at:
                type: string
                description: A timestamp of when the callback was last updated.
              url:
                type: string
                description: The URL that the callback will send messages to.
            description: Contains the callback's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this callback.
            allOf:
            - $ref: '#/components/schemas/relatedProperty'
          links:
            type: object
            properties:
              property:
                type: string
                description: A link to the property that owns the callback.
              self:
                type: string
                description: A link to the callback itself.
            description: Contains links related to the callback which can be used in subsequent fetch requests.
    secretsAttributes:
      required:
      - credentials
      - name
      - type_of
      type: object
      properties:
        name:
          type: string
          description: The secret name.
        type_of:
          type: string
          description: |-
            The type of secret credential. Has three possible values:


            * `token`: A token string.
            * `simple-http`: A username and password.
            * `oauth2`: Credentials conforming to the OAuth standard.
        credentials:
          type: object
          properties: {}
          description: "An object that contains the credential values for the secret. Depending on the `type_of` attribute, different properties must provided. See the section on [credentials](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/secrets.html?lang=en#credentials) in the secrets guide for details on the requirements for each type."
    secretsEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the secret was created in the system.
              updated_at:
                type: string
                description: A timestamp of when the secret was last updated.
              name:
                type: string
                description: The secret name.
              type_of:
                type: string
                description: |-
                  The type of secret credential. Has three possible values:


                  * `token`: A token string.
                  * `simple-http`: A username and password.
                  * `oauth2`: Credentials conforming to the OAuth standard.
              activated_at:
                type: string
                description: A timestamp of when the secret was activated.
              expires_at:
                type: string
                description: A timestamp of when the secret expires.
              refreshes_at:
                type: string
                description: A timestamp of when the secret credential will refresh.
              status:
                type: string
                description: The current exchange status for the secret.
              credentials:
                type: object
                properties: {}
                description: "An object that contains the credential values for the  secret. Depending on the `type_of` attribute, different properties  must provided. See the section on [credentials](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/secrets.html?lang=en#credentials)  in the secrets guide for details on the requirements for each  type."
            description: Contains the secret's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this secret.
            allOf:
            - $ref: '#/components/schemas/relatedProperty'
            - $ref: '#/components/schemas/relatedEnvironmentWithMeta'
            - $ref: '#/components/schemas/relatedNotes'
            - $ref: '#/components/schemas/relatedDataElements'
          links:
            type: object
            properties:
              self:
                type: string
                description: A link to the secret itself.
              property:
                type: string
                description: A link to the property that owns the secret.
            description: Contains links related to the secret which can be used in subsequent fetch requests.
    auditEventsEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              attributed_to_display_name:
                type: string
                description: The display name for the user that triggered the action recorded by the audit event.
              attributed_to_email:
                type: string
                description: The email address for the user that triggered the action recorded by the audit event.
              created_at:
                type: string
                description: A timestamp of when the audit event was created in the system.
              display_name:
                type: string
                description: The display name for the entity the audit event is associated with.
              type_of:
                type: string
                description: |-
                  The  type of audit event. Audit events types are structured using the syntax `{RESOURCE_TYPE}.{EVENT}` (for example, `build.created`).


                  `{RESOURCE_TYPE}` can be any of the following:


                  * `property`
                  * `extension`
                  * `data_element`
                  * `rule`
                  * `rule_component`
                  * `library`
                  * `build`
                  * `environment`
                  * `host`



                  `{EVENT}` can any of the following:


                  * `created`
                  * `updated`
                  * `deleted`
              updated_at:
                type: string
                description: A timestamp of when the audit event was last updated.
              entity:
                type: string
                description: "A JSON payload represented as a string, containing the  details of the entity associated with the audit event."
            description: Contains the audit event's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this audit event.
            allOf:
            - $ref: '#/components/schemas/relatedProperty'
            - $ref: '#/components/schemas/relatedEntity'
          links:
            type: object
            properties:
              entity:
                type: string
                description: A link to the entity associated with the audit event.
              property:
                type: string
                description: A link to the property that owns the audit event.
              self:
                type: string
                description: A link to the audit event itself.
            description: Contains links related to the audit event which can be used in subsequent fetch requests.
    companiesEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              created_at:
                type: string
                description: A timestamp of when the company was created in the system.
              name:
                type: string
                description: The company name.
              org_id:
                type: string
                description: The ID for the IMS Organization that owns the company entity.
              updated_at:
                type: string
                description: A timestamp of when the company was last updated.
              token:
                type: string
                description: |-
                  A unique token for the company.

                  When a build is pushed to an Adobe-managed host (`akamai`), this token is used to identify the company within the library's folder structure. This also prevent's the company's `id` value from being unnecessarily exposed. This also applies to `sftp` hosts so that libraries are constructed in the same manner.
              cjm_enabled:
                type: boolean
                description: Indicates whether the company is enabled for Customer Journey Management.
              edge_enabled:
                type: boolean
                description: Indicates whether the company is enabled for event forwarding.
              edge_events_allotment:
                type: integer
                description: The event forwarding allotment for your organization. Please check with your CSM or contract information for more information on this value.
              edge_fanout_ratio:
                type: integer
                description: The number of servers that events are configured to be forwarded to.
              premium_cdn_enabled:
                type: boolean
                description: "If the company has purchased an offer for a premium  content delivery network (CDN), this flag will be set to `true`."
              sla_enabled:
                type: boolean
                description: "If the company has purchased a service level agreement  (SLA), this flag will be set to `true`."
            description: Contains the company's attributes.
          relationships:
            type: object
            description: Provides information about other entities that are related to this company.
            allOf:
            - $ref: '#/components/schemas/relatedProperties'
          links:
            type: object
            properties:
              self:
                type: string
                description: A link to the company itself.
              properties:
                type: string
                description: A link to the properties that are owned by the company.
            description: Contains links related to the company which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              rights:
                type: array
                description: Lists the rights that are enabled for the company.
                items:
                  type: string
              platform_rights:
                type: object
                properties:
                  web:
                    type: array
                    description: Lists the rights that are enabled for web properties belonging to the company.
                    items:
                      type: string
                  mobile:
                    type: array
                    description: Lists the rights that are enabled for mobile properties belonging to the company.
                    items:
                      type: string
                description: Contains the platform-specific rights that are enabled for the company.
            description: Contains meta information about the company.
    appConfigurationsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    callbacksListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    companiesListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    rulesNotesListResponse:
      allOf:
      - $ref: '#/components/schemas/notesListResponse'
    rulesLibrariesListResponse:
      allOf:
      - $ref: '#/components/schemas/librariesListResponse'
    extensionsLibrariesListResponse:
      allOf:
      - $ref: '#/components/schemas/librariesListResponse'
    librariesListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    auditEventsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    secretsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    buildsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    relationshipEntity:
      type: object
      properties:
        type:
          type: string
          description: The resource type for the related entity.
        id:
          type: string
          description: The ID for the related entity.
    librariesDeleteRuleRelationshipsPayload:
      allOf:
      - $ref: '#/components/schemas/deleteRelationshipsPayload'
    librariesDeleteDataElementRelationshipsPayload:
      allOf:
      - $ref: '#/components/schemas/deleteRelationshipsPayload'
    librariesUpdateExtensionRelationshipsPayload:
      allOf:
      - $ref: '#/components/schemas/createRelationshipsPayload'
    librariesUpdateRuleRelationshipsPayload:
      allOf:
      - $ref: '#/components/schemas/createRelationshipsPayload'
    librariesUpdateDataElementRelationshipsPayload:
      allOf:
      - $ref: '#/components/schemas/createRelationshipsPayload'
    librariesCreateEnvironmentRelationshipsPayload:
      allOf:
      - $ref: '#/components/schemas/createRelationshipPayload'
    librariesCreateExtensionRelationshipsPayload:
      allOf:
      - $ref: '#/components/schemas/createRelationshipsPayload'
    librariesCreateRuleRelationshipsPayload:
      allOf:
      - $ref: '#/components/schemas/createRelationshipsPayload'
    librariesCreateDataElementRelationshipsPayload:
      allOf:
      - $ref: '#/components/schemas/createRelationshipsPayload'
    createRelationshipPayload:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              description: The ID of the entity you wish to add as a relationship.
            type:
              type: string
              description: The type of entity you wish to add as a relationship.
              enum:
              - app_configurations
              - audit_events
              - builds
              - callbacks
              - companies
              - data_elements
              - environments
              - extensions
              - extension_packages
              - hosts
              - libraries
              - notes
              - properties
              - rules
              - rule_components
              - secrets
          description: Lists the basic details of the entity you wish to establish a relationship with.
    createRelationshipsPayload:
      type: object
      properties:
        data:
          type: array
          description: Lists the basic details of the entities you wish to establish relationships with.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the entity you wish to add as a relationship.
              type:
                type: string
                description: The type of entity you wish to add as a relationship.
    deleteRelationshipsPayload:
      type: object
      properties:
        data:
          type: array
          description: Lists the basic details of the entities that you want to remove from the parent entity's list of relationships.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the entity whose relationship you wish to remove.
              type:
                type: string
                description: The type of entity whose relationship you wish to remove.
    relationshipsLookupResponse:
      type: object
      properties:
        data:
          type: array
          description: Lists the relationships that you wish to add to the parent resource.
          items:
            $ref: '#/components/schemas/relationshipEntity'
        links:
          type: object
          properties: {}
          description: Contains links that can be used in subsequent fetch requests.
    relationshipsListResponse:
      type: object
      properties:
        data:
          type: array
          description: Lists the relationships that you wish to add to the parent resource.
          items:
            $ref: '#/components/schemas/relationshipEntity'
        links:
          type: object
          properties: {}
          description: Contains links that can be used in subsequent fetch requests.
    librariesRuleRelationshipsDeleteResponse:
      allOf:
      - $ref: '#/components/schemas/librariesRuleRelationshipsListResponse'
    librariesDataElementRelationshipsDeleteResponse:
      allOf:
      - $ref: '#/components/schemas/librariesDataElementRelationshipsListResponse'
    librariesExtensionRelationshipsDeleteResponse:
      allOf:
      - $ref: '#/components/schemas/librariesExtensionRelationshipsListResponse'
    librariesRuleRelationshipsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/librariesRuleRelationshipsListResponse'
    librariesDataElementRelationshipsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/librariesDataElementRelationshipsListResponse'
    librariesExtensionRelationshipsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/librariesExtensionRelationshipsListResponse'
    librariesRuleRelationshipsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/librariesExtensionRelationshipsListResponse'
    librariesExtensionRelationshipsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/librariesExtensionRelationshipsListResponse'
    librariesDataElementRelationshipsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/librariesDataElementRelationshipsListResponse'
    librariesEnvironmentRelationshipDeleteResponse:
      allOf:
      - $ref: '#/components/schemas/librariesEnvironmentRelationshipLookupResponse'
    librariesEnvironmentRelationshipCreateResponse:
      allOf:
      - $ref: '#/components/schemas/librariesEnvironmentRelationshipLookupResponse'
    environmentsHostRelationshipLookupResponse:
      allOf:
      - $ref: '#/components/schemas/relationshipsLookupResponse'
      - type: object
        properties:
          links:
            type: object
            properties:
              related:
                type: string
                description: A link to the related host for the environment.
              self:
                type: string
                description: A link to the host relationship object for the environment.
    librariesEnvironmentRelationshipLookupResponse:
      allOf:
      - $ref: '#/components/schemas/relationshipsLookupResponse'
      - type: object
        properties:
          links:
            type: object
            properties:
              related:
                type: string
                description: A link to the related environment for the library.
              self:
                type: string
                description: A link to the environment relationship object for the library.
    librariesRuleRelationshipsListResponse:
      allOf:
      - $ref: '#/components/schemas/relationshipsListResponse'
      - type: object
        properties:
          links:
            type: object
            properties:
              related:
                type: string
                description: A link to list the related rules for the library.
              self:
                type: string
                description: A link to list the rule relationship objects for the library.
    librariesExtensionRelationshipsListResponse:
      allOf:
      - $ref: '#/components/schemas/relationshipsListResponse'
      - type: object
        properties:
          links:
            type: object
            properties:
              related:
                type: string
                description: A link to list the related extensions for the library.
              self:
                type: string
                description: A link to list the extension relationship objects for the library.
    librariesDataElementRelationshipsListResponse:
      allOf:
      - $ref: '#/components/schemas/relationshipsListResponse'
      - type: object
        properties:
          links:
            type: object
            properties:
              related:
                type: string
                description: A link to list the related data element entities for the library.
              self:
                type: string
                description: A link to list the data element relationship objects for the library.
    dataElementsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    notesListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    propertiesNotesListResponse:
      allOf:
      - $ref: '#/components/schemas/notesListResponse'
    ruleComponentsNotesListResponse:
      allOf:
      - $ref: '#/components/schemas/notesListResponse'
    librariesNotesListResponse:
      allOf:
      - $ref: '#/components/schemas/notesListResponse'
    extensionsNotesListResponse:
      allOf:
      - $ref: '#/components/schemas/notesListResponse'
    secretsNotesListResponse:
      allOf:
      - $ref: '#/components/schemas/notesListResponse'
    dataElementsNotesListResponse:
      allOf:
      - $ref: '#/components/schemas/notesListResponse'
    rulesRuleComponentsListResponse:
      allOf:
      - $ref: '#/components/schemas/ruleComponentsListResponse'
    ruleComponentsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    ruleComponentsRulesListResponse:
      allOf:
      - $ref: '#/components/schemas/rulesListResponse'
    rulesRevisionsListResponse:
      allOf:
      - $ref: '#/components/schemas/rulesListResponse'
    rulesListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    environmentsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    librariesRulesListResponse:
      allOf:
      - $ref: '#/components/schemas/rulesListResponse'
    librariesExtensionsListResponse:
      allOf:
      - $ref: '#/components/schemas/extensionsListResponse'
    extensionsRevisionsListResponse:
      allOf:
      - $ref: '#/components/schemas/extensionsListResponse'
    extensionsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    hostsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    propertiesListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    appConfigurationsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/appConfigurationsLookupResponse'
    appConfigurationsLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/appConfigurationsEntity'
    callbacksLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/callbacksEntity'
    callbacksUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/callbacksLookupResponse'
    callbacksCreateResponse:
      allOf:
      - $ref: '#/components/schemas/callbacksLookupResponse'
    appConfigurationsCompanyLookupResponse:
      allOf:
      - $ref: '#/components/schemas/companiesLookupResponse'
    companiesLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/companiesEntity'
    extensionsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/extensionsLookupResponse'
    extensionsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/extensionsLookupResponse'
    environmentsHostLookupResponse:
      allOf:
      - $ref: '#/components/schemas/hostsLookupResponse'
    hostsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/hostsLookupResponse'
    hostsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/hostsLookupResponse'
    hostsLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/hostsEntity'
    notesLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/notesEntity'
    propertiesNotesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/notesLookupResponse'
    secretsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/secretsLookupResponse'
    secretsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/secretsLookupResponse'
    rulesNotesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/notesLookupResponse'
    ruleComponentsNotesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/notesLookupResponse'
    extensionsNotesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/notesLookupResponse'
    librariesNotesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/notesLookupResponse'
    secretsNotesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/notesLookupResponse'
    dataElementsNotesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/notesLookupResponse'
    extensionsOriginLookupResponse:
      allOf:
      - $ref: '#/components/schemas/extensionsLookupResponse'
    ruleComponentsExtensionLookupResponse:
      allOf:
      - $ref: '#/components/schemas/extensionsLookupResponse'
    ruleComponentsLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/ruleComponentsEntity'
    secretsLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/secretsEntity'
    rulesLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/rulesEntity'
    rulesUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/rulesLookupResponse'
    ruleComponentsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/ruleComponentsLookupResponse'
    ruleComponentsOriginLookupResponse:
      allOf:
      - $ref: '#/components/schemas/ruleComponentsLookupResponse'
    ruleComponentsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/ruleComponentsLookupResponse'
    rulesOriginLookupResponse:
      allOf:
      - $ref: '#/components/schemas/rulesLookupResponse'
    rulesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/rulesLookupResponse'
    buildsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/buildsLookupResponse'
    buildsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/buildsLookupResponse'
    auditEventsLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/auditEventsEntity'
    buildsLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/buildsEntity'
    profilesLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/profilesEntity'
    librariesLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/librariesEntity'
    librariesUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/librariesLookupResponse'
    librariesLookupUpstreamResponse:
      allOf:
      - $ref: '#/components/schemas/librariesLookupResponse'
    librariesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/librariesLookupResponse'
    extensionsLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/extensionsEntity'
    environmentsLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/environmentsEntity'
    secretsLookupEnvironmentResponse:
      allOf:
      - $ref: '#/components/schemas/environmentsLookupResponse'
    librariesLookupEnvironmentResponse:
      allOf:
      - $ref: '#/components/schemas/environmentsLookupResponse'
    environmentsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/environmentsLookupResponse'
    environmentsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/environmentsLookupResponse'
    dataElementsLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/dataElementsEntity'
    dataElementsUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/dataElementsLookupResponse'
    dataElementsCreateResponse:
      allOf:
      - $ref: '#/components/schemas/dataElementsLookupResponse'
    environmentsSecretsListResponse:
      allOf:
      - $ref: '#/components/schemas/secretsListResponse'
    environmentsBuildsListResponse:
      allOf:
      - $ref: '#/components/schemas/buildsListResponse'
    secretsDataElementsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataElementsListResponse'
    librariesDataElementsListResponse:
      allOf:
      - $ref: '#/components/schemas/dataElementsListResponse'
    secretsPropertyLookupResponse:
      allOf:
      - $ref: '#/components/schemas/propertiesLookupResponse'
    hostsPropertyLookupResponse:
      allOf:
      - $ref: '#/components/schemas/propertiesLookupResponse'
    librariesPropertyLookupResponse:
      allOf:
      - $ref: '#/components/schemas/propertiesLookupResponse'
    extensionsPropertyLookupResponse:
      allOf:
      - $ref: '#/components/schemas/propertiesLookupResponse'
    rulesPropertyLookupResponse:
      allOf:
      - $ref: '#/components/schemas/propertiesLookupResponse'
    environmentsPropertyLookupResponse:
      allOf:
      - $ref: '#/components/schemas/propertiesLookupResponse'
    environmentsLibraryLookupResponse:
      allOf:
      - $ref: '#/components/schemas/librariesLookupResponse'
    propertiesLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/propertiesEntity'
    propertiesUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/propertiesLookupResponse'
    extensionPackagesEntity:
      allOf:
      - $ref: '#/components/schemas/basicResourceProperties'
      - type: object
        properties:
          attributes:
            type: object
            properties:
              actions:
                type: array
                description: Lists the details of the action types defined by the extension.
                items:
                  $ref: '#/components/schemas/actionEntity'
              author:
                type: object
                properties:
                  url:
                    type: string
                    description: The URL for the author's website.
                  name:
                    type: string
                    description: The author's name.
                  email:
                    type: string
                    description: The author's email.
                description: Lists the details of the extension package author.
              availability:
                type: string
                description: "The availability of the extension package, either `public`  or `private`."
              cdn_path:
                type: string
                description: The content delivery path for the extension package.
              conditions:
                type: array
                description: Lists the details of the condition types defined by the extension.
                items:
                  $ref: '#/components/schemas/conditionEntity'
              configuration:
                type: object
                properties:
                  id:
                    type: string
                    description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
                  schema:
                    type: object
                    properties: {}
                    description: "A [JSON Schema](https://json-schema.org/) object that describes the configuration properties for the extension."
                  viewPath:
                    type: string
                    description: The relative URL to the extension configuration view. It should be relative to `viewBasePath` and should not begin with a slash. It must reference an HTML file with a `.html` extension. Query string and fragment identifier (hash) suffixes are acceptable.
                  transforms:
                    type: array
                    description: "An optional array of objects where each object represents a transformation that should be performed on every corresponding settings object when it is emitted into the runtime library. Refer to the documentation section on [transforms](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#transforms) for more information on how to use this field."
                    items:
                      type: object
                      properties: {}
                description: Describes the configuration options for the extension.
              created_at:
                type: string
                description: A timestamp of when the extension configuration was created.
              data_elements:
                type: array
                description: Lists the details of the data element types defined by
                  the extension.
                items:
                  $ref: '#/components/schemas/dataElementEntity'
              description:
                type: string
                description: A description for the extension.
              discontinued:
                type: boolean
                description: Indicated whether the extension is discontinued.
              display_name:
                type: string
                description: A display name for the extension.
              events:
                type: array
                description: Lists the details of the event types defined by the extension.
                items:
                  $ref: '#/components/schemas/eventEntity'
              exchange_url:
                type: string
                description: The Adobe Exchange URL for the extension.
              hosted_lib_files:
                type: array
                description: |-
                  Some extension developers prefer hosting all tags-related files on their own server. This provides an increased level of certainty regarding file availability at runtime and allows you to easily scan the code for security vulnerabilities. If the library portion of your extension needs to load JavaScript files at runtime, it is recommended you use this property to list those files. The listed files will be hosted alongside the tag runtime library. Your extension can then load the files via a URL retrieved using the [getHostedLibFileUrl](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/turbine.html?lang=en#get-hosted-lib-file) method.


                  This property provides a list of relative paths to third-party library files that need to be hosted.
                items:
                  type: string
              icon_path:
                type: string
                description: The path to the image that is used as the extension's
                  icon in the Data Collection UI.
              main:
                type: string
                description: |-
                  The relative path of a library module that should be executed at runtime.


                  This module will always be included in the runtime library and executed. Because the module is always included in the runtime library, a `main` module should only be used when absolutely necessary and its code size should be kept minimal.
              name:
                type: string
                description: "The name of the extension. It must be unique from all  other extensions and must comply with [naming rules](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#naming-rules).  This is used by the system as an identifier and should not be  changed after the extension is published."
              owner_org_id:
                type: string
                description: The ID of the IMS Organization that owns the extension.
              resources:
                type: array
                description: "A list of relative paths to verious asset files that  are used by the extension view, such as HTML and CSS files."
                items:
                  type: string
              shared_modules:
                type: array
                description: An list of shared module definition objects.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: "The name of the shared module. Note that this name will be used when referencing shared modules from other extensions as described in the [documentation](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/web/shared.html?lang=en). This name is never displayed in any user interface. It should be unique from the names of other shared modules within your extension and must comply with [naming rules](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#naming-rules). This is used by the system as an identifier and should not be changed after you publish your extension."
                    libPath:
                      type: string
                      description: The relative path to the shared module. It should not begin with a slash and must reference a JavaScript file
                        with a `.js` extension.
              status:
                type: string
                description: The current status of the extension package.
              platform:
                type: string
                description: The platform for your extension. Currently the only value accepted is `web`.
              updated_at:
                type: string
                description: A timestamp of when the extension package was last updated.
              version:
                type: string
                description: The version number of the extension package.
              view_base_path:
                type: string
                description: "The relative path to the subdirectory containing all  views and view-related resources (HTML, JavaScript, CSS, images)  for the extension. Platform hosts this directory on a web server  and loads `iframe` content from it. This is a required field and  should not start with a slash. For example, if all views are contained  within `src/view/`, the value of viewBasePath would be `src/view/`."
            description: Contains the extension package's attributes.
          links:
            type: object
            properties:
              self:
                type: string
                description: A link to the extension package itself.
            description: Contains links related to the extension package which can be used in subsequent fetch requests.
          meta:
            type: object
            properties:
              archive_url:
                type: string
                description: The archive URL for the extension package.
              script_sources:
                type: array
                description: Lists references for any script sources associated with the extension package.
                items:
                  type: string
            description: Contains meta information about the extension package.
    extensionPackagesPatchResponse:
      allOf:
      - $ref: '#/components/schemas/extensionPackagesLookupResponse'
    extensionsExtensionPackageLookupResponse:
      allOf:
      - $ref: '#/components/schemas/extensionPackagesLookupResponse'
    extensionPackagesCreateResponse:
      allOf:
      - $ref: '#/components/schemas/extensionPackagesLookupResponse'
    extensionPackagesLookupResponse:
      allOf:
      - $ref: '#/components/schemas/dataLookup'
      - type: object
        properties:
          data:
            type: object
            allOf:
            - $ref: '#/components/schemas/extensionPackagesEntity'
    extensionPackagesCreateUsageAuthorizationPayload:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                authorized_org_id:
                  type: string
                  description: The authorized Organization ID.
                  example: '{ORG_ID}'
            type:
              type: string
              description: The type of resource being created.
              example: "extension_package_usage_authorizations"
    extensionPackagesCreateUsageAuthorizationResponse:
      type: object
      properties:
        data:      
          type: object
          properties:
            id:
              type: string
              description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
              example: "EA35d0e731f73645e6972df9fcac101434"
            type:
              type: string
              description: The type of resource being created.
              example: "extension_package_usage_authorizations"
            attributes:
              type: object
              properties: 
                created_at:
                  type: string
                  description: A timestamp of when the extension package user authorization was created in the system.
                  example: "2024-06-05T23:17:30.308Z"
                updated_at:
                  type: string
                  description: A timestamp of when the extension package user authorization was last updated.
                  example: "2024-06-05T23:17:30.308Z"
                name:
                  type: string
                  description: The name of the extension package user authorization.
                  example: "Acme"
                platform:
                  type: string
                  description: The platform for the extension package user authorization, either `web` or `mobile`.
                  enum:
                    - web
                    - mobile
                  example: "web"
                owner_org_id:
                  type: string
                  description: The Organization ID.
                  example: '{ORG_ID}'
                owner_org_name:
                  type: string
                  description: The Organization name.
                  example: "Reactor QE"
                authorized_org_id:
                  type: string
                  description: The authorized Organization ID.
                  example: '{ORG_ID}'
                authorized_org_name:
                  type: string
                  description: The authorized Organization name.
                  example: "Platform UI - INT"
                state:
                  type: string
                  description: The current state of the new extension package user authorization.
                  example: "pending_approval"
                created_by_email:
                  type: string
                  description: The author's email.
                  example: "example@adobe.com"
                created_by_display_name:
                  type: string
                  description: The author's name.
                  example: "George Ciltaru"
                updated_by_email:
                  type: string
                  description: The email of the user who performed the update.
                  example: "Restricted"
                updated_by_display_name:
                  type: string
                  description: The name of the user who performed the update.
                  example: "Restricted"
            relationships:
              type: object
              properties:
                extension_package:
                  type: object
                  properties:
                    links:
                      type: object
                      properties:
                        related:
                          type: string
                          description: A link that can be used in a subsequent API call to fetch the related properties for the resource.
                          example: "https://reactor.adobe.io/extension_package_usage_authorizations/EA35d0e731f73645e6972df9fcac101434/extension_package"
                      description: Contains a `related` link that can be used in a subsequent API call to fetch the related properties for the resource.
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
                          example: "EP43649cc8856d4f09a7c2a21a4b1e449d"
                        type:
                          type: string
                          description: The type of resource being created.
                          example: "extension_packages"
            links:
              type: object
              properties:
                self:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the relationship object for the resource's related data elements.
                  example: "https://reactor.adobe.io/extension_package_usage_authorizations/EA35d0e731f73645e6972df9fcac101434"
    retrieveExtensionPackageUsageAuthorizationForPackageResponse:
      type: object
      properties:
        data:      
          type: array
          items:
            type: object
            properties:
                id:
                  type: string
                  description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
                  example: "EA722482c30fe44b54aa6a7317890b3bdb"
                type:
                  type: string
                  description: The type of resource being created.
                  example: "extension_package_usage_authorizations"
                attributes:
                  type: object
                  properties: 
                    created_at:
                      type: string
                      description: A timestamp of when the extension package user authorization was created in the system.
                      example: "2024-06-05T23:17:35.776Z"
                    updated_at:
                      type: string
                      description: A timestamp of when the extension package user authorization was last updated.
                      example: "2024-06-05T23:17:35.776Z"
                    name:
                      type: string
                      description: The name of the extension package user authorization.
                      example: "Acme"
                    platform:
                      type: string
                      description: The platform for the extension package user authorization, either `web` or `mobile`.
                      enum:
                        - web
                        - mobile
                      example: "web"
                    owner_org_id:
                      type: string
                      description: The Organization ID.
                      example: '{ORG_ID}'
                    owner_org_name:
                      type: string
                      description: The Organization name.
                      example: "Reactor QE"
                    authorized_org_id:
                      type: string
                      description: The authorized Organization ID.
                      example: '{ORG_ID}'
                    authorized_org_name:
                      type: string
                      description: The authorized Organization name.
                      example: "Platform UI - INT"
                    state:
                      type: string
                      description: The current state of the new extension package user authorization.
                      example: "pending_approval"
                    created_by_email:
                      type: string
                      description: The author's email.
                      example: "example@adobe.com"
                    created_by_display_name:
                      type: string
                      description: The author's name.
                      example: "George Ciltaru"
                    updated_by_email:
                      type: string
                      description: The email of the user who performed the update.
                      example: "Restricted"
                    updated_by_display_name:
                      type: string
                      description: The name of the user who performed the update.
                      example: "Restricted"
                relationships:
                  type: object
                  properties:
                    extension_package:
                      type: object
                      properties:
                        links:
                          type: object
                          properties:
                            related:
                              type: string
                              description: A link that can be used in a subsequent API call to fetch the related properties for the resource.
                              example: "https://reactor.adobe.io/extension_package_usage_authorizations/EA722482c30fe44b54aa6a7317890b3bdb/extension_package"
                          description: Contains a `related` link that can be used in a subsequent API call to fetch the related properties for the resource.
                        data:
                          type: object
                          properties:
                            id:
                              type: string
                              description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
                              example: "EPecefc8291ae346c3b3887d5b2da533b8"
                            type:
                              type: string
                              description: The type of resource being created.
                              example: "extension_packages"
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      description: A link that can be used in a subsequent API call to fetch the relationship object for the resource's related data elements.
                      example: "https://reactor.adobe.io/extension_package_usage_authorizations/EA722482c30fe44b54aa6a7317890b3bdb"
        meta:
          type: object
          properties:
            pagination:
              type: object
              properties:
                current_page:
                  type: integer
                  description: The current page of the response.
                  example: 1
                next_page:
                  type: integer
                  description: The next page of the response.
                  example: null
                prev_page:
                  type: integer
                  description: The previous page of the response.
                  example: null
                total_pages:
                  type: integer
                  description: The total number of pages in the response.
                  example: 1
                total_count:
                  type: integer
                  description: The total number of results in the response.
                  example: 1
              description: Contains pagination information about the list response.
          description: Contains a `pagination` object that provides pagination information about the list response.
    extensionPackagesUpdateUsageAuthorizationPayload:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                state:
                  type: string
                  description: The current state of the updated extension package user authorization.
                  example: approved
            type:
              type: string
              description: The type of resource being created.
              example: "extension_package_usage_authorizations"
            id:
              type: string
              description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
              example: "EA86f54b48dd7042a68686508e03be8ba9"
    extensionPackagesUpdateUsageAuthorizationResponse:
      type: object
      properties:
        data:      
          type: object
          properties:
            id:
              type: string
              description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
              example: "EA86f54b48dd7042a68686508e03be8ba9"
            type:
              type: string
              description: The type of resource being created.
              example: "extension_package_usage_authorizations"
            attributes:
              type: object
              properties: 
                created_at:
                  type: string
                  description: A timestamp of when the extension package user authorization was created in the system.
                  example: "2024-06-05T23:17:59.480Z"
                updated_at:
                  type: string
                  description: A timestamp of when the extension package user authorization was last updated.
                  example: "2024-06-05T23:18:00.115Z"
                name:
                  type: string
                  description: The name of the extension package user authorization.
                  example: "Acme"
                platform:
                  type: string
                  description: The platform for the extension package user authorization, either `web` or `mobile`.
                  enum:
                    - web
                    - mobile
                  example: "web"
                owner_org_id:
                  type: string
                  description: The Organization ID.
                  example: '{ORG_ID}'
                owner_org_name:
                  type: string
                  description: The Organization name.
                  example: "Reactor QE"
                authorized_org_id:
                  type: string
                  description: The authorized Organization ID.
                  example: '{ORG_ID}'
                authorized_org_name:
                  type: string
                  description: The authorized Organization name.
                  example: "Platform UI - INT"
                state:
                  type: string
                  description: The current state of the new extension package user authorization.
                  example: "approved"
                created_by_email:
                  type: string
                  description: The author's email.
                  example: "Restricted"
                created_by_display_name:
                  type: string
                  description: The author's name.
                  example: "Restricted"
                updated_by_email:
                  type: string
                  description: The email of the user who performed the update.
                  example: "example@adobe.com"
                updated_by_display_name:
                  type: string
                  description: The name of the user who performed the update.
                  example: "George Ciltaru"
            relationships:
              type: object
              properties:
                extension_package:
                  type: object
                  properties:
                    links:
                      type: object
                      properties:
                        related:
                          type: string
                          description: A link that can be used in a subsequent API call to fetch the related properties for the resource.
                          example: "https://reactor.adobe.io/extension_package_usage_authorizations/EA86f54b48dd7042a68686508e03be8ba9/extension_package"
                      description: Contains a `related` link that can be used in a subsequent API call to fetch the related properties for the resource.
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
                          example: "EPb91d54cad9f749dba4e5566459f84c9c"
                        type:
                          type: string
                          description: The type of resource being created.
                          example: "extension_packages"
            links:
              type: object
              properties:
                self:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the relationship object for the resource's related data elements.
                  example: "https://reactor.adobe.io/extension_package_usage_authorizations/EA86f54b48dd7042a68686508e03be8ba9"
    
    retrieveExtensionPackageUsageAuthorizationResponse:
      type: object
      properties:
        data:      
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
                example: "EA35d0e731f73645e6972df9fcac101434"
              type:
                type: string
                description: The type of resource being created.
                example: "extension_package_usage_authorizations"
              attributes:
                type: object
                properties: 
                  created_at:
                    type: string
                    description: A timestamp of when the data extension package usage authorization was created in the system.
                    example: "2024-06-05T23:17:30.308Z"
                  updated_at:
                    type: string
                    example: "2024-06-05T23:17:30.308Z"
                  name:
                    type: string
                    example: "Acme"
                  platform:
                    type: string
                    description: The platform for the extension package user authorization, either `web` or `mobile`.
                    enum:
                      - web
                      - mobile
                    example: "web"
                  owner_org_id: 
                    type: string
                    example: '{ORG_ID}'
                  owner_org_name:
                    type: string
                    description: The Organization name.
                    example: "Reactor QE"
                  authorized_org_id:
                    type: string
                    description: The authorized Organization ID.
                    example: '{ORG_ID}'
                  authorized_org_name:
                    type: string
                    description: The authorized Organization name.
                    example: "Platform UI - INT"
                  state:
                    type: string
                    description: The current state of the new extension package user authorization.
                    example: "pending_approval"
                  created_by_email:
                    type: string
                    description: The author's email.
                    example: "Restricted"
                  created_by_display_name:
                    type: string
                    description: The author's name.
                    example: "Restricted"
                  updated_by_email:
                    type: string
                    description: The email of the user who performed the update.
                    example: "example@adobe.com"
                  updated_by_display_name:
                    type: string
                    description: The name of the user who performed the update.
                    example: "George Ciltaru"
              relationships:
                type: object
                properties:
                  extension_package:
                    type: object
                    properties:
                      links:
                        type: object
                        properties:
                          related:
                            type: string
                            description: A link that can be used in a subsequent API call to fetch the related properties for the resource.
                            example: "https://reactor.adobe.io/extension_package_usage_authorizations/EA35d0e731f73645e6972df9fcac101434/extension_package"
                        description: Contains a `related` link that can be used in a subsequent API call to fetch the related properties for the resource.
                      data:
                        type: string
                        example: null
              links:
                type: object
                properties:
                  self:
                    type: string
                    description: A link that can be used in a subsequent API call to fetch the relationship object for the resource's related data elements.
                    example: "https://reactor.adobe.io/extension_package_usage_authorizations/EA35d0e731f73645e6972df9fcac101434"
        links:
          type: object
          properties:
            self:
              type: string
              description: A link that can be used in a subsequent API call to fetch the relationship object for the resource's related data elements.
              example: "https://reactor.adobe.io/extension_package_usage_authorizations?page%5Bnumber%5D=1&page%5Bsize%5D=25"
            next:  
              type: string
              example: "https://reactor.adobe.io/extension_package_usage_authorizations?page%5Bnumber%5D=2&page%5Bsize%5D=25"
            last:  
              type: string
              example: "https://reactor.adobe.io/extension_package_usage_authorizations?page%5Bnumber%5D=3&page%5Bsize%5D=25"
        meta:
          type: object
          properties:
            pagination:
              type: object
              properties:
                current_page:
                  type: integer
                  description: The current page of the response.
                  example: 1
                next_page:
                  type: integer
                  description: The next page of the response.
                  example: 2
                prev_page:
                  type: integer
                  description: The previous page of the response.
                  example: null
                total_pages:
                  type: integer
                  description: The total number of pages in the response.
                  example: 3
                total_count:
                  type: integer
                  description: The total number of results in the response.
                  example: 57
              description: Contains pagination information about the list response.
          description: Contains a `pagination` object that provides pagination information about the list response.   
    retrieveDataExtensionPackageUsageAuthorizationResponse:
      type: object
      properties:
        data:      
          type: object
          properties:
            id:
              type: string
              description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the configuration."
              example: "EP45ae063fd75c4c22936d3d456c858cfa"
            type:
              type: string
              description: The type of resource being created.
              example: "extension_packages"
            attributes:
              type: object
              properties: 
                actions:
                  type: array
                author: 
                  type: object
                  properties: 
                    url: 
                      type: string
                      example: "http://adobe.com"
                    name:
                      type: string
                      example: "Acme"
                    email:
                      type: string
                      example: "acme@adobe.com"
                availability:
                  type: string
                  example: "private"
                cdn_path: 
                  type: string
                  example: "https://assets.adobedtm.com/staging/extensions/EP45ae063fd75c4c22936d3d456c858cfa"
                conditions:
                  type: array
                configuration:
                  type: string
                  example: null 
                created_at:
                  type: string
                  description: A timestamp of when the data extension package usage authorization was created in the system.
                  example: "2024-06-05T23:17:48.607Z"
                data_elements:
                  type: array
                description: 
                  type: string
                  example: "Provides nothing."
                discontinued: 
                  type: boolean
                  example: false
                display_name: 
                  type: string
                  example: "Acme Template Test"
                ecma_version: 
                  type: string
                  example: null
                events: 
                  type: array
                exchange_url: 
                  type: string
                  example: null
                hosted_lib_files: 
                  type: string
                  example: null
                icon_path: 
                  type: string
                  example: "resources/icons/core.svg"
                main: 
                  type: string
                  example: "null"
                name: 
                  type: string
                  example: "Acme"
                owner_org_id: 
                  type: string
                  example: '{ORG_ID}'
                resources:
                  type: string
                  example: null
                shared_modules:
                  type: string
                  example: null
                status: 
                  type: string
                  example: "succeeded"
                platform: 
                  type: string
                  example: "web"
                updated_at:
                  type: string
                  example: "2024-06-05T23:17:53.806Z"
                version: 
                  type: string
                  example: "1.0.0"
                view_base_path: 
                  type: string
                  example: "dist/"
                created_by_email:
                  type: string
                  description: The author's email.
                  example: "example@adobe.com"
                created_by_display_name:
                  type: string
                  description: The author's name.
                  example: "George Ciltaru"
                updated_by_email:
                  type: string
                  description: The email of the user who performed the update.
                  example: "example@adobe.com"
                updated_by_display_name:
                  type: string
                  description: The name of the user who performed the update.
                  example: "George Ciltaru"
            relationships:
              type: object
              properties:
                extension_package:
                  type: object
                  properties:
                    links:
                      type: object
                      properties:
                        related:
                          type: string
                          description: A link that can be used in a subsequent API call to fetch the related properties for the resource.
                          example: "https://reactor.adobe.io/extension_packages/EP45ae063fd75c4c22936d3d456c858cfa/extension_package_usage_authorizations"
                      description: Contains a `related` link that can be used in a subsequent API call to fetch the related properties for the resource.
            links:
              type: object
              properties:
                self:
                  type: string
                  description: A link that can be used in a subsequent API call to fetch the relationship object for the resource's related data elements.
                  example: "https://reactor.adobe.io/extension_packages/EP45ae063fd75c4c22936d3d456c858cfa"
                    
    extensionPackagesPatchPayload:
      allOf:
      - $ref: '#/components/schemas/dataUpdateExtensionPackage'
    extensionPackagesVersionsListResponse:
      allOf:
      - $ref: '#/components/schemas/extensionPackagesListResponse'
    extensionPackagesListResponse:
      allOf:
      - $ref: '#/components/schemas/dataList'
      - type: object
        properties:
          data:
            type: array
      - $ref: '#/components/schemas/metaList'
    actionEntity:
      type: object
      properties:
        id:
          type: string
          description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the action."
        name:
          type: string
          description: "The name of the action. It must be unique from all other extensions and must comply with [naming rules](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#naming-rules). This is used by the system as an identifier and should not be changed after the extension is published."
        schema:
          type: object
          properties: {}
          description: "A [JSON Schema](http://json-schema.org/) object describing the format of a valid settings object that can be saved by the user for this action. Settings are usually configured and saved by a user using the Data Collection UI. In these cases, the extension's view can take necessary steps to validate user-provided settings. On the other hand, some users choose to use APIs directly without the aid of any UI. The purpose of this schema is to allow Platform to properly validate that settings objects saved by users, regardless of whether a UI is used, are in a format that is compatible with the library module that will act upon the settings object at runtime."
        libPath:
          type: string
          description: The relative path to the action's library module. It should not not begin with a slash and must reference a JavaScript file with a
            `.js` extension.
        viewPath:
          type: string
          description: "The relative URL to the action's configuration view. It should be relative to `viewBasePath` and should not begin with a slash. It must reference an HTML file with a `.html` extension. Query strings and fragment identifiers (hashes) are acceptable. If your action does not use any settings from a user, you may exclude this property and Platform will instead display a placeholder stating that no configuration is necessary."
        transforms:
          type: array
          description: "A list of transformation objects that should be performed on every corresponding `settings` object when it is emitted into the runtime library. See the section on [transforms](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#transforms) in the documentation for more information on why this may be needed and how it is used."
          items:
            type: object
            properties: {}
        displayName:
          type: string
          description: A display name for the action.
        categoryName:
          type: string
          description: "If this field is provided, the `displayName` is be listed under the `categoryName` within the Data Collection UI. All types with the same `categoryName` are listed under the same category. The value of `categoryName` should be human-readable."
    dataElementEntity:
      type: object
      properties:
        id:
          type: string
          description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the data element."
        name:
          type: string
          description: "The name of the data element. It must be unique from all other extensions and must comply with [naming rules](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#naming-rules). This is used by the system as an identifier and should not be changed after the extension is published."
        schema:
          type: object
          properties: {}
          description: "A [JSON Schema](http://json-schema.org/) object describing the format of a valid settings object that can be saved by the user for this data element. Settings are usually configured and saved by a user using the Data Collection UI. In these cases, the extension's view can take necessary steps to validate user-provided settings. On the other hand, some users choose to use APIs directly without the aid of any UI. The purpose of this schema is to allow Platform to properly validate that settings objects saved by users, regardless of whether a UI is used, are in a format that is compatible with the library module that will act upon the settings object at runtime."
        libPath:
          type: string
          description: The relative path to the data element's library module. It should not not begin with a slash and must reference a JavaScript file
            with a `.js` extension.
        viewPath:
          type: string
          description: "The relative URL to the data element's configuration view. It should be relative to `viewBasePath` and should not begin with a slash. It must reference an HTML file with a `.html` extension. Query strings and fragment identifiers (hashes) are acceptable. If your data element does not use any settings from a user, you may exclude this property and Platform will instead display a placeholder stating that no configuration is necessary."
        transforms:
          type: array
          description: "A list of transformation objects that should be performed on every corresponding `settings` object when it is emitted into the runtime library. See the section on [transforms](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#transforms) in the documentation for more information on why this may be needed and how it is used."
          items:
            type: object
            properties: {}
        displayName:
          type: string
          description: A display name for the data element.
        categoryName:
          type: string
          description: "If this field is provided, the `displayName` is be listed under the `categoryName` within the Data Collection UI. All types with the same `categoryName` are listed under the same category. The value of `categoryName` should be human-readable."
    conditionEntity:
      type: object
      properties:
        id:
          type: string
          description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the condition."
        name:
          type: string
          description: "The name of the condition. It must be unique from all other extensions and must comply with [naming rules](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#naming-rules). This is used by the system as an identifier and should not be changed after the extension is published."
        schema:
          type: object
          properties: {}
          description: "A [JSON Schema](http://json-schema.org/) object describing the format of a valid settings object that can be saved by the user for this condition. Settings are usually configured and saved by a user using the Data Collection UI. In these cases, the extension's view can take necessary steps to validate user-provided settings. On the other hand, some users choose to use APIs directly without the aid of any UI. The purpose of this schema is to allow Platform to properly validate that settings objects saved by users, regardless of whether a UI is used, are in a format that is compatible with the library module that will act upon the settings object at runtime."
        libPath:
          type: string
          description: The relative path to the condition's library module. It should not not begin with a slash and must reference a JavaScript file with a
            `.js` extension.
        viewPath:
          type: string
          description: "The relative URL to the condition's configuration view. It should be relative to `viewBasePath` and should not begin with a slash. It must reference an HTML file with a `.html` extension. Query strings and fragment identifiers (hashes) are acceptable. If your type's library module does not use any settings from a user, you may exclude this property and Platform will instead display a placeholder stating that no configuration is necessary."
        transforms:
          type: array
          description: "A list of transformation objects that should be performed on every corresponding `settings` object when it is emitted into the runtime library. See the section on [transforms](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#transforms) in the documentation for more information on why this may be needed and how it is used."
          items:
            type: object
            properties: {}
        displayName:
          type: string
          description: A display name for the condition.
        categoryName:
          type: string
          description: "If this field is provided, the `displayName` is be listed under the `categoryName` within the Data Collection UI. All types with the same `categoryName` are listed under the same category. The value of `categoryName` should be human-readable."
    eventEntity:
      type: object
      properties:
        id:
          type: string
          description: "The [delegate descriptor ID](https://experienceleague.adobe.com/docs/experience-platform/tags/api/guides/delegate-descriptor-ids.html) for the event."
        name:
          type: string
          description: "The name of the event. It must be unique from all other extensions and must comply with [naming rules](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#naming-rules). This is used by the system as an identifier and should not be changed after the extension is published."
        schema:
          type: object
          properties: {}
          description: "A [JSON Schema](http://json-schema.org/) object describing the format of a valid settings object that can be saved by the user for this event. Settings are usually configured and saved by a user using the Data Collection UI. In these cases, the extension's view can take necessary steps to validate user-provided settings. On the other hand, some users choose to use APIs directly without the aid of any UI. The purpose of this schema is to allow Platform to properly validate that settings objects saved by users, regardless of whether a UI is used, are in a format that is compatible with the library module that will act upon the settings object at runtime."
        libPath:
          type: string
          description: The relative path to the event's library module. It should not not begin with a slash and must reference a JavaScript file with a
            `.js` extension.
        viewPath:
          type: string
          description: "The relative URL to the event's configuration view. It should be relative to `viewBasePath` and should not begin with a slash. It must reference an HTML file with a `.html` extension. Query strings and fragment identifiers (hashes) are acceptable. If your event does not use any settings from a user, you may exclude this property and Platform will instead display a placeholder stating that no configuration is necessary."
        transforms:
          type: array
          description: "A list of transformation objects that should be performed on every corresponding `settings` object when it is emitted into the runtime library. See the section on [transforms](https://experienceleague.adobe.com/docs/experience-platform/tags/extension-dev/manifest.html?lang=en#transforms) in the documentation for more information on why this may be needed and how it is used."
          items:
            type: object
            properties: {}
        displayName:
          type: string
          description: A display name for the event.
        categoryName:
          type: string
          description: "If this field is provided, the `displayName` is be listed under the `categoryName` within the Data Collection UI. All types with the same `categoryName` are listed under the same category. The value of `categoryName` should be human-readable."
    profilesAttributes:
      type: object
      properties:
        active_org:
          type: string
          description: The ID of the IMS Organization that the user is active under.
        expires_in:
          type: integer
          description: "The time in seconds that the user's IMS profile is cached for. Once this time expires, the IMS service is polled again to refresh the profile."
        display_name:
          type: string
          description: The display name for the user.
        job_function:
          type: string
          description: The job function or role for the user.
        email:
          type: string
          description: The email address for the user.
        organizations:
          type: object
          properties:
            '{ORG_ID}':
              type: object
              properties:
                name:
                  type: string
                  description: The IMS Org name.
                admin:
                  type: boolean
                  description: Indicates whether the user is an admin for this IMS Org.
                active:
                  type: boolean
                  description: Indicates whether the user currently logged in under this IMS Org.
                login_companies:
                  type: array
                  description: Lists the different names that the organization operates under.
                  items:
                    type: string
                product_contexts:
                  type: array
                  description: Lists the Adobe products that the IMS Org has access to.
                  items:
                    type: string
                tenant_id:
                  type: string
                  description: "The tenant ID for the IMS Organization, which is used as a namespace to separate resources created by the organization from global resources managed by Adobe."
              description: Contains the details for a particular IMS Organization (as identified in the property key).
          description: Provides information on the IMS Organizations that the user is a member of. Each property in this object is keyed to the ID of IMS Org in question.
    searchPayload:
      required:
      - query
      type: object
      properties:
        from:
          minimum: 0
          type: integer
          description: The result set offset.
        size:
          maximum: 100
          type: integer
          description: The maximum number of results to return.
        query:
          type: object
          properties:
            '{RESOURCE_FIELD_PATH}':
              type: object
              properties:
                exists:
                  type: boolean
                  description: "If included and set to `true`, the query checks whether the field exists for the resource. If included and set to `false`, the query checks whether the field does not exist. If a resource has a field with a value of `null`, that field is treated as if it does not exist."
                range:
                  type: object
                  properties:
                    gt:
                      type: integer
                      description: "If included, the query checks whether the field is greater than the supplied value (non-inclusive)."
                    gte:
                      type: integer
                      description: "If included, the query checks whether the field is greater than or equal to the supplied value."
                    lt:
                      type: integer
                      description: "If included, the query checks whether the field is less than the supplied value (non-inclusive)."
                    lte:
                      type: integer
                      description: "If included, the query checks whether the field is less than or equal to the supplied value."
                  description: Describes a value range for the field that the query
                    checks for.
                value:
                  type: string
                  description: "If included, the query checks whether the field value matches the value of this property. It can optionally be combined with a `value_operator` property to determine how the value is interpreted when multiple space-separated terms are included in the string."
                value_operator:
                  type: string
                  description: |-
                    The boolean logic to use when matching multiple `value` terms against Reactor API resources. `value` must be included in order to use this property.


                    See the section on [value operator logic](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/search.html?lang=en#value-operator) for details on how this field affects the interpretation of `value`.
                  default: AND
                  enum:
                  - AND
                  - OR
              description: "Describes a query based on a specific field within a Reactor API resource. The key to this field must be the dot-notation path to the field in the resource object, such as `attributes.name` or `meta.latest_revision_number`."
          description: Describes the search query as a structured JSON object.
        sort:
          type: array
          description: Describes the order in which to sort results.
          items:
            required:
            - "{RESOURCE_FIELD_PATH}"
            type: object
            properties:
              '{RESOURCE_FIELD_PATH}':
                type: string
                description: "Describes a specific field within a Reactor API resource  to sort by, including the sort order. The key to this field must  be the dot-notation path to the field in the resource object,  such as `attributes.name` or `meta.latest_revision_number`. The  value must be either `asc` for ascending order, or `desc` for  descending order."
        resource_types:
          type: array
          description: |-
            Lists the resource types to query. Only searchable resource type values can be included:


            * `audit_events`
            * `builds`
            * `callbacks`
            * `data_elements`
            * `environments`
            * `extension_packages`
            * `extensions`
            * `hosts`
            * `libraries`
            * `properties`
            * `rule_components`
            * `rules`
          items:
            type: string
      example:
        data:
          query:
            attributes.name:
              value: Example
    searchResponse:
      type: object
      properties:
        data:
          type: array
          description: Lists the details of the Reactor API resources that matched the query.
          items:
            type: object
            properties: {}
        meta:
          type: object
          properties:
            total_hits:
              type: integer
              description: The total number of resources that matched the search query.
          description: Provides meta information about the search results.
      example:
        data:
        - id: PRc2fa6dc3c4c74f8db63476eebfc31dc6
          type: properties
          attributes:
            created_at: 2020-12-14T17:59:24.424Z
            enabled: true
            name: Kessel Example Property
            updated_at: 2020-12-14T17:59:24.424Z
            platform: web
            development: false
            token: 04c3cf57fe11
            domains:
            - example.com
            undefined_vars_return_empty: false
            rule_component_sequencing_enabled: false
          relationships:
            company:
              links:
                related: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/company
              data:
                id: CO2bf094214ffd4785bb4bcf88c952a7c1
                type: companies
            callbacks:
              links:
                related: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/callbacks
            hosts:
              links:
                related: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/hosts
            environments:
              links:
                related: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/environments
            libraries:
              links:
                related: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/libraries
            data_elements:
              links:
                related: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/data_elements
            extensions:
              links:
                related: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/extensions
            rules:
              links:
                related: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/rules
            notes:
              links:
                related: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/notes
          links:
            company: http://localhost:9010/companies/CO2bf094214ffd4785bb4bcf88c952a7c1
            data_elements: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/data_elements
            environments: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/environments
            extensions: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/extensions
            rules: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6/rules
            self: http://localhost:9010/properties/PRc2fa6dc3c4c74f8db63476eebfc31dc6
          meta:
            match_score: 3.1645029
        meta:
          total_hits: 1
  parameters:
    authorization:
      name: Authorization
      in: header
      description: "The access token generated using your Organization ID, Client ID, and JavaScript Web Token (JWT), prefixed with `bearer`. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
      required: true
      schema:
        type: string
    x-gw-ims-org-id:
      name: x-gw-ims-org-id
      in: header
      description: "The Organization ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
      required: true
      schema:
        type: string
    x-api-key:
      name: x-api-key
      in: header
      description: "The Client ID which can be copied from Adobe Developer Console. For more information on how to obtain this value, see the [authentication tutorial](http://www.adobe.com/go/launch-authentication-en)."
      required: true
      schema:
        type: string
    accept:
      name: Accept
      in: header
      description: "All GET requests must include this header with the value of `application/vnd.api+json;revision=#` (where `#` is the revision number of the resource you want to retrieve, e.g. `1`)."
      required: true
      schema:
        type: string
    content-type:
      name: Content-Type
      in: header
      description: This header must be provided with a value of `application/vnd.api+json` on all requests that contain a JSON payload.
      required: true
      schema:
        type: string
    content-type-form:
      name: Content-Type
      in: header
      description: This header must be provided with a value of `multipart/form-data` for all requests that require archive file uploads.
      required: true
      schema:
        type: string
    app_id:
      name: app_id
      in: query
      description: Filter by `app_id`.
      schema:
        type: string
    environment_id:
      name: environment_id
      in: query
      description: Filter by `environment_id`.
      schema:
        type: string
    created_at:
      name: created_at
      in: query
      description: Filter by `created_at` timestamp.
      schema:
        type: string
    updated_at:
      name: updated_at
      in: query
      description: Filter by `updated_at` timestamp.
      schema:
        type: string
    key_type:
      name: key_type
      in: query
      description: Filter by `key_type`.
      schema:
        type: string
    messaging_service:
      name: messaging_service
      in: query
      description: Filter by `messaging_service`.
      schema:
        type: string
    name:
      name: name
      in: query
      description: Filter by `name`.
      schema:
        type: string
    platform:
      name: platform
      in: query
      description: Filter by `platform`.
      schema:
        type: string
    type_of:
      name: type_of
      in: query
      description: Filter by `type`.
      schema:
        type: string
    status:
      name: status
      in: query
      description: Filter by `status`.
      schema:
        type: string
    token:
      name: token
      in: query
      description: Filter by `token`.
      schema:
        type: string
    org_id:
      name: org_id
      in: query
      description: Filter by `org_id`.
      schema:
        type: string
    dirty:
      name: dirty
      in: query
      description: Filter by `dirty` (whether the resource contains changes that haven't been pushed to a library).
      schema:
        type: string
    enabled:
      name: enabled
      in: query
      description: Filter by `enabled`.
      schema:
        type: string
    origin_id:
      name: origin_id
      in: query
      description: Filter by `origin_id`.
      schema:
        type: string
    published:
      name: published
      in: query
      description: Filter by `published` status.
      schema:
        type: string
    published_at:
      name: published_at
      in: query
      description: Filter by `published_at` timestamp.
      schema:
        type: string
    revision_number:
      name: revision_number
      in: query
      description: Filter by `revision_number`.
      schema:
        type: string
    text:
      name: text
      in: query
      description: Filter by `text`.
      schema:
        type: string
    stage:
      name: stage
      in: query
      description: Filter by `stage`.
      schema:
        type: string
    display_name:
      name: display_name
      in: query
      description: Filter by `display_name`.
      schema:
        type: string
    version:
      name: version
      in: query
      description: Filter by `version`.
      schema:
        type: string
    stale:
      name: stale
      in: query
      description: "Filter by `stale` status. A library becomes stale when another library on the [upstream](https://experienceleague.adobe.com/docs/experience-platform/tags/publish/publishing-flow.html#upstream) has been changed and the current library needs to be rebuilt to reflect those changes. A library may also enter a stale state if one of the extensions it uses receives an update."
      schema:
        type: string
    state:
      name: state
      in: query
      description: Filter by `state`.
      schema:
        type: string
    copying:
      name: copying
      in: query
      description: Filter by `copying`. This is a legacy attribute that is specific to properties that were migrated from the original Dynamic Tag Management (DTM) system to the current system. A `copying` property is a property that is populating its information from its original DTM implementation.
      schema:
        type: boolean
    negate:
      name: negate
      in: query
      description: Filter by `negate` (whether the rule component represents a negation).
      schema:
        type: string
    page_size:
      name: "page[size]"
      in: query
      description: "Limits the number of results per page (for example, `page[size]=50`). Can be used in conjunction with `page[number]` to manage response pagination."
      schema:
        maximum: 100
        type: integer
        default: 25
    page_number:
      name: "page[number]"
      in: query
      description: |-
        The page index to return for the listing response (for example, `page[number]=2`). Can be used in conjunction with `page[size]` to manage response pagination.
        >**NOTE**: Responses for listing calls contain a `meta.pagination` object which contains the indexes for the current, previous, and next pages in the response. To access these pages, use their index values for this parameter in subsequent API calls.
      schema:
        type: integer
        default: 1
x-original-swagger-version: "2.0"
