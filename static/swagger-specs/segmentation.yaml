openapi: 3.0.1
info:
  title: Segmentation Service API
  description: >- 

    Adobe Experience Platform Segmentation Service provides a user interface and RESTful API that allows you to create audiences through segment definitions or other sources from your Real-Time Customer Profile data. These audiences are centrally configured and maintained on Platform, and are readily accessible by any Adobe solution. Use the Segmentation Service API to programmatically integrate the service's various functionalities into your experience application, providing RESTful endpoints for managing audiences, segment definitions, segment jobs, exports, schedules, and more.

    - **Related documentation**:
        - [Segmentation Service documentation](https://www.adobe.com/go/segmentation-overview-en)

    - **Visualize API calls with Postman (a free, third-party software)**:
        - [Segmentation Service API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Segmentation%20Service%20API.postman_collection.json)
        - [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
        - [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    - **API paths**: 
      - PLATFORM Gateway URL: https://<span>platform.adobe.io/
      - Base path for this API: /data/core/ups
      - Example of a complete path: https://<span>platform.adobe.io/data/core/ups/segment/definitions

    - **Required headers**:
      - All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](https://www.adobe.com/go/platform-api-authentication-en).
      - All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, \"prod\"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en)for more information.    
      - All requests with a payload in the request body(such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

    - **API error handling**:
      - Refer to the Experience Platform API troubleshooting guide for [FAQs](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#faq), [API status codes](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#api-status-codes), and [request header errors](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#request-header-errors).

  version: "1.0"
servers:
- url: //{environment}.adobe.io/data/core/ups
  variables:
    environment:
      default: platform
      enum: 
        - platform
        - platform-stage
tags:
- name: Audiences
  description: Audiences are a set of people, accounts, households, or other entities that share common characteristics and behaviors. This set can be generated either by using Platform or from external sources. More information about using this set of endpoints can be found in the [audiences endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/segmentation/api/audiences.html).
- name: Estimates
  description: Estimates provide statistical information on a segment definition, such as the projected audience size and confidence interval. More information about using this set of endpoints can be found in the [previews and estimates endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/segmentation/api/previews-and-estimates.html).
- name: Export jobs
  description: Export jobs are asynchronous processes that are used to persist audience members to datasets. More information about using this set of endpoints can be found in the [export jobs endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/segmentation/api/export-jobs.html).
- name: Previews
  description: Previews provide paginated lists of qualifying profiles for a segment definition. More information about using this set of endpoints can be found in the [previews and estimates endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/segmentation/api/previews-and-estimates.html)
- name: Schedules
  description: Create a recurring schedule to automatically run export jobs. A schedule can run at most once daily. More information about using this set of endpoints can be found in the [schedules endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/segmentation/api/schedules.html).
- name: Segment definitions
  description: Segment definitions include a Profile Query Language (PQL) statement that defines which profiles will be part of an audience. More information about using this set of endpoints can be found in the [segment definitions endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/segmentation/api/segment-definitions.html).
- name: Segment jobs
  description: Segment jobs process previously established segment definitions to generate an audience. More information about using this set of endpoints can be found in the [segment jobs endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/segmentation/api/segment-jobs.html).
- name: Segment search
  description: Segment search allows users to search across multiple namespaces or get specific structural information about specified objects. More information about using this set of endpoints can be found in the [segment search endpoint guide](https://experienceleague.adobe.com/docs/experience-platform/segmentation/api/segment-search.html).
paths:
  /audiences:
    get:
      tags:
      - Audiences
      summary: List audiences
      operationId: listAudiences
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: start
          in: query
          description: A query parameter that specifies the starting offset for the audiences returned.
          required: false
          schema:
            type: integer
          example: 4
        - name: limit
          in: query
          description: A query parameter that specifies the total number of audiences returned per page.
          required: false
          schema:
            type: integer
          example: 20
        - name: sort
          in: query
          description: A query parameter that specifies the field to sort the results by. This is written in the format `[attributeName]:[desc/asc]`
          required: false
          schema:
            type: string
          example: "updateTime:desc"
        - name: property
          in: query
          description: A query parameter that specifies which audiences to return. The audiences returned must **exactly** match the attribute value given. This is written in the format `property=[attributeName]==[attributeValue]`.
          required: false
          schema:
            type: string
          example: "property=audienceId==test-audience-id"
        - name: name
          in: query
          description: A query parameter that filters for audiences that contain the string in the name. This value is case **insensitive**.
          required: false
          schema:
            type: string
          example: Test
        - name: description
          in: query
          description: A query parameter that filters for audiences that contain the string in the description. This value is case **insensitive**.
          required: false
          schema:
            type: string
          example: Test description
        - name: entityType
          in: query
          description: A query parameter that lets you filter the type of audience you're looking for.
          required: false
          schema: 
            type: string
          example: "_xom.context.account"
      responses:
        200:
          x-summary: "Success"
          description: A list of audiences is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudiencesList'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden because the organization is **not** enabled for audiences.
          content:
            application/json:
              schema:
                type: object
              examples:
                "Organization not enabled for audiences":
                  value:
                    requestId: dprgmrFdQgxPMLq5WxCRJsJUQcllxtHX
                    errors:
                      403:
                      - code: 403
                        message: The IMS Org is not enabled for External Segment.
                    type: https://ns.adobe.com/aep/errors/UPAPI-113740-403
                    title: "The IMS Org is not enabled for External Segment"
                    status: 403
                "Attribute Based Access Control validation error":
                  value:
                    requestId: NvXUrBnbFxSQb00Uthy3rMIEFzNyRc2s
                    errors:
                      403:
                        - code: UPAPI-113752-403
                          message: Permission denied on some resources. errorMessage=[{\"resource\":{\"uri\":\"/orgs/{ORG_ID}/sandboxes/prod/segments\",\"labels\":[]},\"action\":\"READ\"}]
                      type: https://ns.adobe.com/aep/errors/UPAPI-113752-403
                      title: "Permission denied on some resources. errorMessage=[{\"resource\":{\"uri\":\"/orgs/{ORG_ID}/sandboxes/prod/segments\",\"labels\":[]},\"action\":\"READ\"}]"
                      status: 403

    post:
      tags:
      - Audiences
      summary: Create an audience
      operationId: createAudience
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
      requestBody:
        description: >-
          The request body for creating an audience.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreatePlatformAudienceRequestBody'
            examples:
              Platform-generated audience:
                $ref: '#/components/examples/CreatePlatformAudienceRequestBody'
      responses:
        201:
          x-summary: "Success"
          description: A new audience was successfully created.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformGeneratedAudience'
              examples:
                Platform-generated audience:
                  $ref: '#/components/examples/PlatformAudience'
        400:
          x-summary: "Error"
          description: The audience could not be created.
          content:
            application/json:
              schema:
                type: object
              examples:
                Validation error (Name is a mandatory field):
                  value:
                    requestId: fggdhzT89v3qlldeezJ9eVQtKiR51hkZ
                    errors:
                      400:
                        - code: 400
                          message: There is a problem extracting the user JSON, field(s) missing or invalid.  Correct and try again.
                        - code: 400
                          message: No usable value for name\nDid not find value which can be converted into java.lang.String
                        - code: 400
                          message: Did not find value which can be converted into java.lang.String
                    type: https://ns.adobe.com/aep/errors/UPLIB-101206-500
                    title: There is a problem extracting the user JSON, field(s) missing or invalid. Correct and try again.
                    status: 400
                Validation error (Cannot create audience where lifecycle state is deleted):
                  value:
                    requestId: 2wvHvngaq58nE1JyNFOJwQjIQJV2dePE
                    errors:
                      400:
                        - code: 400
                          message: There is a problem in audience validation. Cannot set lifecycleState as deleted
                    type: https://ns.adobe.com/aep/errors/UPAPI-113434-400
                    title: There is a problem in audience validation. Cannot set lifecycleState as deleted
                    status: 400
                Validation error (Dataset ID validation):
                  value:
                    requestId: dki6o4NeG6sUAYd80tIfNFnTTMzq9TWk
                    errors:
                      400:
                        - code: 400
                          message: "Dataset 15b4657a-058a-47b0-a356-7b63328138c6 cannot be retrieved from Catalog https://platform.adobe.io/data/foundation/catalog/dataSets/15b4657a-058a-47b0-a356-7b63328138c6."
                        - code: 400
                          message: "uri:PlatformUrl/data/foundation/catalog/dataSets/15b4657a-058a-47b0-a356-7b63328138c6 -> Status Code - 404 : message\n{\"type\":\"/placeholder/type/uri\",\"status\":404,\"title\":\"NotFoundError\",\"detail\":\"DataSet not found.\"}"
                    type: https://ns.adobe.com/aep/errors/UPLIB-101554-503
                    title: "Dataset 15b4657a-058a-47b0-a356-7b63328138c6 cannot be retrieved from Catalog https://platform.adobe.io/data/foundation/catalog/dataSets/15b4657a-058a-47b0-a356-7b63328138c6."
                    status: 400
  /audiences/{AUDIENCE_ID}:
    get:
      tags:
      - Audiences
      summary: Retrieve an audience
      operationId: getAudience
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: AUDIENCE_ID
          in: path
          description: The ID of the audience you want to retrieve.
          required: true
          schema:
            type: string 
            example: 60ccea95-1435-4180-97a5-58af4aa285ab
      responses:
        200:
          x-summary: "Success"
          description: The specified audience was successfully retrieved.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformGeneratedAudience'
              examples:
                Platform-generated audience:
                  $ref: '#/components/examples/PlatformAudience'
        404:
          x-summary: "Not found"
          description: The audience was not found.
          content:
            application/json:
              schema:
                type: object
              examples:
                Audience not found:
                  value:
                    requestId: YrgXiqvCobA9neOmrzCP7kQLi4yIizoP
                    errors:
                      404:
                        - code: 404
                          message: The audience entity e65765df-adfa-4d4b-b31a-53c390a575c is not found. Use a valid entity and try again.
                    type: https://ns.adobe.com/aep/errors/UPAPI-113430-404
                    title: The audience entity e65765df-adfa-4d4b-b31a-53c390a575c is not found. Use a valid entity and try again.
                    status: 404
    delete:
      tags:
      - Audiences
      summary: Delete an audience
      operationId: deleteAudience
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: AUDIENCE_ID
          in: path
          description: The ID of the audience you want to retrieve.
          required: true
          schema:
            type: string 
            example: 60ccea95-1435-4180-97a5-58af4aa285ab
      responses:
        204:
          x-summary: "Success"
          description:  The audience was successfully deleted. No message is returned upon a successful response.
          content:
            application/json:
              schema:
                type: object
        400:
          x-summary: "Error"
          description:  The audience could not be deleted.
          content:
            application/json:
              schema:
                type: object
              examples:
                Validation error (Audience is dependent on other audiences):
                  value:
                    requestId: JG5rthQiyy8Ca0Y0WnCbhCu6Rh2PT6bg
                    errors:
                      400:
                        - code: 400
                          message: The audience cannot be deleted.
                    type: https://ns.adobe.com/aep/errors/UPAPI-113631-403
                    title: The audience cannot be deleted.
                    status: 400
        403:
          x-summary: "Missing access permissions"
          description: Attribute based access control error
          content:
            application/json:
              schema:
                type: object
              examples:
                Could not re-write audience status:
                  value:
                    requestId: NvXUrBnbFxSQb00Uthy3rMIEFzNyRc2s
                    errors:
                      403:
                        - code: UPAPI-113752-403
                          message: Permission denied on some resources. errorMessage=[{\"resource\":{\"uri\":\"/orgs/660932FC5AFCB4C50A494209@AdobeOrg/sandboxes/prod/segments/60ccea95-1435-4180-97a5-58af4aa285ab5\",\"labels\":[]},\"action\":\"WRITE\"}]
                    type: https://ns.adobe.com/aep/errors/UPAPI-113752-403
                    title: Permission denied on some resources. errorMessage=[{\"resource\":{\"uri\":\"/orgs/660932FC5AFCB4C50A494209@AdobeOrg/sandboxes/prod/segments/60ccea95-1435-4180-97a5-58af4aa285ab5\",\"labels\":[]},\"action\":\"WRITE\"}]
                    status: 403
        404:
          x-summary: "Not found"
          description: The audience could not be found.
          content:
            application/json:
              schema:
                type: object
              examples:
                Audience not found:
                  value:
                    requestId: YrgXiqvCobA9neOmrzCP7kQLi4yIizoP
                    errors:
                      404:
                        - code: 404
                          message: The audience entity 60ccea95-1435-4180-97a5-58af4aa285ab5 is not found. Use a valid entity and try again.
                    type: https://ns.adobe.com/aep/errors/UPAPI-113430-404
                    title: The audience entity 60ccea95-1435-4180-97a5-58af4aa285ab5 is not found. Use a valid entity and try again.
                    status: 404
    patch:
      tags:
      - Audiences
      summary: Update one or more attributes of an audience
      operationId: patchAudience
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: AUDIENCE_ID
          in: path
          description: The ID of the audience you want to patch.
          required: true
          schema:
            type: string 
            example: 60ccea95-1435-4180-97a5-58af4aa285ab
      requestBody:
        description: A sample request body to update the PQL expression of the audience.
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  op:
                    type: string
                    example: add
                  path:
                    type: string
                    example: "/expression"
                  value:
                    type: object
                    properties:
                      "type":
                        type: string
                        example: "PQL"
                      format:
                        type: string
                        example: "pql/text"
                      value:
                        type: string
                        example: "workAddress.country = \"CA\""
            examples:
              Update the PQL:
                description: The following PATCH request will update the audience's workAddress.country to US.
                value:
                  - op: add
                    path: /expression
                    value:
                      type: PQL
                      format: pql/text
                      value: "workAddress.country= \"US\""
                
      responses:
        201:
          x-summary: "Success"
          description: Details of your newly updated audience are returned.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformGeneratedAudience'
              examples:
                Update the PQL:
                  $ref: '#/components/examples/PlatformAudience'
        400:
          x-summary: "Error"
          description:  The audience could not be updated.
          content:
            application/json:
              schema:
                type: object
              examples:
                Validation error (Lifecycle status cannot be modified to Delete):
                  value:
                    requestId: rxFGviFDXAfpH2qTzDta41sWoXHsuQpU
                    errors:
                      400:
                        - code: 400
                          message: There is a problem in audience validation. lifecycle field can not be modified to Delete using Patch operation
                    type: https://ns.adobe.com/aep/errors/UPAPI-113434-400
                    title: There is a problem in audience validation. lifecycle field can not be modified to Delete using Patch operation
                    status: 400
        404:
          x-summary: "Not found"
          description: The audience could not be found.
          content:
            application/json:
              schema:
                type: object
              examples:
                Audience not found:
                  value:
                    requestId: YrgXiqvCobA9neOmrzCP7kQLi4yIizoP
                    errors:
                      404:
                        - code: 404
                          message: The audience entity 4afe34ae-8c98-4513-8a1d-67ccaa54bc05 is not found. Use a valid entity and try again.
                    type: https://ns.adobe.com/aep/errors/UPAPI-113430-404
                    title: The audience entity 4afe34ae-8c98-4513-8a1d-67ccaa54bc05 is not found. Use a valid entity and try again.
                    status: 404
    put:
      tags:
      - Audiences
      summary: Update an audience
      operationId: updateAudience
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: AUDIENCE_ID
          in: path
          description: The ID of the audience you want to overwrite.
          required: true
          schema:
            type: string 
            example: 60ccea95-1435-4180-97a5-58af4aa285ab
      responses:
        201:
          x-summary: "Success"
          description: The audience was successfully updated. 
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformGeneratedAudience'
              examples:
                Update audience PQL expression:
                  $ref: '#/components/examples/PlatformAudience'
        400:
          x-summary: "Error"
          description:  The audience could not be updated.
          content:
            application/json:
              schema:
                type: object
              examples:
                Validation error (Namepsace is immutable):
                  value:
                    requestId: LBGnewEg2iOcx6TcTVEIy1e6fE6zAlHh
                    errors:
                      400:
                        - code: 400
                          message: There is a problem in audience validation. Namespace is immutable field.
                    type: https://ns.adobe.com/aep/errors/UPAPI-113434-400
                    title: There is a problem in audience validation. Namespace is immutable field
                    status: 400
        404:
          x-summary: "Not found"
          description: The audience was not found.
          content:
            application/json:
              schema:
                type: object
              examples:
                Audience not found:
                  value:
                    requestId: YrgXiqvCobA9neOmrzCP7kQLi4yIizoP
                    errors:
                      404:
                        - code: 404
                          message: The audience entity 4afe34ae-8c98-4513-8a1d-67ccaa54bc05 is not found. Use a valid entity and try again.
                    type: https://ns.adobe.com/aep/errors/UPAPI-113430-404
                    title: The audience entity 4afe34ae-8c98-4513-8a1d-67ccaa54bc05 is not found. Use a valid entity and try again.
                    status: 404
        500:
          x-summary: "Access control validation error"
          description: An attribute based access control validation error ocurred.
          content:
            application/json:
              schema:
                type: object
              examples:
                Validation error:
                  value:
                    requestId: oeoKKxNTV4HAUcTPfhWoz6nDYmghjIIu
                    errors:
                      500:
                        - code: UPAPI-113751-500
                          message: There is a problem validating Field Level Access Control.
                        - code: 500
                          message: "{\"type\":\"http://ns.adobe.com/aep/errors/PDP-4041-403\",\"title\":\"The user is not entitled to the specified organization. Please try again with a valid user.\",\"status\":403,\"report\":{\"tenantInfo\":{\"sandboxName\":\"N/A\",\"sandboxId\":\"N/A\",\"imsOrgId\":\"745F37C35E4B776E0A49421B@AdobeOrg\"},\"additionalContext\":{\"request-id\":\"oeoKKxNTV4HAUcTPfhWoz6nDYmghjIIu\"}},\"error-chain\":[{\"serviceId\":\"Policy Decision Point\",\"errorCode\":\"PDP-4041-403\",\"invokingServiceId\":\"acp_core_unifiedProfile_feeds\",\"unixTimeStampMs\":1660925698164}]}"
                    type: https://ns.adobe.com/aep/errors/UPAPI-113751-500
                    title: here is a problem validating Field Level Access Control."
                    status: 500
      requestBody:
        description: The request body to update the audience.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateAudienceName'
                - $ref: '#/components/schemas/UpdateAudiencePQL'
            examples:
              Update the audience name:
                $ref: '#/components/examples/UpdateAudienceName'
              Update the audience PQL:
                $ref: '#/components/examples/UpdateAudiencePQL'
  /audiences/bulk-get:
    post:
      tags:
      - Audiences
      summary: Retrieve multiple audiences
      operationId: bulkGetAudiences
      parameters:                
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
      requestBody:
        description: A sample request body to retrieve multiple audiences.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: object
                    properties:
                      id: 
                        type: string
                        example: 72c393ea-caed-441a-9eb6-5f66bb1bd6cd
            example:
              ids: 
                - id: 72c393ea-caed-441a-9eb6-5f66bb1bd6cd
                - id: QU9fLTEzOTgzNTE0MzY0NzY0NDg5NzkyOTkx_6ed34f6f-fe21-4a30-934f-6ffe21fa3075
      responses:
        207:
          x-summary: "Success"
          description: The audiences were successfully retrieved.
          content:
            application/json:
              schema:
                type: object
              examples:
                All the audiences were successfully retrieved:
                  value:
                    results:
                      72c393ea-caed-441a-9eb6-5f66bb1bd6cd:
                        id: 72c393ea-caed-441a-9eb6-5f66bb1bd6cd
                        audienceId: 72c393ea-caed-441a-9eb6-5f66bb1bd6cd
                        schema:
                          name: _xdm.context.profile
                        imsOrgId: "{ORG_ID}"
                        sandbox:
                          sandboxId: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
                          sandboxName: prod
                          type: production
                          default: true 
                        name: Sample Audience
                        expression:
                          type: pql
                          format: pql/text
                          value: _id = \"abc\"
                        mergePolicyId: 87c94d51-239c-4391-932c-29c2412100e5
                        evaluationInfo:
                          batch:
                            enabled: false 
                          continuous:
                            enabled: true 
                          synchronous:
                            enabled: false 
                        ansibleUiEnabled: false 
                        dataGovernancePolicy:
                          excludeOptOut: true 
                        creationTime: 1623889553000
                        createEpoch: 1623889553
                        updateTime: 1674646369000
                        updateEpoch: 1674646369
                        _etag: \"61030ec7-0000-0200-0000-63d113610000\"
                        dependents: []
                        definedOn:
                          - meta:resourceType: unions
                            meta:containerId: tenant
                            $ref: https://ns.adobe.com/xdm/context/profile__union
                        dependencies: []
                        type: SegmentDefinition
                        state: enabled
                        overridePerformanceWarnings: false 
                        lastModifiedBy: "{USER_ID}"
                        lifecycleState: published
                        namespace: AEPSegments
                        isSystem: false 
                        saveSegmentMembership: true 
                        originName: REAL_TIME_CUSTOMER_PROFILE
                      QU9fLTEzOTgzNTE0MzY0NzY0NDg5NzkyOTkx_6ed34f6f-fe21-4a30-934f-6ffe21fa3075:
                        id: QU9fLTEzOTgzNTE0MzY0NzY0NDg5NzkyOTkx_6ed34f6f-fe21-4a30-934f-6ffe21fa3075
                        name: External Audience
                        namespace: AO
                        imsOrgId: "{ORG_ID}"
                        sandbox:
                          sandboxId: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
                          sandboxName: prod
                          type: production
                          default: true 
                        type: ExternalSegment
                        lifecycleState: published
                        sourceId: source-id
                        createdBy: "{USER_ID}"
                        datasetId: 62bf31a105e9891b63525c92
                        _etag: \"3100da6d-0000-0200-0000-62bf31a10000\"
                        creationTime: 1656697249000
                        createEpoch: 1656697249
                        updateTime: 1656697249000
                        updateEpoch: 1656697249
                        audienceId: external-audience-id
                        isSystem: false 
                        saveSegmentMembership: true 
                        linkedAudienceRef:
                          aoWorkflowId: 62bf31858e87e34c8364befa
                        originName: AUDIENCE_ORCHESTRATION
                One audience was not found:
                  value:
                    results:
                      QU9fLTEzOTgzNTE0MzY0NzY0NDg5NzkyOTkx_6ed34f6f-fe21-4a30-934f-6ffe21fa3075:
                        id: QU9fLTEzOTgzNTE0MzY0NzY0NDg5NzkyOTkx_6ed34f6f-fe21-4a30-934f-6ffe21fa3075
                        name: External Audience
                        namespace: AO
                        imsOrgId: "{ORG_ID}"
                        sandbox:
                          sandboxId: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
                          sandboxName: prod
                          type: production
                          default: true 
                        type: ExternalSegment
                        lifecycleStatus: published
                        sourceId: source-id
                        createdBy: "{USER_ID}"
                        datasetId: 62bf31a105e9891b63525c92
                        _etag: \"3100da6d-0000-0200-0000-62bf31a10000\"
                        creationTime: 1656697249000
                        createEpoch: 1656697249
                        updateTime: 1656697249000
                        updateEpoch: 1656697249
                        audienceId: test-audience-id
                        isSystem: false 
                        saveSegmentMembership: true 
                        linkedAudienceRef:
                          aoWorkflowId: 62bf31858e87e34c8364befa
                        originName: AUDIENCE_ORCHESTRATION
                      missing-audience:
                        requestId: BNcYkjG1BCnhQ51uToeSdY5D5fQOKcSe
                        errors:
                          404:
                            - code: 404
                              message: Not found.
        400:
          x-summary: "Error"
          description: An invalid number of IDs was requested. This value **must** be greater than 100 and less than 1000.
          content:
            application/json:
              schema:
                type: object
              examples:
                No IDs were provided:
                  value:
                    requestId: 6qtdW3er5YruNle8CfFa050FlIuKsEZb
                    errors:
                      400:
                        - code: UPAPI-113015-400
                          message: The number of requested IDs is invalid. Cannot be 0 or exceed 100.
                    type: https://ns.adobe.com/aep/errors/UPAPI-113015-400
                    title: The number of requested IDs is invalid. Cannot be 0 or exceed 100.
                    status: 400
        404:
          x-summary: "Not found"
          description: None of the requested audiences could be found.
          content:
            application/json:
              schema:
                type: object
              examples:
                All audiences were not found:
                  value:
                    requestId: Vrxt59wqKLr5OlpnclFc2kMGAVwZQIT2
                    errors:
                      404:
                        - code: UPAPI-113000-404
                          message: "The entity missing-audience-1,missing-audience-2 is not found."
                    type: https://ns.adobe.com/aep/errors/UPAPI-113000-404
                    title: "The entity missing-audience-1,missing-audience-2 is not found."
                    status: 404


  /export/jobs:
    get:
      tags:
      - Export jobs
      summary: List export jobs
      operationId: listExportJobs
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: limit
          in: query
          description: Limit the number of export jobs returned in the list.
          schema:
            type: integer
        - name: offset
          in: query
          description: Offset the page of results returned, ordered by created time of resource.
          schema:
            type: string
        - name: status
          in: query
          description: Filter the export jobs returned by job status.
          schema:
            type: string
            enum:
            - NEW
            - SUCCEEDED
            - FAILED
      responses:
        200:
          x-summary: "Success"
          description: A list of the export jobs returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExportJobsResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    post:
      tags:
      - Export jobs
      summary: Create an export job
      operationId: createExportJob
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-profile-instance-id
          in: header
          description: 'The ID of the profile instance. **Example**: `ups`'
          schema:
            type: string
      requestBody:
        description: |-
          - **fields** - [Optional] Column filters (comma-separated list of columns in dot notation). Limits the data fields to be included in the export to only those provided in this parameter. The same parameter is also available when creating a segment definition, therefore the fields in the segment definition may have already been filtered. Omitting this value will result in all fields being included in the exported data.
          - **mergePolicy** - [Optional] Specifies the merge policy to govern the exported data. Include this parameter when there are multiple segment definitions being exported. Omitting this value will cause the Export Service to use the merge policy provided by the segmentId or snapshotName.
              - **id** - The ID of the merge policy.
              - **version** - The specific version of the merge policy to use. Omitting this value will default to the most recent version.
          - **filter** - [Optional] Specifies one or more of the following filters to apply to the segment definition before export.
              - **segments** - [Optional] Specifies the segment definitions to export. Omitting this value will result in all data from all profiles being exported. Accepts an array of segment definitions, each containing the following fields:
                  - **segmentId** - **[Required if specifying segment definitions]** Segment definition ID for profiles to be exported.
                  - **segmentNs** - [Optional] The namespace of the segment definition for the given segmentId.
                  - **status** - [Optional] An array of strings providing a status filter for the `segmentID`. By default, `status` will have the value `["realized", "existing"]` which represents all profiles that fall into the segment definition at the current time. Possible values include: `"realized"`, `"existing"`, and `"exited"`.
              - **segmentQualificationTime** - [Optional] Filter based on segment qualification time. The start time and/or end time can be provided.
                  - **startTime** - [Optional] Segment qualification start time for a segment definition ID for a given status. It not provided, there will be no filter on the start time for a segment definition ID qualification. The timestamp must be provided in [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
                  - **endTime** - [Optional] Segment qualification end time for a segment definition ID for a given status. It not provided, there will be no filter on the end time for a segment definition ID qualification. The timestamp must be provided in [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
              - **fromIngestTimestamp** - [Optional] Filters the resulting profiles to those that have been updated after the provided timestamp. Value is provided in RFC 3339 format. Supports `greater_than` operand.
              - **emptyProfiles** - [Optional] Boolean. Profiles can contain Profile records, ExperienceEvent records, or both. Profiles with no Profile records and only ExperienceEvent records are referred to as "emptyProfiles". To export all profiles in the Profile store, including the "emptyProfiles", set the value of "emptyProfiles" to `true`. If "emptyProfiles" is set to `false`, only profiles with Profile records in the store are exported. By default, if "emptyProfiles" attribute is not included, only profiles containing Profile records are exported.
          - **additionalFields** - [Optional] Additional profile fields that need to be exported.
              - **eventList** - Used if ExperienceEvents need to be exported with profiles.
                  - **fields** - Comma-separated list of ExperienceEvent fields to be included in the export. If not provided, all ExperienceEvent fields are exported.
                  - **filter** - Filters ExperienceEvents based on the parameters below. If not provided, all events corresponding to the resulting profiles will be exported.
                      - **fromIngestTimestamp** - Filters ExperienceEvents to those that have been updated after the provided timestamp. This is not the event time itself but the ingestion time for the events. Value is provided in RFC 3339 format.
          - **destination** - **[Required]** Destination information for the exported data.
              - **datasetId** - **[Required]** The ID of the dataset where data is to be exported.
              - **segmentPerBatch** [Optional] A Boolean value that, if not provided, defaults to false. A value of false exports all segment definition IDs into a single batch ID. A value of true exports one segment definition ID into one batch ID.
          - **schema.name** - **[Required]** The name of the schema associated with the dataset where data is to be exported.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExportJobRequest'
        required: true
      responses:
        200:
          x-summary: "Success"
          description: The export job has been successfully created.
          headers:
            X-Location:
              description: The HREF of the export job.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJobResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
      x-codegen-request-body-name: body
  /export/jobs/{EXPORT_JOB_ID}:
    get:
      tags:
      - Export jobs
      summary: Retrieve an export job
      operationId: retrieveExportJob
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: EXPORT_JOB_ID
          in: path
          description: The ID of the export job you want to retrieve.
          required: true
          schema:
            type: string
      responses:
        200:
          x-summary: "Success"
          description: The export job successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJobResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The export job was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    delete:
      tags:
      - Export jobs
      summary: Cancel or delete an export job
      operationId: cancelExportJob
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: EXPORT_JOB_ID
          in: path
          description: The ID of the export job you want to cancel or delete.
          required: true
          schema:
            type: string
      responses:
        200:
          x-summary: "Success"
          description: The export job was successfully cancelled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelExportJobResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The export job was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
  /segment/definitions:
    get:
      tags:
      - Segment definitions
      summary: List segment definitions
      operationId: listSegmentDefinitions
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: A unique ID that can be used to track a request.
          schema:
            type: string
          example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - name: start
          in: query
          description: The page offset, as per created time of resource.
          schema:
            type: integer
            format: int64
          example: 109103839
        - name: limit
          in: query
          description: The maximum size of the page.
          schema:
            type: integer
          example: 10
        - name: page
          in: query
          description: The page number.
          schema:
            type: integer
          example: 0
        - name: sort
          in: query
          description: The parameters used to sort the results.
          schema:
            type: string
          example: sort=name:asc,internalId:desc
      responses:
        200:
          x-summary: "Success"
          description: A list of segment definitions is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentDefinition'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    post:
      tags:
      - Segment definitions
      summary: Create a segment definition
      operationId: createSegmentDefinition
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: A unique ID that can be used to track a request.
          schema:
            type: string
          example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
      requestBody:
        description: |-
          - **name**: The name of the segment definition. This value must be unique.
          - **description**: A description of the segment definition.
          - **expression**: The PQL expression of the segment definition. Contains the PQL type, format, as well as the value of the PQL query.
          - **schema**: - The schema class for the segment definition.
          - **evaluationInfo**: - An object that determines the type of segment definition that's created. If `batch` is set to `true`, it will be a segment definition evaluated using batch segmentation. If `continuous` is set to `true`, it will be a segment definition evaluated using streaming segmentation. If `synchronous` is set to `true`, it will be a segment definition evaluated using edge segmentation. By default, a segment definition evaluated using batch segmentation will be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSegmentDefinition'
            examples:
              "pql/text":
                value:
                  name: "Sample segment definition"
                  description: "Sample description"
                  expression:
                    type: PQL
                    format: pql/text
                    value: 'workAddress.country = "US"'
                  evaluationInfo:
                    batch:
                      enabled: true
                    continuous:
                      enabled: false
                    synchronous:
                      enabled: false
                  schema:
                    name: "_xdm.context.profile"
                  payloadSchema: string
              "pql/json":
                value:
                  name: "Sample segment definition"
                  description: "Sample description"
                  expression:
                    type: PQL
                    format: pql/json
                    value: "{\"nodeType\":\"fnApply\",\"fnName\":\"=\",\"params\":[{\"nodeType\":\"fieldLookup\",\"fieldName\":\"a\",\"object\":{\"nodeType\":\"parameterReference\",\"position\":1}},{\"nodeType\":\"fieldLookup\",\"fieldName\":\"b\",\"object\":{\"nodeType\":\"parameterReference\",\"position\":1}}]}"
                  evaluationInfo:
                    batch:
                      enabled: true
                    continuous:
                      enabled: false
                    synchronous:
                      enabled: false
                  schema:
                    name: "_xdm.context.profile"
                  payloadSchema: string

        required: true
      responses:
        200:
          x-summary: "Success"
          description: The segment definition was successfully posted.
          headers:
            X-Location:
              description: The URL of the segment definition.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentDefinition'
              examples: 
                "pql/text":
                  value:
                    id: 54669488-03ab-4e0d-a694-37fe49e32be8
                    imsOrgId: "{ORG_ID}"
                    mergePolicyId: "5ed35fd8-6eeb-4ad2-bed9-43e695b8ac0b"
                    profileInstanceId: ups
                    name: "Sample segment definition"
                    description: "Sample description"
                    expression:
                      type: PQL
                      format: pql/text
                      value: 'workAddress.country = "US"'
                    evaluationInfo:
                      batch:
                        enabled: true
                      continuous:
                        enabled: false
                      synchronous:
                        enabled: false
                    schema:
                      name: "_xdm.context.profile"
                    dataGovernancePolicy:
                      excludeOptOut: true
                    creationTime: 0
                    updateEpoch: 1579292094
                    updateTime: 1579292094000
                    payloadSchema: string
                "pql/json":
                  value:
                    id: 54669488-03ab-4e0d-a694-37fe49e32be8
                    imsOrgId: "{ORG_ID}"
                    mergePolicyId: "5ed35fd8-6eeb-4ad2-bed9-43e695b8ac0b"
                    profileInstanceId: ups
                    name: "Sample segment definition"
                    description: "Sample description"
                    expression:
                      type: PQL
                      format: pql/json
                      value: "{\"nodeType\":\"fnApply\",\"fnName\":\"=\",\"params\":[{\"nodeType\":\"fieldLookup\",\"fieldName\":\"a\",\"object\":{\"nodeType\":\"parameterReference\",\"position\":1}},{\"nodeType\":\"fieldLookup\",\"fieldName\":\"b\",\"object\":{\"nodeType\":\"parameterReference\",\"position\":1}}]}"
                    evaluationInfo:
                      batch:
                        enabled: true
                      continuous:
                        enabled: false
                      synchronous:
                        enabled: false
                    schema:
                      name: "_xdm.context.profile"
                    dataGovernancePolicy:
                      excludeOptOut: true
                    creationTime: 0
                    updateEpoch: 1579292094
                    updateTime: 1579292094000
                    payloadSchema: string
        400:
          x-summary: "Error"
          description:  An invalid segment definition was posted.
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        422:
          x-summary: "Already exists"
          description: The segment definition already exists. In order to update a segment definition, use the PATCH operation instead.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
      x-codegen-request-body-name: body
  /segment/definitions/{SEGMENT_ID}:
    get:
      tags:
      - Segment definitions
      summary: Retrieve a segment definition
      operationId: retrieveSegmentDefinitionById
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: A unique ID that can be used to track a request.
          schema:
            type: string
          example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - name: SEGMENT_ID
          in: path
          description: The ID of the segment definition.
          required: true
          schema:
            type: string
      responses:
        200:
          x-summary: "Success"
          description: The segment definition was successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentDefinition'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The segment definition was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    delete:
      tags:
      - Segment definitions
      summary: Delete a segment definition
      operationId: deleteSegmentDefinition
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: A unique ID that can be used to track a request.
          schema:
            type: string
          example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - name: SEGMENT_ID
          in: path
          description: The ID of the segment definition.
          required: true
          schema:
            type: string
      responses:
        200:
          x-summary: "Success"
          description: The segment definition was successfully deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    patch:
      tags:
      - Segment definitions
      summary: Overwrite a segment definition.
      operationId: patchSegmentDefinition
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: A unique ID that can be used to track a request.
          schema:
            type: string
          example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - name: SEGMENT_ID
          in: path
          description: The ID of the segment definition.
          required: true
          schema:
            type: string
      requestBody:
        description: |-
          - **name**: The name of the segment definition. This value must be unique.
          - **description**: A description of the segment definition.
          - **expression**: The PQL expression of the segment definition. Contains the PQL type, format, as well as the value of the PQL query.
          - **schema**: - The schema class for the segment definition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentDefinition'
        required: true
      responses:
        200:
          x-summary: "Success"
          description: The segment definition was successfully updated.
          headers:
            X-Location:
              description: HREF to the segment definition
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentDefinition'
        400:
          x-summary: "Error"
          description:  The segment definition is invalid.
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
      x-codegen-request-body-name: body
  /segment/definitions/bulk-get:
    post:
      tags:
      - Segment definitions
      summary: Retrieve multiple segment definitions using multiple segment definition IDs
      operationId: bulkGetSegmentDefinitions
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
      requestBody:
        description: An array of the segment definition IDs that you are trying to retrieve.
        content:
          'application/json':
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: object
                    properties: 
                      id:
                        type: string
                        example: 54669488-03ab-4e0d-a694-37fe49e32be8
            example:
              ids:
                - id: 54669488-03ab-4e0d-a694-37fe49e32be8
                - id: c527dc3f-07fe-4b96-be4e-23f38e734ff8
        required: true
      responses:
        207:
          x-summary: "Success"
          description: The details of each segment definition are returned. The sample response has been truncated to show only the details for the first segment definition.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: object
                    properties:
                      '54669488-03ab-4e0d-a694-37fe49e32be8':
                        type: object
                        properties:
                          id:
                            type: string
                            example: 54669488-03ab-4e0d-a694-37fe49e32be8
                          schema:
                            type: object
                            properties: 
                              name: 
                                type: string
                                example: "_xdm.context.profile"
                          profileInstanceId:
                            type: string
                            example: ups
                          imsOrgId:
                            type: string
                            example: "{ORG_ID}"
                          sandbox:
                            type: object
                            properties: 
                              sandboxId:
                                type: string
                                example: 28e74200-e3de-11e9-8f5d-7f27416c5f0d
                              sandboxName:
                                type: string
                                example: prod
                              type:
                                type: string
                                example: production
                              default:
                                type: boolean
                                example: true
                          name: 
                            type: string
                            example: "Sample segment definition 1"
                          description:
                            type: string
                            example: "Sample segment definition description"
                          expression:
                            type: object
                            properties:
                              type:
                                type: string
                                example: PQL
                              format:
                                type: string
                                example: "pql/text"
                              value:
                                type: string
                                example: 'workAddress.country = "US"'
                          evaluationInfo:
                            type: object
                            properties:
                              batch:
                                type: object
                                properties:
                                  enabled:
                                    type: boolean
                                    example: true
                              continuous:
                                type: object
                                properties:
                                  enabled:
                                    type: boolean
                                    example: false
                              synchronous:
                                type: object
                                properties:
                                  enabled:
                                    type: boolean
                                    example: false
                          dataGovernancePolicy:
                            type: object
                            properties:
                              excludeOptOut:
                                type: boolean
                                example: true
                          creationTime:
                            type: integer
                            example: 0
                          updateEpoch: 
                            type: integer
                            example: 1579292094
                          updateTime:
                            type: integer
                            example: 1579292094000
                      "c527dc3f-07fe-4b96-be4e-23f38e734ff8":
                        type: object
                        properties:
                          id:
                            type: string
                            example: c527dc3f-07fe-4b96-be4e-23f38e734ff8
                          schema:
                            type: object
                            properties: 
                              name: 
                                type: string
                                example: "_xdm.context.profile"
                          profileInstanceId:
                            type: string
                            example: ups
                          imsOrgId:
                            type: string
                            example: "{ORG_ID}"
                          sandbox:
                            type: object
                            properties: 
                              sandboxId:
                                type: string
                                example: 28e74200-e3de-11e9-8f5d-7f27416c5f0d
                              sandboxName:
                                type: string
                                example: prod
                              type:
                                type: string
                                example: production
                              default:
                                type: boolean
                                example: true
                          name: 
                            type: string
                            example: "Sample segment definition 2"
                          description:
                            type: string
                            example: "Another sample segment definition description"
                          expression:
                            type: object
                            properties:
                              type:
                                type: string
                                example: PQL
                              format:
                                type: string
                                example: "pql/text"
                              value:
                                type: string
                                example: workAddress.country = \"US\"
                          evaluationInfo:
                            type: object
                            properties:
                              batch:
                                type: object
                                properties:
                                  enabled:
                                    type: boolean
                                    example: true
                              continuous:
                                type: object
                                properties:
                                  enabled:
                                    type: boolean
                                    example: false
                              synchronous:
                                type: object
                                properties:
                                  enabled:
                                    type: boolean
                                    example: false
                          dataGovernancePolicy:
                            type: object
                            properties:
                              excludeOptOut:
                                type: boolean
                                example: true
                          creationTime:
                            type: integer
                            example: 0
                          updateEpoch: 
                            type: integer
                            example: 1579292094
                          updateTime:
                            type: integer
                            example: 1579292094000                      
      x-codegen-request-body-name: body
  /segment/conversion:
    post:
      tags:
      - Segment definitions
      summary: Convert a segment definition
      description: This endpoint converts a segment definition from pql/text to pql/json or from pql/json to pql/text.
      operationId: convertSegmentDefinition
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: A unique ID that can be used to track a request.
          schema:
            type: string
          example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
      requestBody:
        description: |-
          - **name**: The name of the segment definition. This value must be unique.
          - **description**: A description of the segment definition.
          - **expression**: The PQL expression of the segment definition. Contains the PQL type, format, as well as the value of the PQL query.
          - **schema**: - The schema class for the segment definition.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SegmentDefinition'
        required: true
      responses:
        200:
          x-summary: "Success"
          description: The segment definition was successfully converted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentDefinition'
        400:
          x-summary: "Error"
          description:  An invalid segment definition was posted.
          content: {}
        409:
          x-summary: "Conflict"
          description: Conflict. An entity with the specified ID already exists in the system.
          content: {}
        429:
          x-summary: "Too many requests"
          description: Too many requests. Please try again in a few minutes.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
      x-codegen-request-body-name: body
  /segment/jobs:
    get:
      tags:
      - Segment jobs
      summary: List all segment job requests
      operationId: listSegmentJobs
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: A unique ID that can be used to track a request.
          schema:
            type: string
          example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - name: snapshot.name
          in: query
          description: The snapshot name.
          schema:
            type: string
          example: inUS
        - name: start
          in: query
          description: The page offset, as per the created time of the resource.
          schema:
            type: integer
            format: int64
          example: 2
        - name: limit
          in: query
          description: The maximum number of segment jobs retrieved per page.
          schema:
            type: integer
          example: 10
        - name: status
          in: query
          description: The job status.
          schema:
            type: string
          example: PROCESSING
        - name: sort
          in: query
          description: Used to order the segment jobs. Is written in the format [attributeName]:[desc|asc]
          schema:
            type: string
          example: creationTime:desc
        - name: property
          in: query
          description: Used to get exact matches within an attribute in the segment job. Is written in the format [arrayTypeAttributeName]~[objectKey]==[value]
          schema:
            type: string
          example: segments~segmentId==workInCanada
      responses:
        200:
          x-summary: "Success"
          description: A list of the segment jobs returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentJob'
              examples:
                More than 1500 segment definitions:
                  value:
                    _page:
                      totalCount: 14
                      pageSize: 14
                    children:
                      id: 468eeefd-95a2-45a1-8bfc-b806dafce7ee
                      imsOrgId: "E95186D65A28ABF00A495D82@AdobeOrg"
                      sandbox:
                        sandboxId: "28e74200-e3de-11e9-8f5d-7f27416c5f0d"
                        sandboxName: prod
                        type: production
                        default: true
                      profileInstanceId: 'ups'
                      source: scheduler
                      status: PROCESSING
                      batchId: 65e18145-a5e8-4993-94f3-c70fadaa1fef
                      computeJobId: 11037
                      computeGatewayJobId: 9ea97b25-a0f5-410e-ae87-b2d85e58f399
                      segments:
                        [segmentId: '*']
                      metrics:
                        totalTime:
                          startTimeInMs: 1573203617195
                          endTimeInMs: 1573204395655
                          totalTimeInMs: 778460
                        profileSegmentationTime:
                          startTimeInMs: 1573204266727
                          endTimeInMs: 1573204395655
                          totalTimeInMs: 128928
                        totalProfiles: 13146432
                        segmentedProfileCounter:
                          94509dba-7387-452f-addc-5d8d979f6ae8: 1033
                        segmentedProfileByNamespaceCounter:
                          94509dba-7387-452f-addc-5d8d979f6ae8:
                            tenantiduserobjid: 1033
                            campaign_profile_mscom_mkt_prod2: 1033
                        segmentedProfileByStatusCounter:
                          94509dba-7387-452f-addc-5d8d979f6ae8:
                            exited: 144646
                            existing: 10
                            realized: 2056
                        totalProfilesByMergePolicy:
                          25c548a0-ca7f-4dcd-81d5-997642f178b9: 13146432
                      requestId: 4e538382-dbd8-449e-988a-4ac639ebe72b-1573203600264
                      schema:
                        name: _xdm.context.profile
                      properties:
                        scheduleId: 4e538382-dbd8-449e-988a-4ac639ebe72b
                        runId: e6c1308d-0d4b-4246-b2eb-43697b50a149
                      _links:
                        cancel:
                          href: /segment/jobs/b31aed3d-b3b1-4613-98c6-7d3846e8d48f
                          method: DELETE
                        checkStatus:
                          href: /segment/jobs/b31aed3d-b3b1-4613-98c6-7d3846e8d48f
                          method: GET
                      updateTime: 1573204395000
                      creationTime: 1573203600535
                      updateEpoch: 1573204395
                    _links:
                      next: {}
                Less than or equal to 1500 segment definitions:
                  value:
                    _page:
                      totalCount: 14
                      pageSize: 14
                    children:
                      id: 468eeefd-95a2-45a1-8bfc-b806dafce7ee
                      imsOrgId: "E95186D65A28ABF00A495D82@AdobeOrg"
                      sandbox:
                        sandboxId: "28e74200-e3de-11e9-8f5d-7f27416c5f0d"
                        sandboxName: prod
                        type: production
                        default: true
                      profileInstanceId: 'ups'
                      source: scheduler
                      status: PROCESSING
                      batchId: 65e18145-a5e8-4993-94f3-c70fadaa1fef
                      computeJobId: 11037
                      computeGatewayJobId: 9ea97b25-a0f5-410e-ae87-b2d85e58f399
                      segments:
                       [{
                        segmentId: '30230300-ccf1-48ad-8012-c5563a007069',
                        segment: {
                          id: 30230300-ccf1-48ad-8012-c5563a007069,
                          expression: {
                            type: PQL,
                              format: pql/text,
                              value: "workAddress.country = \"US\""
                          },
                          mergePolicyId: "25c548a0-ca7f-4dcd-81d5-997642f178b9",
                          mergePolicy: {
                            id: 25c548a0-ca7f-4dcd-81d5-997642f178b9,
                            version: 1
                          }
                            
                        }
                       }]
                      metrics:
                        totalTime:
                          startTimeInMs: 1573203617195
                          endTimeInMs: 1573204395655
                          totalTimeInMs: 778460
                        profileSegmentationTime:
                          startTimeInMs: 1573204266727
                          endTimeInMs: 1573204395655
                          totalTimeInMs: 128928
                        totalProfiles: 13146432
                        segmentedProfileCounter:
                          94509dba-7387-452f-addc-5d8d979f6ae8: 1033
                        segmentedProfileByNamespaceCounter:
                          94509dba-7387-452f-addc-5d8d979f6ae8:
                            tenantiduserobjid: 1033
                            campaign_profile_mscom_mkt_prod2: 1033
                        segmentedProfileByStatusCounter:
                          94509dba-7387-452f-addc-5d8d979f6ae8:
                            exited: 144646
                            existing: 10
                            realized: 2056
                        totalProfilesByMergePolicy:
                          25c548a0-ca7f-4dcd-81d5-997642f178b9: 13146432
                      requestId: 4e538382-dbd8-449e-988a-4ac639ebe72b-1573203600264
                      schema:
                        name: _xdm.context.profile
                      properties:
                        scheduleId: 4e538382-dbd8-449e-988a-4ac639ebe72b
                        runId: e6c1308d-0d4b-4246-b2eb-43697b50a149
                      _links:
                        cancel:
                          href: /segment/jobs/b31aed3d-b3b1-4613-98c6-7d3846e8d48f
                          method: DELETE
                        checkStatus:
                          href: /segment/jobs/b31aed3d-b3b1-4613-98c6-7d3846e8d48f
                          method: GET
                      updateTime: 1573204395000
                      creationTime: 1573203600535
                      updateEpoch: 1573204395
                    _links:
                      next: {}
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        500:
          x-summary: "Internal server error"
          description: There was an issue reading the segment job.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    post:
      tags:
      - Segment jobs
      summary: Create a segment job request
      operationId: createSegmentJob
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-profile-instance-id
          in: header
          description: 'The ID of the Profile Instance. **Example**: `ups`'
          schema:
            type: string
          example: ups
        - name: x-request-id
          in: header
          description: 'A unique ID that can be used to track a request. **Example**: `q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA`'
          schema:
            type: string
          example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      requestBody:
        description: List of segment jobs. Each should be in JSON format.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SegmentJobRequest'
            examples:
              Less than or equal to 1500 segment definitions:
                summary: Less than 1500 segment definitions
                value: 
                  - segmentId: 4afe34ae-8c98-4513-8a1d-67ccaa54bc05
              More than 1500 segment definitions:
                summary: More than 1500 segment definitions
                description: Creating a segment job that uses more than 1500 segment definitions is **strongly** not recommended. 
                value: 
                  schema:
                    name: "_xdm.context.profile"
                  segments:
                    - "segmentId": "*"
        required: true
      responses:
        200:
          x-summary: "Success"
          description: The segment job request was successfully posted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentJob'
        400:
          x-summary: "Error"
          description:  The segment job request could not be posted. Double check your request body content.
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        429:
          x-summary: "Rate limit"
          description: There are too many segmentation jobs in processing at the moment. Try again at a later time.
          content: {}
        500:
          x-summary: "Internal service error"
          description: There was an issue reading the segment job.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
      x-codegen-request-body-name: body
  /segment/jobs/{SEGMENT_JOB_ID}:
    get:
      tags:
      - Segment jobs
      summary: Retrieve a segment job request
      operationId: retrieveSegmentJob
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: SEGMENT_JOB_ID
          in: path
          description: The ID of the segment job request.
          required: true
          schema:
            type: string
        - name: x-request-id
          in: header
          description: An optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          schema:
            type: string
      responses:
        200:
          x-summary: "Success"
          description: The segment job request was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentJob'
              examples:
                Less than or equal to 1500 segment definitions:
                  value:
                    id: 468eeefd-95a2-45a1-8bfc-b806dafce7ee
                    imsOrgId: "E95186D65A28ABF00A495D82@AdobeOrg"
                    sandbox:
                      sandboxId: "28e74200-e3de-11e9-8f5d-7f27416c5f0d"
                      sandboxName: prod
                      type: production
                      default: true
                    profileInstanceId: 'ups'
                    source: scheduler
                    status: PROCESSING
                    batchId: 65e18145-a5e8-4993-94f3-c70fadaa1fef
                    computeJobId: 11037
                    computeGatewayJobId: 9ea97b25-a0f5-410e-ae87-b2d85e58f399
                    segments:
                     - segmentId: '30230300-ccf1-48ad-8012-c5563a007069'
                       segment:
                        id: 30230300-ccf1-48ad-8012-c5563a007069
                        expression:
                          type: PQL
                          format: pql/text
                          value: "workAddress.country = \"US\""
                        mergePolicyId: "25c548a0-ca7f-4dcd-81d5-997642f178b9"
                        mergePolicy:
                          id: 25c548a0-ca7f-4dcd-81d5-997642f178b9
                          version: 1
                    metrics:
                      totalTime:
                        startTimeInMs: 1573203617195
                        endTimeInMs: 1573204395655
                        totalTimeInMs: 778460
                      profileSegmentationTime:
                        startTimeInMs: 1573204266727
                        endTimeInMs: 1573204395655
                        totalTimeInMs: 128928
                      totalProfiles: 13146432
                      segmentedProfileCounter:
                        94509dba-7387-452f-addc-5d8d979f6ae8: 1033
                      segmentedProfileByNamespaceCounter:
                        94509dba-7387-452f-addc-5d8d979f6ae8:
                          tenantiduserobjid: 1033
                          campaign_profile_mscom_mkt_prod2: 1033
                      segmentedProfileByStatusCounter:
                        94509dba-7387-452f-addc-5d8d979f6ae8:
                          exited: 144646
                          existing: 10
                          realized: 2056
                      totalProfilesByMergePolicy:
                        25c548a0-ca7f-4dcd-81d5-997642f178b9: 13146432
                    requestId: 4e538382-dbd8-449e-988a-4ac639ebe72b-1573203600264
                    schema:
                      name: _xdm.context.profile
                    properties:
                      scheduleId: 4e538382-dbd8-449e-988a-4ac639ebe72b
                      runId: e6c1308d-0d4b-4246-b2eb-43697b50a149
                    _links:
                      cancel:
                        href: /segment/jobs/b31aed3d-b3b1-4613-98c6-7d3846e8d48f
                        method: DELETE
                      checkStatus:
                        href: /segment/jobs/b31aed3d-b3b1-4613-98c6-7d3846e8d48f
                        method: GET
                    updateTime: 1573204395000
                    creationTime: 1573203600535
                    updateEpoch: 1573204395
                More than 1500 segment definitions:
                  value:
                    id: 468eeefd-95a2-45a1-8bfc-b806dafce7ee
                    imsOrgId: "E95186D65A28ABF00A495D82@AdobeOrg"
                    sandbox:
                      sandboxId: "28e74200-e3de-11e9-8f5d-7f27416c5f0d"
                      sandboxName: prod
                      type: production
                      default: true
                    profileInstanceId: 'ups'
                    source: scheduler
                    status: PROCESSING
                    batchId: 65e18145-a5e8-4993-94f3-c70fadaa1fef
                    computeJobId: 11037
                    computeGatewayJobId: 9ea97b25-a0f5-410e-ae87-b2d85e58f399
                    segments:
                      - segmentId: '*'
                    metrics:
                      totalTime:
                        startTimeInMs: 1573203617195
                        endTimeInMs: 1573204395655
                        totalTimeInMs: 778460
                      profileSegmentationTime:
                        startTimeInMs: 1573204266727
                        endTimeInMs: 1573204395655
                        totalTimeInMs: 128928
                      totalProfiles: 13146432
                      segmentedProfileCounter:
                        94509dba-7387-452f-addc-5d8d979f6ae8: 1033
                      segmentedProfileByNamespaceCounter:
                        94509dba-7387-452f-addc-5d8d979f6ae8:
                          tenantiduserobjid: 1033
                          campaign_profile_mscom_mkt_prod2: 1033
                      segmentedProfileByStatusCounter:
                        94509dba-7387-452f-addc-5d8d979f6ae8:
                          exited: 144646
                          existing: 10
                          realized: 2056
                      totalProfilesByMergePolicy:
                        25c548a0-ca7f-4dcd-81d5-997642f178b9: 13146432
                    requestId: 4e538382-dbd8-449e-988a-4ac639ebe72b-1573203600264
                    schema:
                      name: _xdm.context.profile
                    properties:
                      scheduleId: 4e538382-dbd8-449e-988a-4ac639ebe72b
                      runId: e6c1308d-0d4b-4246-b2eb-43697b50a149
                    _links:
                      cancel:
                        href: /segment/jobs/b31aed3d-b3b1-4613-98c6-7d3846e8d48f
                        method: DELETE
                      checkStatus:
                        href: /segment/jobs/b31aed3d-b3b1-4613-98c6-7d3846e8d48f
                        method: GET
                    updateTime: 1573204395000
                    creationTime: 1573203600535
                    updateEpoch: 1573204395
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The segment job request was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    delete:
      tags:
      - Segment jobs
      summary: Cancel a segment job request
      operationId: deleteSegmentJob
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: SEGMENT_JOB_ID
          in: path
          description: The ID of the segment job request.
          required: true
          schema:
            type: string
        - name: x-request-id
          in: header
          description: An optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          schema:
            type: string
      responses:
        204:
          x-summary: "Success"
          description: The segment job request has been marked for cancellation.
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The segment job request was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
  /segment/jobs/bulk-get:
    post:
      tags:
      - Segment jobs
      summary: Retrieve multiple segment jobs using multiple job IDs
      operationId: bulkGetSegmentJobs
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
      requestBody:
        description: An array of the segment jobs IDs that you are trying to retrieve.
        content:
          'application/json':
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items: 
                    type: object
                    properties: 
                      id: 
                        type: string 
                        example: cc3419d3-0389-47f1-b174-fead6b3c830d
            example: 
              ids:
                - id: cc3419d3-0389-47f1-b174-fead6b3c830d
                - id: c527dc3f-07fe-4b96-be4e-23f38e734ff8
        required: true
      responses:
        207:
          x-summary: "Success"
          description: The details of each segment jobs is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSegmentJobs'
              examples:
                Less than or equal to 1500 segment definitions:
                  value:
                    results:
                      "cc3419d3-0389-47f1-b174-fead6b3c830d":
                        id: cc3419d3-0389-47f1-b174-fead6b3c830d
                        imsOrgId: "E95186D65A28ABF00A495D82@AdobeOrg"
                        sandbox:
                          sandboxId: "28e74200-e3de-11e9-8f5d-7f27416c5f0d"
                          sandboxName: prod
                          type: production
                          default: true
                        profileInstanceId: ups
                        status: PROCESSING
                        batchId: "651fc109-3963-48d2-aa98-9e3cc2003bac"
                        computeJobId: 39312
                        computeGatewayJobId: "a0099ab6-11ab-4c2b-a0ea-6162e16806bd"
                        segments:
                         - segmentId: 'cc3419d3-0389-47f1-b174-fead6b3c830d'
                           segment: 
                            id: cc3419d3-0389-47f1-b174-fead6b3c830d,
                            expression: 
                              type: PQL
                              format: pql/text
                              value: "workAddress.country = \"US\""
                            mergePolicyId: "25c548a0-ca7f-4dcd-81d5-997642f178b9"
                            mergePolicy: 
                              id: 25c548a0-ca7f-4dcd-81d5-997642f178b9,
                              version: 1
                        metrics:
                          totalTime:
                            startTimeInMs: 1573203617195
                            endTimeInMs: 1573204395655
                            totalTimeInMs: 778460
                          profileSegmentationTime:
                            startTimeInMs: 1573204266727
                            endTimeInMs: 1573204395655
                            totalTimeInMs: 128928
                          totalProfiles: 13146432
                          segmentedProfileCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8: 1033
                          segmentedProfileByNamespaceCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8:
                              tenantiduserobjid: 1033
                              campaign_profile_mscom_mkt_prod2: 1033
                          segmentedProfileByStatusCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8:
                              exited: 144646
                              existing: 10
                              realized: 2056
                          totalProfilesByMergePolicy:
                            25c548a0-ca7f-4dcd-81d5-997642f178b9: 13146432
                        updateTime: 1573204395000
                        creationTime: 1573203600535
                      "c527dc3f-07fe-4b96-be4e-23f38e734ff8":
                        id: c527dc3f-07fe-4b96-be4e-23f38e734ff8
                        imsOrgId: "E95186D65A28ABF00A495D82@AdobeOrg"
                        sandbox:
                          sandboxId: "28e74200-e3de-11e9-8f5d-7f27416c5f0d"
                          sandboxName: prod
                          type: production
                          default: true
                        status: SUCCEEDED
                        segments:
                          - segmentId: 'c527dc3f-07fe-4b96-be4e-23f38e734ff8'
                            segment:
                              id: c527dc3f-07fe-4b96-be4e-23f38e734ff8
                              expression:
                                type: PQL
                                format: pql/text
                                value: "workAddress.country = \"US\""
                              mergePolicyId: "25c548a0-ca7f-4dcd-81d5-997642f178b9"
                              mergePolicy: 
                                id: 25c548a0-ca7f-4dcd-81d5-997642f178b9
                                version: 1
                        metrics:
                          totalTime:
                            startTimeInMs: 1573203617195
                            endTimeInMs: 1573204395655
                            totalTimeInMs: 778460
                          profileSegmentationTime:
                            startTimeInMs: 1573204266727
                            endTimeInMs: 1573204395655
                            totalTimeInMs: 128928
                          totalProfiles: 13146432
                          segmentedProfileCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8: 1033
                          segmentedProfileByNamespaceCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8:
                              tenantiduserobjid: 1033
                              campaign_profile_mscom_mkt_prod2: 1033
                          segmentedProfileByStatusCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8:
                              exited: 144646
                              existing: 10
                              realized: 2056
                          totalProfilesByMergePolicy:
                            25c548a0-ca7f-4dcd-81d5-997642f178b9: 13146432
                        updateTime: 1573204395000
                        creationTime: 1573203600535
                More than 1500 segment definitions:
                  value:
                    results:
                      cc3419d3-0389-47f1-b174-fead6b3c830d:
                        id: cc3419d3-0389-47f1-b174-fead6b3c830d
                        imsOrgId: "E95186D65A28ABF00A495D82@AdobeOrg"
                        sandbox:
                          sandboxId: "28e74200-e3de-11e9-8f5d-7f27416c5f0d"
                          sandboxName: prod
                          type: production
                          default: true
                        status: PROCESSING
                        segments:
                          - segmentId: '*'
                        metrics:
                          totalTime:
                            startTimeInMs: 1573203617195
                            endTimeInMs: 1573204395655
                            totalTimeInMs: 778460
                          profileSegmentationTime:
                            startTimeInMs: 1573204266727
                            endTimeInMs: 1573204395655
                            totalTimeInMs: 128928
                          totalProfiles: 13146432
                          segmentedProfileCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8: 1033
                          segmentedProfileByNamespaceCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8:
                              tenantiduserobjid: 1033
                              campaign_profile_mscom_mkt_prod2: 1033
                          segmentedProfileByStatusCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8:
                              exited: 144646
                              existing: 10
                              realized: 2056
                          totalProfilesByMergePolicy:
                            25c548a0-ca7f-4dcd-81d5-997642f178b9: 13146432
                        updateTime: 1573204395000
                        creationTime: 1573203600535
                      c527dc3f-07fe-4b96-be4e-23f38e734ff8:
                        id: c527dc3f-07fe-4b96-be4e-23f38e734ff8
                        imsOrgId: "E95186D65A28ABF00A495D82@AdobeOrg"
                        sandbox:
                          sandboxId: "28e74200-e3de-11e9-8f5d-7f27416c5f0d"
                          sandboxName: prod
                          type: production
                          default: true
                        status: SUCCEEDED
                        segments:
                          - segmentId: '*'
                        metrics:
                          totalTime:
                            startTimeInMs: 1573203617195
                            endTimeInMs: 1573204395655
                            totalTimeInMs: 778460
                          profileSegmentationTime:
                            startTimeInMs: 1573204266727
                            endTimeInMs: 1573204395655
                            totalTimeInMs: 128928
                          totalProfiles: 13146432
                          segmentedProfileCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8: 1033
                          segmentedProfileByNamespaceCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8:
                              tenantiduserobjid: 1033
                              campaign_profile_mscom_mkt_prod2: 1033
                          segmentedProfileByStatusCounter:
                            94509dba-7387-452f-addc-5d8d979f6ae8:
                              exited: 144646
                              existing: 10
                              realized: 2056
                          totalProfilesByMergePolicy:
                            25c548a0-ca7f-4dcd-81d5-997642f178b9: 13146432
                        updateTime: 1573204395000
                        creationTime: 1573203600535                
      x-codegen-request-body-name: body
  /preview:
    post:
      tags:
      - Previews
      summary: Create a preview job
      operationId: createPreview
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
      requestBody:
        description: |- 
          - **predicateExpression**: The predicate expression that is to be evaluated.
          - **predicateType**: (Default: PQL) The only value that is available to use for this is PQL for now.
          - **predicateModel**: (Default: xdm.model.profile) The model against which this predicate is to be evaluated. Please note that 'touchpoint' is not treated as model as it can be associated with any of the models like profile.
          - **graphType**: The graph type that you want to get the cluster from. Possible values are \"none\" (perform no identity stitching) and \"pdg\" (perform identity stitching based on your private identity graph).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePreviewRequest'
        required: true
      responses:
        201:
          x-summary: "Success"
          description: The preview job was successfully posted.
          headers:
            X-Location:
              description: The HREF to the profile preview.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewQueryResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
      x-codegen-request-body-name: body
  /preview/{PREVIEW_ID}:
    get:
      tags:
      - Previews
      summary: Retrieve the results of a preview job
      operationId: retrievePreview
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: PREVIEW_ID
          in: path
          description: The ID of the preview job.
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: The offset of the page.
          schema:
            type: string
          example: offset=10200
        - name: limit
          in: query
          description: The number of entries that should be present on a page. If not
            specified, this value will be 1000.
          schema:
            type: integer
          example: 100
      responses:
        200:
          x-summary: "Success"
          description: The results of the preview job have been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The preview job was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    delete:
      tags:
      - Previews
      summary: Cancel or delete a preview job
      operationId: deletePreview
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: PREVIEW_ID
          in: path
          description: The ID of the preview job.
          required: true
          schema:
            type: string
      responses:
        200:
          x-summary: "Success"
          description: The preview job was successfully cancelled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The preview job was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
  /estimate/{ESTIMATE_ID}:
    get:
      tags:
      - Estimates
      summary: Retrieve the results of an estimate job
      operationId: retrieveEstimate
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: ESTIMATE_ID
          in: path
          description: The ID of the estimate job.
          required: true
          schema:
            type: string
      responses:
        200:
          x-summary: "Success"
          description: The estimate job was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The estimate job was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
  /config/schedules:
    get:
      tags:
      - Schedules
      summary: List schedules
      operationId: listSchedules
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: An optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          schema:
            type: string
        - name: start
          in: query
          description: Return results from a specific page offset. For example, `start=3`.
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit response to a specific number of objects. Must be a positive
            number. For example, `limit=10`
          schema:
            type: integer
      responses:
        200:
          x-summary: "Success"
          description: A list of schedules is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulesResponse'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        500:
          x-summary: "Internal service error"
          description: There was an issue reading the schedules.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    post:
      tags:
      - Schedules
      summary: Create a schedule
      description: This endpoint is used to create a schedule, including specifying the time when the schedule should be triggered. Note that the scheduler is updated periodically (approximately every 30 minutes), so changes to a schedule may not go into effect immediately.
      operationId: createSchedule
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: An optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          schema:
            type: string
      requestBody:
        description: >- 
          - **name**: **(Required)** The name of schedule. Must be a string.
          - **type**: **(Required)** The job type in string format.
            - Supported types: `batch_segmentation` and `export`.
          - **properties**: **(Required)** An object containing additional properties related to the schedule.
          - **properties.segments**: **(Required when `type` equals `batch_segmentation`)** Using `[\"*\"]` ensures all segment definitions are included.
          - **schedule**: **(Required)** A string containing the job schedule. Jobs can only be scheduled to run once a day, meaning you cannot schedule a job to run more than once during a 24 hour period. The example shown (`0 30 13 * * ?`) means the job is triggered every day at 13:30:00 UTC. For more information, please review the [cron expression format](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) documentation.
          - **state**: *(Optional)* String containing the schedule state. Available values: `active` and `inactive`. Default value is `inactive`."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreate'
        required: true
      responses:
        200:
          x-summary: "Success"
          description: The schedule was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        400:
          x-summary: "Error"
          description:  The schedule posted is invalid.
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        500:
          x-summary: "Internal service error"
          description: There was an issue reading schedules.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
      x-codegen-request-body-name: body
  /config/schedules/{SCHEDULE_ID}:
    get:
      tags:
      - Schedules
      summary: Retrieve a schedule
      description: The scheduler is updated periodically (approximately every 30 minutes), so changes to a schedule may not go into effect immediately.
      operationId: retrieveSchedule
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: SCHEDULE_ID
          in: path
          description: The ID of the schedule against which the operation is being performed.
          required: true
          schema:
            type: string
        - name: x-request-id
          in: header
          description: An optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          schema:
            type: string
      responses:
        200:
          x-summary: "Success"
          description: The schedule was successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The schedule was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    delete:
      tags:
      - Schedules
      summary: Delete a schedule
      operationId: deleteSchedule
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: SCHEDULE_ID
          in: path
          description: The ID of the schedule against which the operation is being performed.
          required: true
          schema:
            type: string
        - name: x-request-id
          in: header
          description: An optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          schema:
            type: string
      responses:
        204:
          x-summary: "Success"
          description:  (No content) The schedule was deleted successfully deleted.
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        404:
          x-summary: "Not found"
          description: The schedule was not found.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
    patch:
      tags:
      - Schedules
      summary: Update a schedule
      description: This endpoint is ued to update a schedule, including changing the trigger time or enabling/disabling the schedule. Note that the scheduler is updated periodically (approximately every 30 minutes), so changes to a schedule may not go into effect immediately.
      operationId: updateSchedule
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: SCHEDULE_ID
          in: path
          description: The ID of the schedule against which the operation is being performed.
          required: true
          schema:
            type: string
        - name: x-request-id
          in: header
          description: An optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          schema:
            type: string
      requestBody:
        description: 'Use JSON Patch formatting to update the schedule. Note: You must use an "add" operation to add or update the given "path" with the given "value".'
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schedulePatchOperation'
            examples: 
              "Update schedule state":
                value: 
                  - op: add
                    path: /state
                    value: "active"
              "Update cron schedule":
                value: 
                  - op: add
                    path: /schedule
                    value: "0 0 2 * * ?"
        required: true
      responses:
        204:
          x-summary: "Success"
          description:  (No content) The schedule was successfully updated.
          content: {}
        400:
          x-summary: "Error"
          description:  The schedule is invalid.
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        429:
          x-summary: "Rate limit"
          description: There are too many schedule update requests processing at the moment. Try again at a later time.
          content: {}
        500:
          x-summary: "Internal service error"
          description: There was an issue reading the schedule.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
      x-codegen-request-body-name: body
  /search/namespaces:
    get:
      tags:
      - Segment search
      summary: List search count results
      description: This endpoint is used to retrieve a list of search count results, which is queried across all namespaces.
      operationId: listSearchCounts
      parameters:
        - name: schema.name
          in: query
          description: The schema class value associated with the search objects. Currently, only `_xdm.context.segmentdefinition` is supported.
          required: true
          schema:
            type: string
          example: _xdm.context.segmentdefinition
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-ups-search-version
          in: header
          description: The version of the Search API used. The only supported version
            is `1.0`.
          schema:
            type: string
          example: "1.0"
        - name: s
          in: query
          description: The search query, based on the Lucene query syntax.
          schema:
            type: string
          example: name:test
      responses:
        200:
          x-summary: "Success"
          description: Retrieve a list of search counts, per namespace, based on the specified query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNamespaceList'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
  /search/entities:
    get:
      tags:
      - Segment search
      summary: List full-text indexed objects
      description: This endpoint retrieves a list of all full text indexed objects contained within a namespace.
      operationId: listFullTextIndexedObjects
      parameters:
        - name: schemaClass
          in: query
          description: The schema class value associated with the search objects. Currently, only `_xdm.context.segmentdefinition` is supported.
          required: true
          schema:
            type: string
          example: _xdm.context.segmentdefinition
        - name: namespace
          in: query
          description: The namespace you want to search within.
          required: true
          schema:
            type: string
          example: AAMTraits
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-ups-search-version
          in: header
          description: The version of the Search API used. The only supported version
            is `1.0`.
          schema:
            type: string
          example: "1.0"
        - name: s
          in: query
          description: The search query, based on the [Lucene query syntax](https://docs.microsoft.com/en-us/azure/search/query-lucene-syntax).
          schema:
            type: string
          example: name:test
        - name: entityId
          in: query
          description: The ID of the folder you want to search for external segment definitions in.
          schema:
            type: string
          example: fastMotorcyclesFolderid
        - name: limit
          in: query
          description: The number of search results to return per page. The maximum is 50.
          schema:
            type: number
          example: 10
        - name: page
          in: query
          description: The offset of the page. The first page starts at 0.
          schema:
            type: number
          example: 2
      responses:
        200:
          x-summary: "Success"
          description: A paginated list of search results. Folders are shown first, followed by external segment definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchEntityList'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
  /search/taxonomy:
    get:
      tags:
      - Segment search
      summary: Retrieve a search object's taxonomic information
      description: Show the search object's organization
      operationId: retrieveSearchObjectStructure
      parameters:
        - name: schema.name
          in: query
          description: The name of the schema being searched.
          required: true
          schema:
            type: string
          example: _xdm.context.segmentdefinition
        - name: namespace
          in: query
          description: namespace
          required: true
          schema:
            type: string
          example: AAMTraits
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - name: x-ups-search-version
          in: header
          description: The version of the Search API used.
          schema:
            type: string
          example: "1.0"
        - name: entityId
          in: query
          description: The ID of the object you want to get structural information about.
          required: true
          schema:
            type: string
          example: porshe911_id
      responses:
        200:
          x-summary: "Success"
          description: Taxonomic information associated with an entityId.  This returns an array of folders that contain the search object, the first element of the array is the root folder and last element of the array is search object's parent folder.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxonomySearchObject'
        403:
          x-summary: "Missing access permissions"
          description: Access is forbidden.
          content: {}
        503:
          x-summary: "Service unavailable"
          description: The service is unavailable.
          content: {}
components:
  schemas:
    AudiencesList:
      type: object
      properties:
        children:
          type: array
          description: A list of audiences.
          items:
            oneOf:
              - $ref: '#/components/schemas/PlatformGeneratedAudience'
              - $ref: '#/components/schemas/ExternallyGeneratedAudience'
        _page:
          type: object
          description: An object that shows what page the list is on.
          properties:
            totalCount:
              type: integer
              example: 111
              description: The total number of audiences.
            pageSize:
              type: integer
              example: 2
              description: The number of results contained on this page.
            next:
              type: integer
              example: 1
              description: The value needed for `start` to show the next page of results.
        _links:
          type: object
          properties:
            next:
              type: object
              properties:
                href:
                  type: string
                  example: "@/audiences?start=1&limit=2&totalCount=111"
                  description: A URI that can be used to access the next page.
          description: An object that contains useful links for the audiences.
    PlatformGeneratedAudience:
      type: object
      properties:
        id:
          type: string
          example: 60ccea95-1435-4180-97a5-58af4aa285ab
          description: The ID of the audience.
        audienceId:
          type: string
          example: 60ccea95-1435-4180-97a5-58af4aa285ab
          description: The ID of the audience. For a Platform-generated audience, this will be the same as `id`.
        schema:
          type: object
          properties:
            name:
              type: string
              example: "_xdm.context.profile"
          description: The Experience Data Model (XDM) schema class name.
        profileInstanceId:
          type: string
          example: ups
          description: A field that contains the value passed in by the `x-profile-instance-id` header. However, this field is currently **not** used.
        imsOrgId:
          type: string
          example: 1BD6382559DF0C130A49422D@AdobeOrg
          description: The ID of the audience's organization.
        sandbox:
          type: object
          description: Details about the sandbox the audience belongs to. More information about sandboxes can be found in the [sandbox overview]((https://adobe.com/go/sandbox-overview-en)).
          properties:
            sandboxId:
              type: string
              example: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
              description: The ID of the sandbox.
            sandboxName:
              type: string
              example: prod
              description: The name of the sandbox.
            type:
              type: string
              example: production
              description: The type of the sandbox. Possible values include `production` and `development`.
            default:
              type: boolean
              example: true
              description: A boolean value that states whether or not this sandbox is the default sandbox.
        name:
          type: string
          example: People who ordered in the last 30 days
          description: The name of the audience.
        description:
          type: string
          example: "Last 30 days"
          description: A description of the audience.
        expression:
          type: object
          properties:
            type:
              type: string
              example: "PQL"
            format:
              type: string
              example: "pql/text"
            value:
              type: string
              example: "workAddress.country=\"US\""
          description: The PQL expression for the audience.
        mergePolicyId:
          type: string
          example: ef006bbe-750e-4e81-85f0-0c6902192dcc
          description: The ID of the merge policy the audience belongs to.
        evaluationInfo:
          type: object
          properties:
            batch:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: false
              description: If this property is marked as enabled, the audience will be evaluated using batch segmentation.
            continuous:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: true
              description: If this property is marked as enabled, the audience will be evaluated using streaming segmentation.
            synchronous:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: false
              description: If this property is marked as enabled, the audience will be evaluated using edge segmentation.
          description: An object that describes how the audience is evaluated. 
        dataGovernancePolicy:
          type: object
          properties:
            excludeOptOut:
              type: boolean
              example: true
          description: Information about the audience's data governance policy.
        isSystem:
          type: boolean
          example: false
          description: A property that shows if the audience is system-generated. If the audience is system-generated, it will not be included in any results by default.
        creationTime:
          type: integer
          example: 1650374572000
          description: A UTC timestamp for when the audience was created, in milliseconds.
        updateEpoch:
          type: integer
          example: 1650374573
          description: A UTC timestamp for when the audience was updated, in seconds.
        updateTime:
          type: integer
          example: 1650374573000
          description: A UTC timestamp for when the audience was updated, in milliseconds.
        createEpoch:
          type: integer
          example: 1650374572
          description: A UTC timestamp for when the audience was created, in seconds.
        _etag:
          type: string
          example: "\"33120d7c-0000-0200-0000-625eb7ad0000\""
          description: A field used for tagging Platform-generated audiences for data usage enforcement. This value is **not** used for externally-generated audiences.
        dependents:
          type: array
          items:
            type: string
          example: []
          description: An array of audience IDs that the audience is dependent on. This value is used for audiences which are part of a segment of segments query.
        definedOn:
          type: array
          items:
            type: object
            properties:
              "meta:resourceType":
                type: string
                example: unions
              "meta:containerId":
                type: string
                example: tenant
              "$ref":
                type: string
                example: https://ns.adobe.com/xdm/context/profile__union
          description: This value is only used on Platform-generated audiences.
        dependencies:
          type: array
          items:
            type: string
          example: []
          description: An array of IDs that depend on the audience. This value is used for audiences which are part of a segment of segments query.
        "type":
          type: string
          example: SegmentDefinition
          description: A value that shows whether the audience is Platform-generated (`SegmentDefinition`) or externally-generated (`ExternalAudience`).
          enum: [SegmentDefinition, ExternalAudience]
        originName:
          type: string
          example: REAL_TIME_CUSTOMER_PROFILE
          description: "The name of the audience's origin. Can be one of the following values: `REAL_TIME_CUSTOMER_PROFILE`, `CUSTOM_UPLOAD`, `AUDIENCE_ORCHESTRATION`, `AUDIENCE_MANAGER`"
        overridePerformanceWarnings:
          type: boolean
          example: false
          description: A boolean that lets you override the performance warnings.
        createdBy:
          type: string
          example: audiences@AdobeId
          description: The ID of the user who created the audience.
        lifecycleState:
          type: string
          enum: [draft, published, inactive, archived]
          example: published
          description: "The status of the audience. <ul><li>`draft`: The audience is created</li><li>`published`: The audience is published</li><li>`inactive`: The audience is no longer active</li><li>`archived`: The audience is deleted.</li></ul>"
        labels:
          type: array
          items:
            type: string
          example: [core/C1]
          description: Object-level data usage and attribute-based access control labels that are relevant to the audience.
        namespace:
          type: string
          example: AEPSegments
          description: The namespace of the audience.
          enum: [AAM, AAMSegments, AAMTraits, AEPSegments]
    ExternallyGeneratedAudience:
      type: object
      properties:
        id:
          type: string
          example: 32a83b5d-a118-4bd6-b3cb-3aee2f4c30a1
          description: The ID of the audience.
        audienceId:
          type: string
          example: test-external-audience-id
          description: The ID of the audience. For an externally-generated audience, this value is client-generated and can be different than the `id` value.
        name:
          type: string
          example: externalAudience1
          description: The name of the audience.
        namespace:
          type: string
          example: aam
          description: The namespace of the audience.
          enum: [AAM, AAMSegments, AAMTraits, AEPSegments]
        imsOrgId:
          type: string
          example: 1BD6382559DF0C130A49422D@AdobeOrg
          description: The ID of the audience's organization.
        sandbox:
          type: object
          description: Details about the sandbox the audience belongs to. More information about sandboxes can be found in the [sandbox overview]((https://adobe.com/go/sandbox-overview-en)).
          properties:
            sandboxId:
              type: string
              example: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
              description: The ID of the sandbox.
            sandboxName:
              type: string
              example: prod
              description: The name of the sandbox.
            "type":
              type: string
              example: production
              description: The type of the sandbox. Possible values include `production` and `development`.
            default:
              type: boolean
              example: true
              description: A boolean value that states whether or not this sandbox is the default sandbox.
        isSystem:
          type: boolean
          example: false
          description: A property that shows if the audience is system-generated. If the audience is system-generated, it will not be included in any results by default.
        description:
          type: string
          example: "Last 30 days"
          description: A description of the audience.
        type:
          type: string
          example: "ExternalSegment"
          description: A value that shows whether the audience is Platform-generated (`SegmentDefinition`) or externally-generated (`ExternalAudience`).
          enum: [SegmentDefinition, ExternalAudience]
        originName:
          type: string
          example: "CUSTOM_UPLOAD"
          description: "The name of the audience's origin. Can be one of the following values: `REAL_TIME_CUSTOMER_PROFILE`, `CUSTOM_UPLOAD`, `AUDIENCE_ORCHESTRATION`, `AUDIENCE_MANAGER`"
        lifecycleState:
          type: string
          example: published
          enum: [draft, published, inactive, archived]
          description: "The status of the audience. <ul><li>`draft`: The audience is created</li><li>`published`: The audience is published</li><li>`inactive`: The audience is no longer active</li><li>`archived`: The audience is deleted.</li></ul>"
        createdBy:
          type: string
          example: externalAudience@AdobeID
          description: The ID of the user who created the audience.
        datasetId:
          type: string
          example: 6254cf3c97f8e31b639fb14d
          description: The ID of the dataset where the external audience data was ingested into.
        labels:
          type: array
          items:
            type: string
          example: 
            - core/C1
          description: Object-level data usage and attribute-based access control labels that are relevant to the audience.
        linkedAudienceRef:
          type: object
          properties:
            flowId:
              type: string
              example: 4685ea90-d2b6-11ec-9d64-0242ac120002
          description: Identifiers that point to metadata in other audience-related systems.
        creationTime:
          type: integer
          example: 1642745034000000
          description: A UTC timestamp for when the audience was created, in milliseconds.
        updateEpoch:
          type: integer
          example: 1649926314
          description: A UTC timestamp for when the audience was updated, in seconds.
        updateTime:
          type: integer
          example: 1649926314000
          description: A UTC timestamp for when the audience was updated, in milliseconds.
        createEpoch:
          type: integer
          example: 1642745034
          description: A UTC timestamp for when the audience was created, in seconds.
    UpdateAudienceName:
      type: object
      properties:
        audienceId:
          type: string
          example: test-external-audience-id
          description: The ID of the audience.
        name:
          type: string
          example: externalAudience1
          description: The name of the audience.
        namespace:
          type: string
          example: aam
          description: The namespace that the audience belongs to. Possible values include `AAM`, `AAMSegments`, `AAMTraits`, and `AEPSegments`.
        description:
          type: string
          example: People who ordered in the last 30 days.
          description: A description of the audience.
        type:
          type: string
          example: "ExternalAudience"
          description: A system-generated field that displays whether the audience is Platform-generated or is an externally generated audience. Possible values include `SegmentDefinition` and `ExternalAudience`.
        lifecycleState:
          type: string
          example: published
          description: A Platform-maintained status to show the status of the audience. Possible values include `draft`, `published`, `inactive`, and `archived`.
        datasetId:
          type: string
          example: 6254cf3c97f8e31b639fb14d
          description: The dataset where the audience data can be found.
        labels:
          type: array
          items:
            type: string
          example:
            - core/C1
          description: Object-level data usage and attribute-based access control labels that are relevant to the audience.
    UpdateAudiencePQL:
      type: object
      properties:
        audienceId:
          type: string
          example: 60ccea95-1435-4180-97a5-58af4aa285ab
          description: The ID of the audience.
        name: 
          type: string
          example: People who ordered in the last 30 days
          description: The name of the audience.
        profileInstanceId:
          type: string
          example: ups
          description: A field that contains the value passed in by the `x-profile-instance-id` header. However, this field is currently **not** used.
        description:
          type: string
          example: This audience is generated to see people who ordered in the last 30 days.
          description: A description of the audience.
        type:
          type: string
          example: SegmentDefinition
          description: A system-generated field that displays whether the audience is Platform-generated or is an externally generated audience. Possible values include `SegmentDefinition` and `ExternalAudience`.
        expression:
          type: object
          properties:
            type:
              type: string
              example: PQL
            format:
              type: string
              example: pql/text
            value:
              type: string
              example: "workAddress.country = \"US\""
          description: The PQL expression for the audience.
        schema:
          type: object
          properties:
            name:
              type: string
              example: "_xdm.context.profile"
          description: The Experience Data Model (XDM) schema class name.
        labels:
          type: array
          items:
            type: string
            example:
              - core/C1
          description: Object-level data usage and attribute-based access control labels that are relevant to the audience.
    CreatePlatformAudienceRequestBody:
      type: object
      properties:
        name:
          type: string
          example: "People who ordered in the last 30 days"
          description: The ID of the audience.
        profileInstanceId:
          type: string
          example: ups
        description:
          type: string
          example: "This audience is generated to see people who ordered in the last 30 days."
          description: A description of the audience.
        "type":
          type: string
          example: "SegmentDefinition"
          description: A field that displays whether the audience is Platform-generated or is an externally generated audience. Possible values include `SegmentDefinition` and `ExternalAudience`.
        expression:
          type: object
          properties:
            "type":
              type: string
              example: "PQL"
            format:
              type: string
              example: "pql/text"
            value:
              type: string
              example: "workAddress.country = \"US\""
          description: The PQL expression for the audience.
        schema:
          type: object
          properties:
            name:
              type: string
              example: "_xdm.context.profile"
          description: The Experience Data Model (XDM) schema class name.
        labels:
          type: array
          items:
            type: string
          example: 
            - "core/C1"
          description: Object-level data usage and attribute-based access control labels that are relevant to the audience.
    CreateExternalAudienceRequestBody:
      type: object
      properties:
        audienceId:
          type: string
          example: test-external-audience-id
          description: The ID of the audience.
        name:
          type: string
          example: externalAudience1
          description: The name of the audience.
        namespace:
          type: string
          example: aam
          description: The namespace that the audience belongs to. Possible values include `AAM`, `AAMSegments`, `AAMTraits`, and `AEPSegments`.
        description:
          type: string
          example: "This audience is generated to see people who ordered in the last 30 days."
          description: A description of the audience.
        type:
          type: string
          example: "ExternalAudience"
          description: A system-generated field that displays whether the audience is Platform-generated or is an externally generated audience. Possible values include `SegmentDefinition` and `ExternalAudience`.
        originName:
          type: string
          example: "CUSTOM_UPLOAD"
          description: The name of the audience's origin. Possible values include `REAL_TIME_CUSTOMER_PROFILE`, `CUSTOM_UPLOAD`, `AUDIENCE_ORCHESTRATION`, and `AUDIENCE_MANAGER`.
        datasetId:
          type: string
          example: "6254cf3c97f8e31b639fb14d"
          description: The dataset where the audience data can be found.
        labels:
          type: array
          items:
            type: string
          example: 
            - "core/C1"
          description: Object-level data usage and attribute-based access control labels that are relevant to the audience.
        linkedAudienceRef:
          type: object
          properties:
            flowId:
              type: string
              example: 4685ea90-d2b6-11ec-9d64-0242ac120002
          description: Identifiers that point to metadata in other audience-related systems.
    EstimateResponse:
      type: object
      properties:
        estimatedSize:
          type: integer
          format: int32
          example: 35935
        numRowsToRead:
          type: integer
          format: int32
          example: 35935
        estimatedNamespaceDistribution:
          type: array
          items:
            type: object
            properties:
              namespaceId:
                type: string
                example: "4"
              profilesMatchedSoFar:
                type: integer
                example: 11986
        state:
          type: string
          example: RESULT_READY
        profilesReadSoFar:
          type: integer
          format: int32
          example: 35935
        standardError:
          type: integer
          format: int32
          example: 0
        error:
          type: object
          properties:
            description:
              type: string
              example: ""
            traceback:
              type: string
              example: ""
        profilesMatchedSoFar:
          type: integer
          example: 12123
        totalRows:
          type: integer
          format: int32
          example: 35935
        confidenceInterval:
          type: string
          example: 95%
        _links:
          $ref: '#/components/schemas/PreviewLink'
    PreviewLink:
      required:
      - preview
      type: object
      properties:
        preview:
          type: string
          description: The URI to get more information about the estimate.
          example: https://platform.adobe.io/data/core/ups/preview/app-32be0328-3f31-4b64-8d84-acd0c4fbdad3/execution/0?previewQueryId={QUERY_ID}
    PreviewResponse:
      type: object
      properties:
        page:
          type: object
          description: The page information of the current response entity.
        link:
          type: string
          description: The HREF link to the preview.
        state:
          type: string
          description: The execution state of the query.
        results:
          type: array
          description: The list of end customer entities.
          items:
            $ref: '#/components/schemas/PreviewResults'
      description: The end customer entity response, with current page information and next page link.
    PreviewQueryResponse:
      required:
      - previewExecutionId
      - previewQueryId
      - previewQueryStatus
      - state
      type: object
      properties:
        previewQueryId:
          type: string
          description: An ID that can be used for debugging purposes.
          example: 4a45e853-ac91-4bb7-a426-150937b6af5c
        state:
          type: string
          description: The state of the preview job.
          example: RUNNING
        previewQueryStatus:
          type: string
          description: The state of the preview job.
          example: RUNNING
        previewId:
          type: string
          description: The ID for the preview job. You can use this ID to retrieve results of the preview job.
          example: MDoyOjRhNDVlODUzLWFjOTEtNGJiNy1hNDI2LTE1MDkzN2I2YWY1Yzo0Mg
        previewExecutionId:
          type: integer
          format: int32
          example: 42
    CreatePreviewRequest:
      type: object
      properties:
        predicateExpression:
          type: string
          description: The predicate expression that is to be evaluated.
          example: xEvent.metrics.commerce.abandons.value > 0
        predicateType:
          type: string
          description: The predicate expression type. By default, this is PQL.
          example: pql/text
        predicateModel:
          type: string
          description: The model in which the predicate is evaluated against. By default,
            this value is "xdm.model.profile".
          example: _xdm.context.profile
        graphType:
          type: string
          description: The graph type that you want to get the cluster from. If the value is `pdg`, identity stitching will be done based on your private identity graph. If the value is `none`, no identity stitching will be done.
          example: pdg
          enum:
          - pdg
          - none
    IndividualPreview:
      type: object
      properties:
        objectId:
          type: string
          description: A unique identifier of XDM object.
        _href:
          type: string
          description: The profile access link to the contents of an XDM object.
    PreviewResults:
      type: object
      properties:
        objectId:
          type: string
          description: A unique identifier of the XDM object.
        _href:
          type: string
          description: The profile access link to the contents of an XDM object.
        relatedObjects:
          type: array
          description: A list of related objectIds.
          items:
            $ref: '#/components/schemas/IndividualPreview'
    SegmentJobErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: The error code for the segment job.
          example: 8.0000018E7
        msg:
          type: string
          description: The segment job error message.
          example: 'com.microsoft.azure.documentdb.DocumentClientException: Message: {"Errors":["Request rate is large"]}'
        callStack:
          type: string
          description: Call stack
      description: The error response from the segment job.
    1.5kSegmentJob:
      required:
      - errors
      - metrics
      - segments
      type: object
      properties:
        id:
          type: string
          description: The segment job request ID.
          example: 468eeefd-95a2-45a1-8bfc-b806dafce7ee
        imsOrgId:
          type: string
          description: The organization ID that was provided.
          example: '{IMG_ORG}'
        profileInstanceId:
          type: string
          description: The ID of the profile instance.
          example: '{PROFILE_INSTANCE}'
        status:
          type: string
          description: The status of the segment job.
          example: PROCESSING
          enum:
          - NEW
          - QUEUED
          - PROCESSING
          - CANCELLING
          - CANCELLED
          - FAILED
          - SUCCEEDED
        batchId:
          type: string
          description: The ID of the batch.
          example: 65e18145-a5e8-4993-94f3-c70fadaa1fef
        computeJobId:
          type: integer
          description: The compute job ID.
          format: int64
          example: 1
        computeGatewayJobId:
          type: string
          description: The compute gateway job ID, which can be use to get the job status from compute gateway API.
          example: c3505859-d256-45d0-a6f3-c25f8f8508f5
        creationTime:
          type: integer
          description: The timestamp, as unix time in milliseconds, for when the segment job was created.
          format: int64
          example: 1233456789000
        updateTime:
          type: integer
          description: The timestamp, as unix time in milliseconds, for when the segment job was last updated.
          format: int64
          example: 1233456789000
        segments:
          type: array
          items:
            type: string
          example:
            - '*'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SegmentJobErrorResponse'
        metrics:
          required:
          - profileSegmentationTime
          - totalTime
          type: object
          properties:
            totalTime:
              type: object
              properties:
                startTimeInMs:
                  type: number
                  description: The timestamp, as unix time in milliseconds, for when the segment job request is created.
                  example: 1.23456789E+11
                endTimeInMs:
                  type: number
                  description: The timestamp, as unix time in milliseconds, for when the segment job is completed.
                  example: 1.23456799E+11
                totalTimeInMs:
                  type: number
                  description: The time it takes for the segment job to complete in milliseconds. This is calculated by subtracting "startTimeInMs" from "endTimeInMs".
                  example: 10000.0
              description: Information about the time it takes for the segment job to complete.
            profileSegmentationTime:
              type: object
              properties:
                startTimeInMs:
                  type: number
                  description: The timestamp, as unix time in milliseconds, for when the computation starts.
                  example: 1.23456789E+11
                endTimeInMs:
                  type: number
                  description: The timestamp, as unix time in milliseconds, for when the computation is completed.
                  example: 1.23456799E+11
                totalTimeInMs:
                  type: number
                  description: The computation time in milliseconds. This is calculated by subtracting the `startTimeInMs` from the `endTimeInMs`.
                  example: 10000.0
              description: Information about the computation time.
            totalProfile:
              type: integer
              description: Total number of scanned profiles.
              format: int64
              example: 1233456789000
            segmentedProfileCounter:
              type: object
              additionalProperties:
                type: number
              description: A map from segment definition IDs to the number of merged profiles in those segment definitions.
            segmentedProfileByNamespaceCounter:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  type: number
              description: The number of segmented profiles by namespace per segment definition ID.
            segmentedProfileByStatusCounter:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  type: number
              description: The number of segmented profiles by status per segment definition ID.
          description: Information about the segment job.
        requestId:
          type: string
          description: An optional ID that can be used for debugging purposes to identify the request.
          example: cc3d3381-8682-41d4-93bd-566e378624d3
        modelName:
          type: string
          description: The name of the model.
          example: _xdm.context.profile
        _links:
          type: object
          additionalProperties:
            type: string
          description: A link to get the job status or cancel a submitted job.
    ListSegmentJobs:
      type: object
      properties:
        results:
          type: object
          description: An object containing the request segment jobs.
          additionalProperties:
              $ref: "#/components/schemas/SegmentJob"
    SegmentJob:
      required:
      - metrics
      - segments
      type: object
      properties:
        id:
          type: string
          description: The segment job request ID.
          example: 468eeefd-95a2-45a1-8bfc-b806dafce7ee
        imsOrgId:
          type: string
          description: The organization ID that was provided.
          example: '{IMG_ORG}'
        sandbox:
          type: object
          properties: 
            sandboxId:
              type: string
              example: "28e74200-e3de-11e9-8f5d-7f27416c5f0d"
            sandboxName:
              type: string
              example: "prod"
            type:
              type: string
              example: "production"
            default:
              type: boolean
              example: "true"
        profileInstanceId:
          type: string
          description: The ID of the profile instance.
          example: '{PROFILE_INSTANCE}'
        status:
          type: string
          description: The status of the segment job.
          example: PROCESSING
          enum:
          - NEW
          - QUEUED
          - PROCESSING
          - CANCELLING
          - CANCELLED
          - FAILED
          - SUCCEEDED
        batchId:
          type: string
          description: The ID of the batch.
          example: 65e18145-a5e8-4993-94f3-c70fadaa1fef
        computeJobId:
          type: integer
          description: The compute job ID.
          format: int64
          example: 1
        computeGatewayJobId:
          type: string
          description: The compute gateway job ID, which can be use to get the job status from compute gateway API.
          example: c3505859-d256-45d0-a6f3-c25f8f8508f5
        creationTime:
          type: integer
          description: The timestamp, as unix time in milliseconds, for when the segment job was created.
          format: int64
          example: 1233456789000
        updateTime:
          type: integer
          description: The timestamp, as unix time in milliseconds, for when the segment job was last updated.
          format: int64
          example: 1233456789000
        segments:
          type: array
          items:
            $ref: '#/components/schemas/SegmentInfo'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SegmentJobErrorResponse'
        metrics:
          required:
          - profileSegmentationTime
          - totalTime
          type: object
          properties:
            totalTime:
              type: object
              properties:
                startTimeInMs:
                  type: number
                  description: The timestamp, as unix time in milliseconds, for when the segment job request is created.
                  example: 1.23456789E+11
                endTimeInMs:
                  type: number
                  description: The timestamp, as unix time in milliseconds, for when the segment job is completed.
                  example: 1.23456799E+11
                totalTimeInMs:
                  type: number
                  description: The time it takes for the segment job to complete in milliseconds. This is calculated by subtracting `startTimeInMs` from `endTimeInMs`.
                  example: 10000.0
              description: Information about the time it takes for the segment job to complete.
            profileSegmentationTime:
              type: object
              properties:
                startTimeInMs:
                  type: number
                  description: The timestamp, as unix time in milliseconds, for when the computation starts.
                  example: 1.23456789E+11
                endTimeInMs:
                  type: number
                  description: The timestamp, as unix time in milliseconds, for when the computation is completed.
                  example: 1.23456799E+11
                totalTimeInMs:
                  type: number
                  description: The computation time in milliseconds. This is calculated by subtracting the `startTimeInMs` from the `endTimeInMs`.
                  example: 10000.0
              description: Information about the computation time.
            totalProfiles:
              type: integer
              description: Total number of scanned profiles.
              format: int64
              example: 1233456789000
            totalProfilesByMergePolicy:
              type: object
              additionalProperties: 
                type: number
            segmentedProfileCounter:
              type: object
              additionalProperties:
                type: number
              description: A map from segment definition IDs to the number of merged profiles in those segment definitions.
            segmentedProfileByNamespaceCounter:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  type: number
              description: The number of segmented profiles by namespace per segment definition ID.
            segmentedProfileByStatusCounter:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  type: number
              description: The number of segmented profiles by status per segment definition ID.
          description: Information about the segment job.
        requestId:
          type: string
          description: An optional ID that can be used for debugging purposes to identify the request.
          example: cc3d3381-8682-41d4-93bd-566e378624d3
        modelName:
          type: string
          description: The name of the model.
          example: _xdm.context.profile
        _links:
          type: object
          additionalProperties:
            type: string
          description: A link to get the job status or cancel a submitted job.
    Expression:
      type: object
      properties:
        type:
          type: string
          description: The type of the expression.
          example: PQL
          enum:
          - PQL
          - ARL
        format:
          type: string
          description: The format of the expression.
          example: pql/text
          enum:
          - pql/text
          - pql/json
        value:
          type: string
          description: The query string, written as PQL.
          example: workAddress.country = "US"
      description: Information regarding the segment definition's expression.
    SegmentInfo:
      required:
      - segment
      type: object
      properties:
        segmentId:
          type: string
          description: The segment definition ID.
          example: 7863c010-e092-41c8-ae5e-9e533186752e
        segment:
          required:
          - expression
          - mergePolicy
          type: object
          properties:
            id:
              type: string
              description: The segment definition ID.
              example: 7863c010-e092-41c8-ae5e-9e533186752e
            version:
              type: integer
              description: The segment definition version.
              format: int32
              example: 1
            expression:
              $ref: '#/components/schemas/Expression'
            mergePolicyId:
              type: string
              example: 25c548a0-ca7f-4dcd-81d5-997642f178b9
            mergePolicy:
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the merge policy.
                  example: ups-default
                version:
                  type: integer
                  description: The version of the merge policy.
                  format: int32
                  example: 1
              description: Merge policy information for the segment definition.
          description: The metadata for the segment definitions.
      description: The segment definitions returned within a segment job.
    SegmentJobRequest:
      required:
      - segmentId
      type: object
      properties:
        segmentId:
          type: string
          description: The ID of the segment definition.
          example: 7863c010-e092-41c8-ae5e-9e533186752e
    CreateSegmentDefinition:
      required: 
        - name
        - schema
        - expression
      type: object
      properties: 
        name:
          type: string
          description: "The unique name for the segment definition."
          example: "People who ordered in the last 30 days"
        description:
          type: string
          description: "An optional description to describe the segment definition."
          example: "Last 30 days"
        profileInstanceId:
          type: string
          example: ups
        expression:
          type: object
          properties:
            type:
              type: string
              example: "PQL"
            format:
              type: string
              example: "pql/text"
            value:
              type: string
              example: 'workAddress.country = \"US\"'
        evaluationInfo:
          type: object
          properties:
            batch:
              type: object
              properties: 
                enabled:
                  type: boolean
                  example: true
            continuous:
              type: object
              properties: 
                enabled:
                  type: boolean
                  example: false 
            synchronous:
              type: object
              properties: 
                enabled:
                  type: boolean
                  example: false 
        schema:
          type: object
          properties:
            name:
              type: string
              example: "_xdm.context.profile"
        payloadSchema:
          type: string
          example: string

    SegmentDefinition:
      required:
      - expression
      - name
      - schema
      type: object
      properties:
        id:
          type: string
          example: 54669488-03ab-4e0d-a694-37fe49e32be8
        imsOrgId:
          type: string
          description: The ID of the organization related to the segment definition.
          example: '{ORG_ID}'
        name:
          type: string
          description: A unique name for the segment definition.
          example: People who ordered in the last 30 days
        mergePolicyId:
          type: string
          description: The ID of the merge policy.
          example: 5ed35fd8-6eeb-4ad2-bed9-43e695b8ac0b
        profileInstanceId:
          type: string
          description: The ID of the profile instance provided.
          example: ups
        description:
          type: string
          description: A brief description about the segment definition.
          example: Last 30 days
        expression:
          $ref: '#/components/schemas/Expression'
        schema:
          $ref: '#/components/schemas/SchemaClass'
        evaluationInfo:
          type: object
          properties:
            batch:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: true
              description: If this property is marked as enabled, the audience will be evaluated using batch segmentation.
            continuous:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: false
              description: If this property is marked as enabled, the audience will be evaluated using streaming segmentation.
            synchronous:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: false
              description: If this property is marked as enabled, the audience will be evaluated using edge segmentation.
          description: An object that describes how the audience is evaluated. 
        payloadSchema:
          type: string
        dataGovernancePolicy:
          type: object
          properties:
            excludeOptOut:
              type: boolean
              example: true
        creationTime:
          type: integer
          description: The timestamp, as unix time in milliseconds, for when the segment definition was created.
          format: int64
        updateTime:
          type: integer
          description: The timestamp, as unix time in milliseconds, for when the segment definition was last updated.
          format: int64
        updateEpoch:
          type: integer
          description: The timestamp, as unix time in seconds, for when the segment definition was last updated.
          format: int64
    MessageResponse:
      required:
      - message
      - status
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
    AdditionalFields:
      type: object
      properties:
        eventList:
          type: object
          properties:
            fields:
              type: string
              description: The fields filter for the event list.
            filter:
              type: object
              properties:
                fromIngestTimestamp:
                  type: string
                  description: Filters experience events ingested after the given timestamp. The timestamp should be written in the RFC 3339 format.
                  example: 2018-01-01T00:00:00Z
              description: The filter values for exporting the event list.
          description: The name of the additional field to be exported.
      description: Additional fields that need to be exported.
    FeedbackMetrics:
      type: object
      properties:
        startTimeInMs:
          type: number
          description: The start time, in milliseconds.
          example: 1.23456789E+11
        endTimeInMs:
          type: number
          description: The end time, in milliseconds.
          example: 1.23456799E+11
        totalTimeInMs:
          type: number
          description: The total time the export job takes, in milliseconds. This is calculated by subtracting the start time from the end time.
          example: 10000.0
      description: The metrics for the export job.
    Filter:
      type: object
      properties:
        segments:
          type: array
          description: An array of filter values for the export job.
          items:
            type: object
            properties:
              segmentId:
                type: string
                description: The ID of the segment definition.
                example: 52c26d0d-45f2-47a2-ab30-ed06abc981ff
              segmentNs:
                type: string
                description: The segment definition namespace. By default, the value is "ups".
                example: ups
              status:
                type: array
                description: Status filter for segmentIds, default- ["realized","existing"].
                items:
                  type: string
                  example: realized
            description: Segment definition values for filter.
        segmentQualificationTime:
          type: object
          properties:
            startTime:
              type: string
              description: The start time for the segment qualification.
              example: 2018-01-01T00:00:00Z
            endTime:
              type: string
              description: The end time for the segment qualification.
              example: 2018-02-01T00:00:00Z
          description: The timestamp for exporting when profiles entered or exited a segment definition. The timestamp should be written in RFC 3339 format.
        fromIngestTimestamp:
          type: string
          description: Filters profiles and experience events updated after the given timestamp. The timestamp should be written in RFC 3339 format.
          example: 2018-01-01T00:00:00Z
        emptyProfiles:
          type: boolean
          description: Boolean. Profiles can contain profile fragments, ExperienceEvent fragments, or both. Profiles with no profile fragments and only ExperienceEvent fragments are referred to as "emptyProfiles". To export all profiles in the profile store, including the "emptyProfiles", set the value of "emptyProfiles" to true. If "emptyProfiles" is set to false, only profiles with profile fragments in the store are exported. By default, "if "emptyProfiles" attribute is not included, only profiles containing profile fragments are exported.
          example: true
      description: Array of filter values for Export Job to export Profiles.
    MergePolicyObject:
      type: object
      properties:
        id:
          type: string
          description: The ID of the merge policy.
          example: timestampOrdered-none-mp
        version:
          type: number
          description: The version of the given merge policy. By default the value will be "Latest".
          example: 1.0
      description: An object that describes the items within a merge policy.
    ExportJobResponse:
      type: object
      properties:
        id:
          type: number
          description: The ID of the export job.
          example: 100.0
        jobType:
          type: string
          description: The type for the export job. It can be either batch or streaming.
          example: BATCH
          enum:
          - BATCH
          - STREAMING
        destination:
          type: object
          properties:
            datasetId:
              type: string
              description: The dataset ID of the destination.
              example: 5b7c86968f7b6501e21ba9df
            segmentPerBatch:
              type: boolean
              description: Determines if segment definition IDs will be all batched into a single batch ID. If true, each segment definition ID will get its own batch ID. If false, all segment definition IDs will be batched into a single batch ID.
              example: false
            batchId:
              type: string
              description: The batch ID of the destination.
              example: da5cfb4de32c4b93a09f7e37fa53ad52
            batches:
              type: object
              properties:
                segmentId:
                  type: string
                  description: The segment definition ID provided in the export job request.
                  example: 52c26d0d-45f2-47a2-ab30-ed06abc981ff
                segmentNs:
                  type: string
                  description: The namespace of the segment definition.
                  example: ups
                status:
                  type: array
                  description: The status filter for segmentIds, default- ["realized","existing"].
                  items:
                    type: string
                    example: realized
                batchId:
                  type: string
                  description: The batch ID for a particular segment definition ID export.
                  example: da5cfb4de32c4b93a09f7e37fa53ad52
              description: The object for multi-segment definition export feature and will only be returned when segmentPerBatch is marked as true. If segmentPerBatch is marked as false, batchId is returned in first level "batchId" field under "destination" object.
          description: The destination for the export job results.
        fields:
          type: string
          description: Column filters.
          example: identities.id,personalEmail.address
        schema:
          type: object
          properties:
            name:
              type: string
              description: The name of the schema.
              example: _xdm.context.profile
          description: The schema name for the export job.
        imsOrgId:
          type: string
          description: The organization ID that was provided.
          example: 1BD6382559DF0C130A49422D@AdobeOrg
        status:
          type: string
          description: The status of the export job.
          example: SUCCEEDED
          enum:
          - NEW
          - PROCESSING
          - SUCCEEDED
          - FAILED
        filter:
          $ref: '#/components/schemas/Filter'
        additionalFields:
          $ref: '#/components/schemas/AdditionalFields'
        mergePolicy:
          $ref: '#/components/schemas/MergePolicyObject'
        profileInstanceId:
          type: string
          description: The ID of the profile instance provided.
          example: ups
        errors:
          type: array
          description: The errors returned, in case of failure.
          items:
            type: object
            properties:
              code:
                type: string
                example: "0100000003"
              msg:
                type: string
                example: Error in Export Job
              callStack:
                type: string
                example: com.adobe.aep.unifiedprofile.common.logging.Logger
        metrics:
          type: object
          properties:
            totalTime:
              $ref: '#/components/schemas/FeedbackMetrics'
            profileExportTime:
              $ref: '#/components/schemas/FeedbackMetrics'
            aCPDatasetWriteTime:
              $ref: '#/components/schemas/FeedbackMetrics'
          description: The metrics for the export job.
        computeGatewayJobId:
          type: object
          properties:
            exportJob:
              type: string
              description: The compute gateway job ID for an export job.
              example: f3058161-7349-4ca9-807d-212cee2c2e94
            pushJob:
              type: string
              description: The compute gateway job ID for a push job.
              example: feaeca05-d137-4605-aa4e-21d19d801fc6
          description: The compute gateway job ID.
        creationTime:
          type: integer
          description: The timestamp, as unix time in seconds, for when the export job was created.
          format: int64
          example: 1538615973895
        updateTime:
          type: integer
          description: The timestamp, as unix time in seconds, for when the export job was last updated.
          format: int64
          example: 1538616233239
        requestId:
          type: string
          description: An optional ID that can be used for debugging purposes to identify the request.
          example: d995479c-8a08-4240-903b-af469c67be1f
      description: The information after submitting a export job.
    CreateExportJobRequest:
      type: object
      properties:
        fields:
          type: string
          description: The columns in which you can filter by. They are written as comma separated dot notation of the requested columns.
          example: identities.id,personalEmail.address
        mergePolicy:
          $ref: '#/components/schemas/MergePolicyObject'
        filter:
          $ref: '#/components/schemas/Filter'
        additionalFields:
          $ref: '#/components/schemas/AdditionalFields'
        destination:
          type: object
          properties:
            datasetId:
              type: string
              description: The dataset ID of the destination.
              example: 5b7c86968f7b6501e21ba9df
          description: The location where the exported data will be stored.
        schema:
          type: object
          properties:
            name:
              type: string
              description: The name of the schema.
              example: _xdm.context.profile
          description: The schema name for the data.
      description: The request for creating an export job.
    GetExportJobsResponse:
      type: object
      properties:
        records:
          type: array
          description: The list of export job records.
          items:
            $ref: '#/components/schemas/ExportJobResponse'
        page:
          type: object
          properties:
            sortField:
              type: string
              description: The field in which records are sorted by. By default, records are sorted by creation time.
              example: createdTime
            sort:
              type: string
              description: The order in which records are sorted. By default, records are sorted in descending order.
              example: desc
            pageOffset:
              type: string
              description: The offset of the page. By default, the offset is the creation time and job id for the last record on the page.
              example: 1540974701302_96
            pageSize:
              type: integer
              description: The total number of records of the page.
              format: int32
              example: 10
          description: The page information of the current response entity.
        link:
          type: object
          properties:
            next:
              type: string
              description: The href link to the next page of the records. If there are no more records, this value is empty.
          description: The href links.
    CancelExportJobResponse:
      type: object
      properties:
        status:
          type: boolean
          description: The status of the request.
          example: true
        message:
          type: string
          description: The message that will be sent when cancelling an export job.
          example: Export job has been marked for cancelling
      description: The response for cancelling an export job.
    SchemaClass:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The ID of the schema class.
          example: _xdm.context.profile
      description: The schema class.
    SchedulesResponse:
      required:
      - _page
      - children
      type: object
      properties:
        _page:
          $ref: '#/components/schemas/SchedulesPage'
        children:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
    SchedulesPage:
      required:
      - pageSize
      - totalCount
      type: object
      properties:
        totalCount:
          type: number
          description: The total number of schedules.
          example: 100.0
        pageSize:
          type: number
          description: The number of schedules per page.
          example: 100.0
        next:
          type: string
          description: The offset to start pagination for the schedules.
          example: "1"
    Schedule:
      required:
      - name
      - properties
      - schedule
      - type
      type: object
      properties:
        id:
          type: string
          description: A unique, read-only, system-generated schedule ID.
          example: 5e61e66e-e8b4-4a7b-8d41-70c74b0b981a
        name:
          type: string
          description: The name of the schedule.
          example: profile-default
        type:
          type: string
          description: The job type for the schedule.
          example: batch_segmentation
          enum:
          - batch_segmentation
        schedule:
          type: string
          description: A cron expression stating when the schedule should be triggered. Jobs can only be scheduled to run once a day, meaning you cannot schedule a job to run more than once during a 24 hour period. For more information, please review the [cron expression format](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) documentation.
          example: 0 0 1 * * ?
        state:
          type: string
          description: The state of the schedule. If the schedule is inactive, it must be activated before it will be triggered.
          example: inactive
          enum:
          - active
          - inactive
        properties:
          required:
          - segments
          type: object
          properties:
            segments:
              type: array
              description: This field is required if the job type is batch_segmentation. It holds a list of segment definitions which need to be evaluated at the scheduled time. Use `*` to evaluate all segment definitions.
              items:
                type: string
                example: '*'
          description: schedule properties
        createEpoch:
          type: integer
          description: The timestamp, as unix time in seconds, for when the schedule was created.
          example: 1234567890
        updateEpoch:
          type: integer
          description: The timestamp, as unix time in seconds, for when the schedule was last updated.
          example: 1234567890
      description: The schedule entity.
    ScheduleCreate:
      required:
      - name
      - properties
      - schedule
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the schedule being created.
          example: profile-default
        type:
          type: string
          description: The job type.
          example: batch_segmentation
          enum:
          - batch_segmentation
        properties:
          required:
          - segments
          type: object
          properties:
            segments:
              type: array
              description: This field is required if the job type is batch_segmentation. It holds a list of segment definitions which need to be evaluated at the scheduled time. Use `*` to evaluate all segment definitions.
              items:
                type: string
                example: '*'
          description: schedule properties
        schedule:
          type: string
          description: A cron expression stating when the schedule should be triggered. Jobs can only be scheduled to run once a day, meaning you cannot schedule a job to run more than once during a 24 hour period. For more information, please review the [cron expression format](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html)
            documentation.
          example: 0 0 1 * * ?
        state:
          type: string
          description: The state of the schedule. If the schedule is inactive, it must be activated before it will be triggered.
          example: inactive
          enum:
          - active
          - inactive
      description: The request body for creating a schedule.
    schedulePatchOperation:
      required:
      - op
      - path
      - value
      type: object
      properties:
        op:
          type: string
          description: The patch operation you are performing.
          example: add
          enum:
          - add
        path:
          type: string
          description: The path of the attribute that needs to be updated. This value can either be `/state` or `/schedule`, depending what you want to update.
          example: /state
        value:
          type: string
          description: The updated value for the field you want to update. If using the `/state` path, this value can either be active or inactive. If using the `/schedule` path, this will be the updated cron schedule.
          example: active
      description: Patch operation
    SearchNamespaceList:
      type: object
      properties:
        namespaces:
          type: array
          description: A list of namespaces and the number of search objects resulting from the search for each namespace.
          example:
          - namespace: AAMTraits
            displayName: AAMTraits
            count: 45
          - namespace: AAMSegments
            displayName: AAMSegments
            count: 10
          - namespace: SegmentsAISegments
            displayName: SegmentsAISegments
            count: 3
          items:
            $ref: '#/components/schemas/SearchNamespaceObject'
        totalCount:
          type: string
          description: The total number of namespaces returned.
          example: "3"
        status:
          type: object
          properties:
            message:
              type: string
              description: Extra information about the search status.
              example: Success
    SearchEntityList:
      type: object
      properties:
        entities:
          type: array
          description: A list of namespaces and the number of search objects resulting from the search for each entity.
          items:
            $ref: '#/components/schemas/SearchEntityObject'
        page:
          $ref: '#/components/schemas/SearchResultsPageObject'
        status:
          type: object
          properties:
            message:
              type: string
              description: Extra information about the search status.
              example: Search system is not setup correctly.
    TaxonomySearchObject:
      type: object
      properties:
        taxonomy:
          type: array
          description: List of folder IDs and names. This list starts at the root folder and then traverses through the subfolders until it reaches the folder that contains the search object specified by the entityId.
          example:
          - id: carTraits
            base64EncodedSourceId: RFVGamdpRk1BZy01ZTY4MzBmYzM5N2I0NTE4YWFhMWEwOGY1
            name: AAMTraits for Cars
            parentFolderId: root
          - id: fastCarsFolder
            base64EncodedSourceId: RFVGZ01BLTVlNjgzMGZjMzk3YjQ1MThhYWExYTA4Zg2
            name: Fast Cars
            parentFolderId: carTraits
          - id: porsche
            base64EncodedSourceId: REFGZ01CLTVlNjczMGZjMzk3YjQ1MThhZGIxYTA4Zg==
            name: Porshe
            parentFolderId: redCarsFolderId
          items:
            $ref: '#/components/schemas/TaxonomySearchValue'
        status:
          type: object
          properties:
            message:
              type: string
              description: Extra information about the search status.
              example: Cannot find entityId redcarsFolderId.
    TaxonomySearchValue:
      type: object
      properties:
        id:
          type: string
          description: The ID of the searchable object.
        base64EncodedSourceId:
          type: string
          description: The base64 encoded version of the source ID.
        name:
          type: string
          description: The name of the searchable object.
        parentFolderId:
          type: string
          description: The ID of the parent folder.
    SearchNamespaceObject:
      type: object
      properties:
        namespace:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the namespace.
              count:
                type: number
                description: The number of objects within the namespace.
    SearchEntityObject:
      type: object
      properties:
        id:
          type: string
          description: The ID of the object that is indexed for full text search.
          example: folder2
        base64EncodedSourceId:
          type: string
          description: The base64 encoded version of the sourceId.
          example: REZrcUMyX3Vmb2xkZXIyLUFBTVNlZ21lbnRzQS01ZTBlMjU2MzQyYzI0ZjE4YWQyZDc1MDg1
        sourceId:
          type: object
          description: The non-base64 encoded version of the sourceId.
        isFolder:
          type: boolean
          description: A boolean that shows whether or not the search object is a
            folder.
          example: true
        parentFolderId:
          type: string
          description: The ID of the folder that contains this search object or root if the object exists and the root level.
          example: root
        name:
          type: string
          description: The name of the search object.
          example: Segment definition that targets males age 45 to 50 living on the west coast
        description:
          type: string
          description: A description attached to the search object.
          example: Under development, targeting east coast millionaires that buy red cars.
      description: An individual search result after issuing a full text search.
    SearchResultsPageObject:
      type: object
      properties:
        totalCount:
          type: number
          description: The number of search objects found.
          example: 20323.0
        totalPages:
          type: integer
          description: The total number of pages resulting from your search.
          format: int32
          example: 100
        pageOffset:
          type: integer
          description: The current page offset. The first page has a value of 0.
          format: int32
          example: 0
        pageSize:
          type: integer
          description: The total number of search objects on this page.
          format: int32
          example: 10
  parameters:
    authorization:
      name: Authorization
      in: header
      description: The access token which can be copied from your Experience Platform integration, prefixed with "Bearer ". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      required: true
      schema:
        type: string
    x-gw-ims-org-id:
      name: x-gw-ims-org-id
      in: header
      description: The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      required: true
      schema:
        type: string
    x-api-key:
      name: x-api-key
      in: header
      description: The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
      required: true
      schema:
        type: string
    content-type:
      name: Content-Type
      in: header
      description: The type of content being sent in the body of the request. Should be 'application/json'.
      required: true
      schema:
        type: string
    x-request-id:
      name: x-request-id
      in: header
      description: An optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
      schema:
        type: string
    eventTypeId:
      name: eventTypeId
      in: path
      description: The ID of the event type.
      required: true
      schema:
        type: string
    x-sandbox-name:
      name: x-sandbox-name
      in: header
      description: All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
      required: true
      schema:
        type: string
    segmentId:
      name: SEGMENT_ID
      in: path
      description: The ID of the segment definition.
      required: true
      schema:
        type: string
      example: b9f6c339-f7f4-4141-b6c7-b562079da47c
    segmentJobId:
      name: SEGMENT_JOB_ID
      in: path
      description: The ID of the segment job request.
      required: true
      schema:
        type: string
      example: ca8fe8a8-0f38-478a-9905-fd515d1d2988
    previewId:
      name: PREVIEW_ID
      in: path
      description: The ID of the preview job.
      required: true
      schema:
        type: string
      example: MDowOjZkNDQ1NDhjLTQ5YmQtNDI5Mi1hNzMxLTU1NjU4ZGU1MThmNzo0MA==
    estimateId:
      name: ESTIMATE_ID
      in: path
      description: The ID of the estimate job.
      required: true
      schema:
        type: string
      example: MDowOjZkNDQ1NDhjLTQ5YmQtNDI5Mi1hNzMxLTU1NjU4ZGU1MThmNzo0MA==
    start:
      name: start
      in: query
      description: Return results from a specific page offset. For example, `start=3`.
      schema:
        type: integer
    limit:
      name: limit
      in: query
      description: Limit response to a specific number of objects. Must be a positive number. For example, `limit=10`
      schema:
        type: integer
    schedule-id:
      name: SCHEDULE_ID
      in: path
      description: The ID of the schedule against which the operation is being performed.
      required: true
      schema:
        type: string
  requestBodies:
    segment-body:
      description: |-
        - **name**: The name of the segment definition. This value must be unique.
        - **description**: A description of the segment definition.
        - **expression**: The PQL expression of the segment definition. Contains the PQL type, format, as well as the value of the PQL query.
        - **schema**: - The schema class for the segment definition.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/SegmentDefinition'
      required: true
  examples:
    AudiencesList:
      description: A sample list of audiences with no metrics.
      value:
        children:
          - id: 60ccea95-1435-4180-97a5-58af4aa285ab
            audienceId: 60ccea95-1435-4180-97a5-58af4aa285ab
            schema:
              name: _xdm.context.profile
            profileInstanceId: ups
            imsOrgId: 1BD6382559DF0C130A49422D@AdobeOrg
            sandbox:
              sandboxId: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
              sandboxName: prod
              type: production
              default: true
            isSystem: false
            name: People who ordered in the last 30 days
            description: This audience is generated to see people who ordered in the last 30 days.
            expression:
              type: PQL
              format: pql/text
              value: "workAddress.country = \"US\""
            mergePolicyId:
              ef006bbe-750e-4e81-85f0-0c6902192dcc
            evaluationInfo:
              batch:
                enabled: false
              continuous:
                enabled: true
              synchronous:
                enabled: false
            dataGovernancePolicy:
              excludeOptOut: true
            creationTime: 1650374572000
            updateEpoch: 1650374573
            updateTime: 1650374573000
            createEpoch: 1650374572
            _etag: "\"33120d7c-0000-0200-0000-625eb7ad0000\""
            dependents: []
            definedOn: 
              - meta:resourceType: unions
                meta:containerId: tenant
                "$ref": "https://ns.adobe.com/xdm/context/profile__union"
            dependencies: []
            type: SegmentDefinition
            overridePerformanceWarnings: false
            createdBy: audiences@AdobeId
            lifecycle: active
            labels:
              - core/C1
            namespace: AEPSegments
          - id: 32a83b5d-a118-4bd6-b3cb-3aee2f4c30a1
            audienceId: "test-external-audience-id"
            name: externalSegment1
            namespace: aam
            imsOrgId: 1BD6382559DF0C130A49422D@AdobeOrg
            sandbox:
              sandboxId: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
              sandboxName: prod
              type: production
              default: true 
            isSystem: false 
            description: This audience is generated to see people who ordered in the last 30 days.
            type: ExternalSegment
            lifecycle: published
            createdBy: externalSegments@AdobeID
            datasetId: 6254cf3c97f8e31b639fb14d
            labels:
              - core/C1
            audienceMeta:
              segmentStatus: ACTIVE
              AAMFolderId: 325813-testnew
            linkedAudienceRef:
              flowId: 4685ea90-d2b6-11ec-9d64-0242ac120002
            creationTime: 1642745034000000
            updateEpoch: 1649926314
            updateTime: 1649926314000
            createEpoch: 1642745034
        _pages:
          totalCount: 111
          pageSize: 2
          next: 1
        _links:
          next:
            href: "@/audiences?start=1&limit=2&totalCount=111"
    AudiencesListWithMetrics:
      description: A sample response of audiences with metrics.
      value:
        children:
          - id: 60ccea95-1435-4180-97a5-58af4aa285ab
            audienceId: 60ccea95-1435-4180-97a5-58af4aa285ab
            schema:
              name: _xdm.context.profile
            profileInstanceId: ups
            imsOrgId: 1BD6382559DF0C130A49422D@AdobeOrg
            sandbox:
              sandboxId: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
              sandboxName: prod
              type: production
              default: true
            isSystem: false
            name: People who ordered in the last 30 days
            description: This audience is generated to see people who ordered in the last 30 days.
            expression:
              type: PQL
              format: pql/text
              value: "workAddress.country = \"US\""
            mergePolicyId:
              ef006bbe-750e-4e81-85f0-0c6902192dcc
            evaluationInfo:
              batch:
                enabled: false
              continuous:
                enabled: true
              synchronous:
                enabled: false
            dataGovernancePolicy:
              excludeOptOut: true
            creationTime: 1650374572000
            updateEpoch: 1650374573
            updateTime: 1650374573000
            createEpoch: 1650374572
            _etag: "\"33120d7c-0000-0200-0000-625eb7ad0000\""
            dependents: []
            definedOn: 
              - meta:resourceType: unions
                meta:containerId: tenant
                "$ref": "https://ns.adobe.com/xdm/context/profile__union"
            dependencies: []
            metrics:
              type: export
              jobId: test-job-id
              id: 32a83b5d-a118-4bd6-b3cb-3aee2f4c30a1
              data:
                totalProfiles: 11200769
                totalProfilesByNamespace:
                  crmid: 11400769
                totalProfilesByStatus:
                  existing: 11400769
              createEpoch: 1653583927
              updateEpoch: 1653583927
            type: SegmentDefinition
            overridePerformanceWarnings: false
            createdBy: audiences@AdobeId
            lifecycle: active
            labels:
              - core/C1
            namespace: AEPSegments
          - id: 32a83b5d-a118-4bd6-b3cb-3aee2f4c30a1
            audienceId: "test-external-audience-id"
            name: externalSegment1
            namespace: aam
            imsOrgId: 1BD6382559DF0C130A49422D@AdobeOrg
            sandbox:
              sandboxId: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
              sandboxName: prod
              type: production
              default: true 
            isSystem: false 
            description: This audience is generated to see people who ordered in the last 30 days.
            type: ExternalSegment
            lifecycle: published
            createdBy: externalSegments@AdobeID
            datasetId: 6254cf3c97f8e31b639fb14d
            labels:
              - core/C1
            audienceMeta:
              segmentStatus: ACTIVE
              AAMFolderId: 325813-testnew
            linkedAudienceRef:
              flowId: 4685ea90-d2b6-11ec-9d64-0242ac120002
            metrics:
              type: export
              jobId: test-job-id
              id: 32a83b5d-a118-4bd6-b3cb-3aee2f4c30a1
              data:
                totalProfiles: 11200769
              createEpoch: 1653583927
              updateEpoch: 1653583927
            creationTime: 1642745034000000
            updateEpoch: 1649926314
            updateTime: 1649926314000
            createEpoch: 1642745034
        _pages:
          totalCount: 111
          pageSize: 2
          next: 1
        _links:
          next:
            href: "@/audiences?start=1&limit=2&totalCount=111"

    CreatePlatformAudienceRequestBody:
      description: A sample body for creating an audience.
      value:
        name: "People who ordered in the last 30 days"
        profileInstanceId: ups
        description: This audience is generated to see people who ordered in the last 30 days.
        type: SegmentDefinition
        expression:
          type: PQL
          format: pql/text
          value: "workAddress.country = \"US\""
        schema:
          name: _xdm.context.profile
        labels:
          - core/C1
    CreateExternalAudienceRequestBody:
      description: A sample body for creating an audience.
      value:
        audienceId: test-external-audience-id
        name: externalSegment1
        namespace: aam
        description: This audience is generated to see people who ordered in the last 30 days.
        type: ExternalSegment
        lifecycle: published
        datasetId: 6254cf3c97f8e31b639fb14d
        labels:
          - core/C1
        audienceMeta:
          segmentStatus: ACTIVE
          AAMFolderId: 325813-testnew
        linkedAudienceRef:
          flowId: 4685ea90-d2b6-11ec-9d64-0242ac120002
    UpdateAudienceName:
      description: A sample request body for updating an audience's name.
      value:
        audienceId: test-external-audience-id
        name: New externalSegment
        namespace: aam
        description: This audience is generated to see people who ordered in the last 30 days.
        type: ExternalSegment
        lifecycle: published
        datasetId: 6254cf3c97f8e31b639fb14d
        labels:
          - core/c1
    UpdateAudiencePQL:
      description: A sample request body for updating an audience's PQL expression.
      value:
        audeinceId: 60ccea95-1435-4180-97a5-58af4aa285ab
        name: People who ordered in the last 30 days
        profileInstanceId: ups
        description: This audience is generated to see people who ordered in the last 30 days.
        type: SegmentDefinition
        expression:
          type: PQL
          format: pql/text
          value: "workAddress.country = \"US\""
        schema:
          name: _xdm.context.profile
        labels:
          - core/C1
      
    PlatformAudience:
      description: A sample Platform-generated audience.
      value:
        id: 60ccea95-1435-4180-97a5-58af4aa285ab
        audienceId: 60ccea95-1435-4180-97a5-58af4aa285ab
        schema:
          name: _xdm.context.profile
        profileInstanceId: ups
        imsOrgId: 1BD6382559DF0C130A49422D@AdobeOrg
        sandbox:
          sandboxId: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
          sandboxName: prod
          type: production
          default: true
        isSystem: false
        name: People who ordered in the last 30 days
        description: This audience is generated to see people who ordered in the last 30 days.
        expression:
          type: PQL
          format: pql/text
          value: "workAddress.country = \"US\""
        mergePolicyId:
          ef006bbe-750e-4e81-85f0-0c6902192dcc
        evaluationInfo:
          batch:
            enabled: false
          continuous:
            enabled: true
          synchronous:
            enabled: false
        dataGovernancePolicy:
          excludeOptOut: true
        creationTime: 1650374572000
        updateEpoch: 1650374573
        updateTime: 1650374573000
        createEpoch: 1650374572
        _etag: "\"33120d7c-0000-0200-0000-625eb7ad0000\""
        dependents: []
        definedOn: 
          - meta:resourceType: unions
            meta:containerId: tenant
            "$ref": "https://ns.adobe.com/xdm/context/profile__union"
        dependencies: []
        type: SegmentDefinition
        overridePerformanceWarnings: false
        createdBy: audiences@AdobeId
        lifecycle: active
        labels:
          - core/C1
        namespace: AEPSegments
    ExternalAudience:
      description: A sample externally generated audience.
      value:
        id: 322f9f62-cd27-11ec-9d64-0242ac120002
        audienceId: test-external-audience-id
        name: externalSegment1
        namespace: aam
        imsOrgId: 1BD6382559DF0C130A49422D@AdobeOrg
        sandbox:
          sandboxId: 6ed34f6f-fe21-4a30-934f-6ffe21fa3075
          sandboxName: prod
          type: production
          default: true
        isSystem: false
        description: This audience is generated to see people who ordered in the last 30 days.
        type: ExternalSegment
        lifecycle: published
        createdBy: externalAudience@AdobeID
        datasetId: 6254cf3c97f8e31b639fb14d
        labels:
          - core/C1
        audienceMeta:
          segmentStatus: ACTIVE
          AAMFolderId: 325813-testnew
        linkedAudienceRef:
          flowId: 4685ea90-d2b6-11ec-9d64-0242ac120002
        _etag: "\"f4102699-0000-0200-0000-625cd61a0000\""
        creationTime: 1650251290000
        updateEpoch: 1650251290
        updateTime: 1650251290000
        createEpoch: 1650251290