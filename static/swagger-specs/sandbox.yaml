openapi: 3.0.1
info:
  title: Sandbox API
  description: |-
    Adobe Experience Platform provides virtual sandbox environments which provide isolation and access control for Platform integrations. Use sandboxes for application lifecycle management, project management, and to build customized development ecosystems. Use sandbox tooling to seamlessly export and import sandbox configurations between sandboxes through the use of packages.
    - **Related documentation**:
        - [Sandbox documentation](https://adobe.com/go/sandbox-overview-en)
        - [Sandbox tooling documentation](http://adobe.com/go/sandbox-tooling-en)

    - **Visualize API calls with Postman (a free, third-party software)**:
        - [Sandbox API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Sandbox%20API.postman_collection.json)
        - [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
        - [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    - **API paths**:
        - PLATFORM Gateway URL: https://<span>platform.adobe.io/
        - Base path for the sandbox API: /data/foundation/sandbox-management
        - Example of a complete path: https://<span>platform.adobe.io/data/foundation/sandbox-management/sandboxes
        - Base path for the sandbox tooling API: /data/foundation/exim
        - Example of a complete path: https://<span>platform.adobe.io/data/foundation/exim/packages

    - **Required headers**:
        - All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        - All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
        - All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

    - **API error handling**:
        - Refer to the Experience Platform API troubleshooting guide for [FAQs](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#faq), [API status codes](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#api-status-codes), and [request header errors](https://experienceleague.adobe.com/docs/experience-platform/landing/troubleshooting.html#request-header-errors).        

    - **Filtering responses**:
        - When performing listing (GET) requests in the Sandbox API, you can use query parameters to filter responses. Refer to the [Sandbox API queries](https://experienceleague.adobe.com/docs/experience-platform/sandbox/api/appendix.html#query) or the [Sandbox tooling API queries](http://experienceleague.adobe.com/en/docs/experience-platform/sandbox/sandbox-tooling-api/appendix) for a list of available queries.

  version: "1.0"
servers:
- url: https://{environment}.adobe.io/data/foundation
  variables:
    environment:
      default: platform
      enum: 
        - platform
        - platform-stage
tags:
- name: (NEW) Interactive API documentation
  description: You can now interact with the Experience Platform API endpoints directly from this API reference page. Get your [authentication credentials](https://www.adobe.com/go/platform-api-get-credentials-en) and use the **Try it** functionality in the right rail. Note that by using this functionality, you are making real API calls. Keep this in mind when you interact with production sandboxes.
- name: Admin operations
  description: "Sandbox operations available only to admins. Sandbox admin privileges are managed through the [Adobe Admin Console](https://adminconsole.adobe.com)."
- name: User operations
  description: Sandbox operations available to all users.
paths:
  /sandbox-management/:
    get:
      tags:
      - User operations
      summary: List active sandboxes
      operationId: listActiveSandboxes
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-user-token'
      responses:
        "200":
          x-summary: "Success"
          description: A list of sandboxes with matching criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActiveSandboxes'
        "400":
          x-summary: "Bad request"
          description: Bad request
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: You do not have access permissions for this endpoint.
          content: {}
        404:
          x-summary: "Not found"
          description: Not found
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
  /sandbox-management/sandboxTypes:
    get:
      tags:
      - Admin operations
      summary: List all supported sandbox types
      operationId: listSandboxTypes
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
      responses:
        "200":
          x-summary: "Success"
          description: List of supported sandbox types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSandboxTypes'
        "400":
          x-summary: "Bad request"
          description: Bad request
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: You do not have access permissions for this endpoint.
          content: {}
        404:
          x-summary: "Not found"
          description: Not found
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
  /sandbox-management/sandboxes:
    get:
      tags:
      - Admin operations
      summary: List sandboxes
      description: This endpoint lists all the sandboxes that belong to your IMS Organization.
      operationId: listSandboxes
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-user-token'
        - $ref: '#/components/parameters/property'
        - $ref: '#/components/parameters/orderBy'
      responses:
        "200":
          x-summary: "Success"
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSandboxes'
        "400":
          x-summary: "Bad request"
          description: Bad request
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: You do not have access permissions for this endpoint.
          content: {}
        404:
          x-summary: "Not found"
          description: Not found
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
    post:
      tags:
      - Admin operations
      summary: Create a sandbox
      operationId: createSandbox
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-user-token'
      requestBody:
        description: JSON payload that outlines the details of the sandbox to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSandboxPayload'
        required: true
      responses:
        "202":
          x-summary: "Success"
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSandboxResponse'
        "400":
          x-summary: "Bad request"
          description: Bad request
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: You do not have access permissions for this endpoint.
          content: {}
        "409":
          x-summary: "Conflict"
          description: Conflict
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
  /sandbox-management/sandboxes/{sandboxName}:
    get:
      tags:
      - Admin operations
      summary: Retrieve a sandbox
      description: You can use this endpoint to retrieve a sandbox by name.
      operationId: retrieveSandbox
      parameters:
        - $ref: '#/components/parameters/sandboxName'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/x-user-token'
      responses:
        "200":
          x-summary: "Success"
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveSandbox'
        "400":
          x-summary: "Bad request"
          description: Bad request
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: You do not have access permissions for this endpoint.
          content: {}
        404:
          x-summary: "Not found"
          description: Not found
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
    put:
      tags:
      - Admin operations
      summary: Reset a sandbox
      description: "You can use this endpoint to reset a sandbox, as specified by the name."
      operationId: resetSandbox
      parameters:
        - $ref: '#/components/parameters/sandboxName'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-user-token'
      requestBody:
        description: Reset Sandbox
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetSandboxPayload'
        required: true
      responses:
        "202":
          x-summary: "Success"
          description: Request accepted
          headers:
            Location:
              description: URL to check status of the request
              schema:
                type: string
          content: {}
        "400":
          x-summary: "Bad request"
          description: Bad request
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: You do not have access permissions for this endpoint.
          content: {}
        404:
          x-summary: "Not found"
          description: Not found
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
      x-codegen-request-body-name: action
    delete:
      tags:
      - Admin operations
      summary: Delete a sandbox
      description: You can use this endpoint to delete a sandbox by name.
      operationId: deleteSandbox
      parameters:
        - $ref: '#/components/parameters/sandboxName'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/x-user-token'
      responses:
        "202":
          x-summary: "Success"
          description: Request accepted
          headers:
            Location:
              description: Url to check status of the request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSandbox'
        "400":
          x-summary: "Bad request"
          description: Bad request
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: You do not have access permissions for this endpoint.
          content: {}
        404:
          x-summary: "Not found"
          description: Not found
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
    patch:
      tags:
      - Admin operations
      summary: Update a sandbox
      description: "You can use this endpoint to update a sandbox, as specified by the name."
      operationId: patchSandbox
      parameters:
        - $ref: '#/components/parameters/sandboxName'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-user-token'
      requestBody:
        description: "JSON payload outlining the sandbox properties to be updated, along with their new values."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSandboxPayload'
        required: true
      responses:
        "200":
          x-summary: "Success"
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveSandbox'
        "400":
          x-summary: "Bad request"
          description: Bad request
          content: {}
        403:
          x-summary: "Missing access permissions"
          description: You do not have access permissions for this endpoint.
          content: {}
        404:
          x-summary: "Not found"
          description: Not found
          content: {}
        "500":
          x-summary: "Internal server error"
          description: "There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists."
          content: {}
      x-codegen-request-body-name: action
  /exim/packages:
    get:
      tags:
      - User operations
      summary: List packages
      description: Use this endpoint to list all packages. Make use of the query parameters to filter the list of returned packages.
      operationId: listPackages
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/status'
      responses:
        "200":
          x-summary: Package was fetched successfully.
          description: The package was fetched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesResponse'
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
    post:
      tags:
      - User operations
      summary: Create a package
      description: Use this endpoint to create a multi-artifact package while providing values for your package's name and package type.
      operationId: createPackage
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/content-type'
      requestBody:
        description: The JSON payload outlines the details of the package to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePackagePayload'
        required: true
      responses:
        "201":
          x-summary: Package created successfully
          description: The new package was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackageResponse'
        "400":
          x-summary: Bad request. Check the payload.
          description: "Bad request due to incorrect formatting (such as a bad expiry date or missing attribute name), or the package name already exists."
          content: {}
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
    put: 
      tags:
      - User operations
      summary: Update a package
      description: Use this endpoint to add or delete an artifact to a package, or update a package's metadata.
      operationId: updatePackage
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/content-type'
      requestBody:
        description: The JSON payload outlines the update request for a package.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AddArtifactPayload'
                - $ref: '#/components/schemas/DeleteArtifactPayload'
                - $ref: '#/components/schemas/UpdatePackageMetadata'
        required: true
      responses:
        "201":
          x-summary: Package updated successfully
          description: The new package was updated.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/AddArtifactResponse'
                - $ref: '#/components/schemas/DeleteArtifactResponse'
                - $ref: '#/components/schemas/UpdatePackageResponse'
        "400":
          x-summary: Bad request. Check the payload.
          description: "Bad request due to incorrect formatting (such as a bad expiry date or missing attribute name), or the package name already exists."
          content: {}
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
  /exim/packages/import:
    put:
      tags:
      - User operations
      summary: Submit an import
      description: Use this endpoint to submit an import for a package after review conflicts. Only packages with the `PUBLISHED` status can be imported.
      operationId: submitImport
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/content-type'
      requestBody:
        description: The JSON payload provides information on the imported package and an optional map of substitutions where the key is the `artifactId` provided by the package, and the alternative is the value. If the map is empty, no substitutions are performed. The payload also accepts a user specified name and description for import job. 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitImportPayload'
        required: true
      responses:
        "202":
          x-summary: Request successful.
          description: The import request was accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitImportResponse'
        "400":
          x-summary: Bad request. Check the payload.
          description: Bad request due to an incorrect or missing package ID or the package status not being `PUBLISHED`. 
          content: {}
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
  /exim/packages/jobs:
    get:
      tags:
      - User operations
      summary: List export/import jobs
      description: Use this endpoint to all current export/import jobs. Make use of the query parameters to filter the list of returned packages.
      operationId: listJobs
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/jobType'
        - $ref: '#/components/parameters/jobStatus'
        - $ref: '#/components/parameters/requestType'
      responses:
        "200":
          x-summary: Jobs fetched successfully.
          description: The export and import jobs were fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
  /exim/packages/{packageID}:
    get:      
      tags:
      - User operations
      summary: Look up a package
      description: Use this endpoint to look up an individual package.
      operationId: lookUpPackage
      parameters:
        - $ref: '#/components/parameters/packageID'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
      responses:
        "200":
          x-summary: Package was fetched successfully.
          description: The package was fetched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageResponse'
        "400":
          x-summary: Bad request. Check the package ID.
          description: "Bad request due to incorrect package ID."
          content: {}
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
    delete:      
      tags:
      - User operations
      summary: Delete a package
      description: Use this endpoint to delete a package by ID.
      operationId: deletePackage
      parameters:
        - $ref: '#/components/parameters/packageID'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
      responses:
        "200":
          x-summary: Package deleted successfully.
          description: The package was deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageResponse'
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
  /exim/packages/{packageID}/export:
    get:      
      tags:
      - User operations
      summary: Publish a package
      description: Use this endpoint to publish a package by ID, enabling it to be imported. The package status must be `PARTIAL` or `PUBLISHED_FAILED`. If the `packageType` is `PARTIAL` it must contain artifacts.
      operationId: publishPackage
      parameters:
        - $ref: '#/components/parameters/packageID'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/expiryPeriod'
      responses:
        "200":
          x-summary: Package was published successfully.
          description: The package was published.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishPackageResponse'
        "400":
          x-summary: Bad request. There was an incorrect status, bad expiry period, or no artifacts to publish.
          description: "Bad request due to incorrect an incorrect status, a negative value for the expiry period, or no artifacts to publish."
          content: {}
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
  /exim/packages/{packageID}/import:
    get:      
      tags:
      - User operations
      summary: Import a package 
      description: Use this endpoint to fetch conflicting objects in the specified target sandbox before submitting an import. Conflicting objects represent similar objects that are already present in the target sandbox.
      operationId: importPackag
      parameters:
        - $ref: '#/components/parameters/packageID'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/targetSandbox'
      responses:
        "200":
          x-summary: Success.
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPackageResponse'
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
  /exim/packages/{packageID}/children:
    post:
      tags:
      - User operations
      summary: List all dependent objects # why is this called object instead of artifacts?
      description: Use this endpoint to list all dependent objects for the provided objects in a package. This cannot be performed on a package with a `DRAFT` status.
      operationId: dependentObjects
      parameters:
        - $ref: '#/components/parameters/packageID'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/content-type'
      requestBody:
        description: The JSON payload provides a list of the package's objects.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependentObjectsPayload'
        required: true
      responses:
        "201":
          x-summary: Request successful
          description: The children were found successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackageResponse'
        "400":
          x-summary: Bad request. Check the payload.
          description: Bad request due to an incorrect or missing package ID, a missing parent object ID, or the package status being `DRAFT`. 
          content: {}
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
  /exim/packages/preflight/{packageID}/export:
    get:      
      tags:
      - User operations
      summary: Check role-based permissions to import all package artifacts
      description: Use this endpoint to check if you have permissions to import package artifacts.
      operationId: checkImportPermissions
      parameters:
        - $ref: '#/components/parameters/packageID'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/targetSandbox'
      responses:
        "200":
          x-summary: Request successfull.
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckImportPermissionsResponse'
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
  /exim/handshake/bulkCreate:
    post:
      tags:
      - User operations
      summary: Send share requests
      description: Use this endpoint to send a request to target partner organizations for sharing approval. This is required before you can share private packages.
      operationId: shareRequest
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-gw-ims-org-id'
        - $ref: '#/components/parameters/x-sandbox-name'
        - $ref: '#/components/parameters/accept'
        - $ref: '#/components/parameters/content-type'
      requestBody:
        description: The JSON payload provides a list of target organizations and the source organization.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareRequestPayload'
        required: true
      responses:
        "201":
          x-summary: Request successful
          description: The share request were successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareRequestResponse'
        "400":
          x-summary: Bad request. Check the payload.
          description: Bad request due an error in the payload. 
          content: {}
        "500":
          x-summary: An internal server error has occurred.
          description: There was an internal server error. Try the request again in a few minutes, and contact Adobe Support if the problem persists.
          content: {}
components:
  schemas:
    ListActiveSandboxes:
      type: object
      properties:
        sandboxes:
          type: array
          items:
            $ref: '#/components/schemas/GetSandboxUserResponse'
        _page:
          $ref: '#/components/schemas/Page'
        _links:
          $ref: '#/components/schemas/Page.Links'
    ListSandboxTypes:
      type: object
      properties:
        sandboxTypes:
          type: array
          items:
            $ref: '#/components/schemas/GetSandboxTypeResponse'
    ListSandboxes:
      type: object
      properties:
        sandboxes:
          type: array
          items:
            $ref: '#/components/schemas/GetSandboxSystemResponse'
        _page:
          $ref: '#/components/schemas/Page'
        _links:
          $ref: '#/components/schemas/Page.Links'
    CreateSandboxPayload:
      required:
      - name
      - title
      - type
      type: object
      properties:
        name:
          type: string
          example: my-dev-sandbox
        title:
          type: string
          example: My Dev Sandbox
        type:
          type: string
          example: development
          enum:
          - production
          - development
    CreateSandboxResponse:
      type: object
      properties:
        id:
          type: string
          description: Only visible to services. User responses will omit this attribute.
          example: 180e1210-d33a-11e9-8b17-d9e538719ued
        name:
          type: string
          description: "The user generated human friendly name for the sandbox that will be used to access the sandbox in future requests. This value must be unique, and best practice is to make it as descriptive as possible. This value cannot contain any spaces or special characters."
          example: acme-sandbox
        title:
          type: string
          description: A human-readable name used for display purposes in the Platform
            user interface.
          example: ACME Sandbox
        state:
          type: string
          description: "The state of the sandbox and has two values, `active` or `failed`. A sandbox becomes `active` once it has been successfully provisioned."
          example: creating
          enum:
          - creating
          - provisioning
          - active
          - cleaning
          - de-provisioning
          - deleted
          - failed
        type:
          type: string
          description: "The type of sandbox to be created. For a non-production sandbox, this value must be `development`. For a production sandbox, this value must be `production`."
          example: development
          enum:
          - production
          - development
        region:
          type: string
          example: VA7
    RetrieveSandbox:
      type: object
      properties:
        id:
          type: string
          description: Only visible to services. User responses will omit this attribute
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          description: The name of the sandbox in which the operation will take place.
          example: acme-sandbox
        title:
          type: string
          description: The display name for the sandbox.
          example: ACME Sandbox
        state:
          type: string
          description: |
            The current processing state of the sandbox. The state of a sandbox can be any of the following:

             - **`creating`:** The sandbox has been created, but is still being provisioned by the system.
             - **`active`:** The sandbox is created and active.
             - **`deleted`:** The sandbox has been manually disabled.
             - **`failed`:** Due to an error, the sandbox was not able to be provisioned by the system and is disabled.
          example: active
          enum:
          - creating
          - active
          - deleting
          - resetting
          - deleted
          - failed
        type:
          type: string
          description: The type of sandbox. The current supported sandbox types include
            `development` and `production`.
          example: development
          enum:
          - production
          - development
        region:
          type: string
          example: VA7
        isDefault:
          type: boolean
          description: A boolean property indicating whether this sandbox is the default production sandbox for the organization.
          example: true
        etag:
          type: integer
          description: An identifier for a specific version of the sandbox. `etag` is used for version control and caching efficiency.
          example: 1
        createdDate:
          type: string
          description: The date and time the sandbox was created.
          format: date-time
        lastModifiedDate:
          type: string
          description: The date and time the sandbox was last modified.
          format: date-time
        createdBy:
          type: string
          description: Details of the user who created the sandbox.
          example: ""
        modifiedBy:
          type: string
          description: Details of the user who last modified the sandbox.
          example: ""
        _system:
          $ref: '#/components/schemas/SandboxSystemObject'   
    ResetSandboxPayload:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          example: reset    
    DeleteSandbox:
      type: object
      properties:
        id:
          type: string
          description: Only visible to services.
          example: 180e1210-d33a-11e9-8b17-d9e538719ued
        name:
          type: string
          description: The name of the sandbox you want to delete.
          example: acme-sandbox
        title:
          type: string
          description: The display name for the sandbox.
          example: ACME Sandbox
        state:
          type: string
          description: A successful deletion request for a sandbox updates the sandbox `state` to `deleted` and deactivates it. The default production sandbox cannot be deleted.
          example: cleaning
          enum:
          - creating
          - provisioning
          - active
          - cleaning
          - de-provisioning
          - deleted
          - failed
        type:
          type: string
          description: The type of sandbox being deleted. The current supported sandbox types include `development` and `production`.
          example: development
          enum:
          - production
          - development
        region:
          type: string
          example: VA7
    PatchSandboxPayload:
      required:
      - title
      type: object
      properties:
        title:
          type: string
          example: My Sandbox   
    Page:
      type: object
      properties:
        limit:
          type: integer
          description: The maximum number of records to be returned in the response.
        count:
          type: integer
          description: The number of records returned in the response.
    Page.Links:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/Link'
        page:
          $ref: '#/components/schemas/Link'
    Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    GetSandboxTypeResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    GetSandboxSystemResponse:
      type: object
      properties:
        id:
          type: string
          description: Only visible to services. User responses will omit this attribute
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          description: The name of the sandbox in which the operation will take place.
          example: acme-sandbox
        title:
          type: string
          description: The display name for the sandbox.
          example: ACME Sandbox
        state:
          type: string
          description: |
            The current processing state of the sandbox. The state of a sandbox can be any of the following:

             - **`creating`:** The sandbox has been created, but is still being provisioned by the system.
             - **`active`:** The sandbox is created and active.
             - **`deleted`:** The sandbox has been manually disabled.
             - **`failed`:** Due to an error, the sandbox was not able to be provisioned by the system and is disabled.
          example: active
          enum:
          - creating
          - active
          - deleting
          - resetting
          - deleted
          - failed
        type:
          type: string
          description: The type of sandbox. The supported sandbox types include `development` and `production`.
          example: development
          enum:
          - production
          - development
        region:
          type: string
          example: VA7
        isDefault:
          type: boolean
          description: A boolean property indicating whether this sandbox is the default production sandbox for the organization.
          example: true
        etag:
          type: integer
          description: An identifier for a specific version of the sandbox. `etag` is used for version control and caching efficiency.
          example: 1
        createdDate:
          type: string
          description: The date and time the sandbox was created.
          format: date-time
        lastModifiedDate:
          type: string
          description: The date and time the sandbox was last modified.
          format: date-time
        createdBy:
          type: string
          description: Details of the user who created the sandbox.
          example: ""
        modifiedBy:
          type: string
          description: Details of the user who last modified the sandbox.
          example: ""
        _system:
          $ref: '#/components/schemas/SandboxSystemObject'
    GetSandboxUserResponse:
      type: object
      properties:
        name:
          type: string
          description: The name of the sandbox in which the operation will take place.
          example: acme-sandbox
        title:
          type: string
          description: The display name for the sandbox.
          example: ACME Sandbox
        state:
          type: string
          description: |
            The current processing state of the sandbox. The state of a sandbox can be any of the following:

             - **`creating`:** The sandbox has been created, but is still being provisioned by the system.
             - **`active`:** The sandbox is created and active.
             - **`deleted`:** The sandbox has been manually disabled.
             - **`failed`:** Due to an error, the sandbox was not able to be provisioned by the system and is disabled.
          example: active
          enum:
          - creating
          - active
          - deleting
          - resetting
          - deleted
          - failed
        type:
          type: string
          description: The type of sandbox. The current supported sandbox types include `development` and `production`.
          example: development
          enum:
          - production
          - development
        region:
          type: string
          example: VA7
        isDefault:
          type: boolean
          description: A boolean property indicating whether this sandbox is the default production sandbox for the organization.
          example: true
        etag:
          type: integer
          description: An identifier for a specific version of the sandbox. `etag` is used for version control and caching efficiency.
          example: 2
        createdDate:
          type: string
          description: The date and time the sandbox was created.
          format: date-time
        lastModifiedDate:
          type: string
          description: The date and time the sandbox was last modified.
          format: date-time
        createdBy:
          type: string
          description: Details of the user who created the sandbox.
          example: ""
        modifiedBy:
          type: string
          description: Details of the user who last modified the sandbox.
          example: ""
    SandboxSystemObject:
      type: object
      properties:
        state:
          type: string
          example: active
          enum:
          - creating
          - provisioning
          - active
          - cleaning
          - de-provisioning
          - deleted
          - failed
        createdDate:
          type: string
          description: The date and time the sandbox was created.
          format: date-time
        createdBy:
          type: string
          description: Details of the user who created the sandbox.
          example: ""
        lastModifiedDate:
          type: string
          description: The date and time the sandbox was last modified.
          format: date-time
        lastModifiedBy:
          type: string
          description: Details of the user who last modified the sandbox.
          example: ""
      description: Only visible to services. User responses will omit this attribute
    PackageResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the package.
          example: 8f585fad94d042cd82dbcba594108a41
        version:
          type: integer
          description: The version of the package.
          example: 2
        createdDate:
          type: integer
          format: int64
          description: The date the package was created.
          example: 1685597784000
        modifiedDate:
          type: integer
          format: int64
          description: The date the package was last modified.
          example: 1685597810000
        createdBy:
          type: string
          description: The Adobe ID of the person who created the package.
          example: "{CREATED_BY}"
        modifiedBy:
          type: string
          description: The Adobe ID of the person who last modified the package.
          example: "{MODIFIED_BY}"
        tenantId:
          type: string
          description: The tenant ID.
          example: c875b077162b40409c1327b16da99c1b
        name:
          type: string
          description: The title of the package.
          example: acme
        description:
          type: string
          description: A description of the package.
          example: Acme Business Group
        imsOrgId:
          type: string
          description: The organization's ID.
          example: "5C1328435BF324E90A49402A@AdobeOrg"
        packageType:
          type: string
          description: The package type.
          example: PARTIAL
        expiry:
          type: integer
          format: int64
          description: The expiry date of the package.
          example: 1693373810000
        publishDate:
          type: integer
          format: int64
          description: The timestamp when the package was published.
          example: 1685597810000
        status:
          type: string
          description: The status of the package.
          example: PUBLISHED
        artifactsList:
          type: array
          description: A list of artifacts that are included in the package.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the artifact.
                example: f4f57771-2bd2-469a-9c13-8d803eeb6515
              type:
                type: string
                description: The artifact type.
                example: JOURNEY
              found:
                type: boolean
                description: Whether the artifact was found during package creation.
                example: false
              count:
                type: integer
                description: The number of matching artifacts found.
                example: 0
        sourceSandbox:
          type: object
          description: Details for the sandbox the package belongs to.
          properties:
            name:
              type: string
              description: The name of the source sandbox.
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The organization ID of the source sandbox.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
    CreatePackagePayload:
      required:
      - name
      - packageType
      type: object
      properties:
        name:
          type: string
          description: The name of your package.
          example: Acme
        description:
          type: string
          description: A description to provide more information on your package.
          example: Acme Business Group
        packageType:
          type: string
          description: The package type is `PARTIAL` to indicate you are including specific artifacts in a package or `FULL` when exporting the entire sandbox.
          example: PARTIAL
          enum:
          - PARTIAL
          - FULL
        sourceSandbox:
          type: object
          description: The source sandbox of the package.
          properties:
            name:
              type: string
              description: The name of the sandbox
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The ID of the organization the sandbox belongs to.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
        expiry:
          type: string
          description: A timestamp that defines the expiration date for the package.
          example: "2023-05-20T20:05:10Z"
        artifacts:
          type: array
          description: The list of artifacts to be exported in a package. The artifact value should be null or empty when `packageType` is `FULL`.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the artifact.
                example: 27115daa-c92b-4f17-a077-d65ffeb0c525
              type:
                type: string
                description: The artifact type.
                example: PROFILE_SEGMENT
              title:
                type: string
                description: A title for the artifact.
                example: Acme Profile Segment
    CreatePackageResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the created package.
          example: 209f886b00444eac9bb5836fe32e7681
        version:
          type: integer
          description: The package version.
          example: 0
        createdDate:
          type: integer
          description: The date the package was created.
          format: int64
          example: 1684475012105
        modifiedDate:
          type: integer
          description: The date the package was last modified.
          format: int64
          example: 1684475012105
        createdBy:
          type: string
          description: The Adobe ID of the user who created the package.
          example: "{CREATED_BY}"
        modifiedBy:
          type: string
          description: The Adobe ID of who last modified the package.
          example: "{MODIFIED_BY}"
        tenantId:
          type: string
          description: The tenant ID.
          example: c875b077162b40409c1327b16da99c1b
        requestId:
          type: string
          description: The request ID.
          example: devxa54a6b56d04f46119d9e3cc006fcc1cb
        userId:
          type: string
          description: The ID of the user who created the package.
          example: platform_exim
        name:
          type: string
          description: The name of the package.
          example: Acme
        description:
          type: string
          description: The package description.
          example: Acme Business Group
        imsOrgId:
          type: string
          description: The organization's ID.
          example: "5C1328435BF324E90A49402A@AdobeOrg"
        sourceSandbox:
          type: object
          description: Details for the sandbox the package belongs to.
          properties:
            name:
              type: string
              description: The name of the sandbox the package belongs to.
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The organization ID of sandbox the package belongs to.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
        packageType:
          type: string
          description: The package type.
          example: PARTIAL
        expiry:
          type: integer
          description: The expiry date of the package.
          format: int64
          example: 1684613110000
        status:
          type: string
          description: The status of the package. The default status is `DRAFT`.
          example: DRAFT
        artifactsList:
          type: array
          description: A list of artifacts that are included in the package.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the artifact.
                example: d8d8ed6d-696a-40bd-b4fe-ca053ec94e29
              type:
                type: string
                description: The artifact type.
                example: JOURNEY
              found:
                type: boolean
                description:  Whether the artifact was found during package creation.
                example: false
              count:
                type: integer
                description: The number of matching artifacts found.
                example: 0
    AddArtifactPayload:
      required:
        - id
        - action
      type: object
      properties:
        id:
          type: string
          description: Defines the ID of the package to be updated.
          example: 6fa50baedd344a278129a87e68cc9dc7
        action:
          type: string
          description: "To add artifacts into the package, the action value should be `ADD`. Action is only supported for `PARTIAL` package type."
          enum:
            - ADD
          example: ADD
        expiry:
          type: string
          format: date-time
          description: Send if a custom expiration is needed. Defaults to +90 days from the API call.
          example: 2023-05-20T20:05:10Z
        artifacts:
          type: array
          description: The list of artifacts to be added to the package.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the artifact to be added.
                example: "d8d8ed6d-696a-40bd-b4fe-ca053ec94e29@1647559351683"
              type:
                type: string
                description: "The artifact type to be added. For a complete list of supported artifact types, visit the [update a package](https://www.adobe.com/go/sandbox-tooling-api-package-update) guide."
                example: JOURNEY
    DeleteArtifactPayload:
      required:
        - id
        - action
      type: object
      properties:
        id:
          type: string
          description: Defines the ID of the package to be updated.
          example: 6fa50baedd344a278129a87e68cc9dc7
        action:
          type: string
          description: To delete artifacts from the package, the action value should be `DELETE`. Action is only supported for `PARTIAL` package type.
          enum:
            - DELETE
          example: DELETE
        artifacts:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the artifact to be deleted.
                example: "d8d8ed6d-696a-40bd-b4fe-ca053ec94e29@1647559351683"
              type:
                type: string
                description: The artifact type to be deleted.
                example: JOURNEY
    UpdatePackageMetadata:
      required:
        - id
        - action
        - name
        - sourceSandbox
      type: object
      properties:
        id:
          type: string
          description: Defines the ID of the package to be updated.
          example: 6fa50baedd344a278129a87e68cc9dc7
        action:
          type: string
          description: To update metadata information about the package, action value should be `UPDATE`.
          enum:
            - UPDATE
          example: UPDATE
        name:
          type: string
          description: The updated name of the package. Duplicate package names are not allowed.
          example: Acme Corp
        description:
          type: string
          description: The updated description of the package.
          example: Acme Business Group
        sourceSandbox:
          type: object
          properties:
            name:
              type: string
              description: The name of the source sandbox for the package.
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The org ID of the source sandbox for the package.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
    AddArtifactResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the package.
          example: 6fa50baedd344a278129a87e68cc9dc7
        version:
          type: integer
          description: The version of the package.
          example: 4
        createdDate:
          type: integer
          description: The date the package was created.
          format: int64
          example: 1684235842000
        modifiedDate:
          type: integer
          description: The date the package was last modified.
          format: int64
          example: 1684475861366
        createdBy:
          type: string
          description: The Adobe ID of the person who created the package.
          example: "{CREATED_BY}"
        modifiedBy:
          type: string
          description: The Adobe ID of the person who last modified the package.
          example: "{MODIFIED_BY}"
        tenantId:
          type: string
          description: The tenant ID.
          example: c875b077162b40409c1327b16da99c1b
        name:
          type: string
          description: The title of the package.
          example: Acme
        description:
          type: string
          description: The description of the package.
          example: Acme Business Group
        imsOrgId:
          type: string
          description: The organization's ID.
          example: "5C1328435BF324E90A49402A@AdobeOrg"
        sourceSandbox:
          type: object
          description: Details for the sandbox the package belongs to.
          properties:
            name:
              type: string
              description: The name of the sandbox the package belongs to.
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The organization ID of sandbox the package belongs to.
              example: "745F37C35E4B776E0A49421B@AdobeOrg"
        packageType:
          type: string
          description: The package type.
          example: PARTIAL
        expiry:
          type: integer
          description: The expiry date of the package.
          format: int64
          example: 1692251861352
        status:
          type: string
          description: The status of the package. The default status is `DRAFT`.
          example: DRAFT
        artifactsList:
          type: array
          description: A list of artifacts that are included in the package.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the artifact.
                example: "d8d8ed6d-696a-40bd-b4fe-ca053ec94e29@1647559351683"
              type:
                type: string
                description: The artifact type.
                example: JOURNEY
              found:
                type: boolean
                description:  Whether the artifact was found during package creation.
                example: false
              count:
                type: integer
                description: The number of matching artifacts found.
                example: 0
    DeleteArtifactResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the package.
          example: 6fa50baedd344a278129a87e68cc9dc7
        version:
          type: integer
          description: The version of the package.
          example: 5
        createdDate:
          type: integer
          format: int64
          description: The date the package was created.
          example: 1684235842000
        modifiedDate:
          type: integer
          format: int64
          description: The date the package was last modified.
          example: 1684478830416
        createdBy:
          type: string
          description: The Adobe ID of the person who created the package.
          example: "{CREATED_BY}"
        modifiedBy:
          type: string
          description: The Adobe ID of the person who last modified the package.
          example: "{MODIFIED_BY}"
        tenantId:
          type: string
          description: The tenant ID.
          example: c875b077162b40409c1327b16da99c1b
        name:
          type: string
          description: The title of the package.
          example: Acme
        description:
          type: string
          description: A description of the package.
          example: Acme Business Group
        imsOrgId:
          type: string
          description: The organization's ID.
          example: "5C1328435BF324E90A49402A@AdobeOrg"
        sourceSandbox:
          type: object
          description: Details for the sandbox the package belongs to.
          properties:
            name:
              type: string
              description: The name of the sandbox the package belongs to.
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The organization ID of the sandbox the package belongs to.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
        packageType:
          type: string
          description: The package type.
          example: PARTIAL
        expiry:
          type: integer
          format: int64
          description: The expiry date of the package.
          example: 1692254830403
        status:
          type: string
          description: The status of the package. The default status is `DRAFT`.
          example: DRAFT
        artifactsList:
          type: array
          description: A list of artifacts that are included in the package.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the artifact.
                example: d8d8ed6d-696a-40bd-b4fe-ca053ec94e29
              type:
                type: string
                description: The artifact type.
                example: JOURNEY
              found:
                type: boolean
                description: Whether the artifact was found during package creation.
                example: false
              count:
                type: integer
                description: The number of matching artifacts found.
                example: 0
    UpdatePackageResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the package.
          example: 6fa50baedd344a278129a87e68cc9dc7
        version:
          type: integer
          description: The version of the package.
          example: 6
        createdDate:
          type: integer
          format: int64
          description: The date the package was created.
          example: 1684235842000
        modifiedDate:
          type: integer
          format: int64
          description: The date the package was last modified.
          example: 1684479094129
        createdBy:
          type: string
          description: The Adobe ID of the person who created the package.
          example: "{CREATED_BY}"
        modifiedBy:
          type: string
          description: The Adobe ID of the person who last modified the package.
          example: "{MODIFIED_BY}"
        tenantId:
          type: string
          description: The tenant ID.
          example: c875b077162b40409c1327b16da99c1b
        name:
          type: string
          description: The title of the package.
          example: acme
        description:
          type: string
          description: A description of the package.
          example: Acme Business Group
        imsOrgId:
          type: string
          description: The organization's ID.
          example: "5C1328435BF324E90A49402A@AdobeOrg"
        sourceSandbox:
          type: object
          description: Details for the sandbox the package belongs to.
          properties:
            name:
              type: string
              description: The name of the sandbox the package belongs to.
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The organization ID of the sandbox the package belongs to.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
        packageType:
          type: string
          description: The package type.
          example: PARTIAL
        expiry:
          type: integer
          format: int64
          description: The expiry date of the package.
          example: 1692255094127
        status:
          type: string
          description: The status of the package. The default status is `DRAFT`.
          example: DRAFT
        artifactsList:
          type: array
          description: A list of artifacts that are included in the package.
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID of the artifact.
                example: d8d8ed6d-696a-40bd-b4fe-ca053ec94e29
              type:
                type: string
                description: The artifact type.
                example: JOURNEY
              found:
                type: boolean
                description: Whether the artifact was found during package creation.
                example: false
              count:
                type: integer
                description: The number of matching artifacts found.
                example: 0
    DeletePackageResponse:
      type: object
      properties:
        reason:
          type: string
          description: A message confirming the successful deletion of the package.
          example: Package d30e0424a37b46ada6a5cf37f47a86ff deleted
    PublishPackageResponse:
      type: object
      properties:
        name:
          type: string
          description: The name of the package.
          example: acme
        description:
          type: string
          description: A description of the package.
          example: Acme Business Group
        visibility:
          type: string
          description: The visibility scope of the package.
          example: TENANT
        sourceSandbox:
          type: object
          description: Information about the sandbox from which the package is being exported.
          properties:
            name:
              type: string
              description: The name of the source sandbox.
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The organization ID of the source sandbox.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
        type:
          type: string
          description: The type of package export.
          example: PARTIAL
        correlationId:
          type: string
          description: The ID used to correlate related operations.
          example: 48effe5e-1bef-4250-9c71-23b93ef5d285
        jobId:
          type: string
          description: The ID of the export job.
          example: 18abab44e25f40c284a4bd6e8f52fd29
    ListPackagesResponse:
      type: object
      properties:
        totalElements:
          type: integer
          description: Total number of elements available across all pages.
          example: 109
        currentPage:
          type: integer
          description: The current page number being returned.
          example: 0
        totalPages:
          type: integer
          description: Total number of pages available.
          example: 6
        hasPreviousPage:
          type: boolean
          description: Indicates whether there is a previous page.
          example: false
        hasNextPage:
          type: boolean
          description: Indicates whether there is a next page.
          example: true
        data:
          type: array
          description: List of packages for the current page.
          items:
            $ref: '#/components/schemas/PackageResponse'
    ImportPackageResponse:
      type: array
      description: List of conflicts with related messages and suggested alternatives.
      items:
        type: object
        properties:
          artifact:
            type: object
            description: The original artifact.
            properties:
              id:
                type: string
                description: Unique identifier of the artifact.
                example: https://ns.adobe.com/cjmstage/schemas/20121c2110bb2c6a585baabe5f82994577da1f7d0628234c
              type:
                type: string
                description: The type of artifact.
                example: REGISTRY_SCHEMA
              found:
                type: boolean
                description: Indicates whether the artifact was found.
                example: false
              count:
                type: integer
                description: Number of matched results for this artifact.
                example: 0
              messages:
                type: array
                description: Status messages related to this artifact.
                items:
                  type: object
                  properties:
                    status:
                      type: string
                      description: Status result for the artifact lookup.
                      example: FOUND
                    attempt:
                      type: integer
                      description: The attempt number for the resolution.
                      example: 1
                    message:
                      type: string
                      description: Human-readable message about the resolution status.
                      example: "Found object with ID: https://ns.adobe.com/cjmstage/schemas/20121c2110bb2c6a585baabe5f82994577da1f7d0628234c"
          suggestionList:
            type: array
            description: Suggested artifacts that may be appropriate substitutes or alternatives.
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Unique identifier of the suggested artifact.
                  example: "https://ns.adobe.com/cjmstage/schemas/176f33f6a8ff6542de1256f8dc01cce4be1b3a68fd5f5bc5"
                type:
                  type: string
                  description: Type of the suggested artifact.
                  example: REGISTRY_SCHEMA
                found:
                  type: boolean
                  description: Indicates whether the suggestion was found.
                  example: false
                count:
                  type: integer
                  description: Number of occurrences for the suggested artifact.
                  example: 0
                title:
                  type: string
                  description: Title or label for the suggested artifact.
                  example: Dean Dataset 1 - adhoc schema - 1618950408870_1686403052050
          parentID:
            type: string
            description: Canonical identifier used to relate the artifact to its source context.
            example: "745F37C35E4B776E0A49421B@AdobeOrg::prod::REGISTRY_SCHEMA::https://ns.adobe.com/cjmstage/schemas/20121c2110bb2c6a585baabe5f82994577da1f7d0628234c"
    SubmitImportPayload:
      type: object
      required:
        - id
        - destinationSandbox
      properties:
        id:
          type: string
          description: The ID of the package to be imported.
          example: 09484a599f5f4a5faa43986643964615
        name:
          type: string
          description: The name of the package.
          example: acme
        description:
          type: string
          description: A description of the package.
          example: Acme Business Group
        destinationSandbox:
          type: object
          description: The sandbox into which the package should be imported.
          required:
            - name
            - imsOrgId
          properties:
            name:
              type: string
              description: The name of the target sandbox.
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The IMS Org ID of the target sandbox.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
        alternatives:
          type: object
          description: A map of source artifact IDs to their chosen alternatives for import.
          additionalProperties:
            type: object
            properties:
              id:
                type: string
                description: The ID of the alternative artifact to use.
                example: https://ns.adobe.com/cjmstage/schemas/a3b935344685afad4e52c753161cf673ec23d4fb1b3e9ce
              type:
                type: string
                description: The artifact type of the alternative.
                example: REGISTRY_SCHEMA
          example:
            "https://ns.adobe.com/cjmstage/schemas/ac33bbd22eb4ad6656e1c7e12e9f520261fb39fd28a902a9":
              id: https://ns.adobe.com/cjmstage/schemas/a3b935344685afad4e52c753161cf673ec23d4fb1b3e9ce
              type: REGISTRY_SCHEMA
    SubmitImportResponse:
      type: object
      properties:
        name:
          type: string
          description: The name of the package that was imported.
          example: acme
        description:
          type: string
          description: A description of the package.
          example: Acme Business Group
        visibility:
          type: string
          description: The visibility scope of the package.
          example: TENANT
        sourceSandbox:
          type: object
          description: The source sandbox the package came from.
          properties:
            name:
              type: string
              description: The name of the source sandbox.
              example: acme-sandbox
            imsOrgId:
              type: string
              description: The organization's ID for the source sandbox.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
        destinationSandbox:
          type: object
          description: The target sandbox to which the package is being imported.
          properties:
            name:
              type: string
              description: The name of the destination sandbox.
              example: acme-sandbox-two
            imsOrgId:
              type: string
              description: The organization's ID for the destination sandbox.
              example: "5C1328435BF324E90A49402A@AdobeOrg"
        type:
          type: string
          description: The package type.
          example: PARTIAL
        correlationId:
          type: string
          description: A correlation ID for tracking the operation.
          example: 48effe5e-1bef-4250-9c71-23b93ef5d285
        jobId:
          type: string
          description: The ID of the job .
          example: 18abab44e25f40c284a4bd6e8f52fd29
    DependentObjectsPayload: 
      type: array
      description: A list of objects to retrieve child objects for within the specified package.
      items:
        type: object
        required:
          - id
          - type
        properties:
          id:
            type: string
            description: The ID of the parent object.
            example: 4d4c874ec3344d64bf8b3160e60ac78b
          type:
            type: string
            description: The object type.
            example: MAPPING_SET
    DependentObjectsResponse:
      type: array
      description: A list of artifacts and their recursively linked children.
      items:
        type: object
        properties:
          id:
            type: string
            description: The ID of the parent artifact.
            example: 4d4c874ec3344d64bf8b3160e60ac78b
          title:
            type: string
            description: The display title of the artifact.
            example: 4d4c874ec3344d64bf8b3160e60ac78b
          type:
            type: string
            description: The type of the artifact (e.g., MAPPING_SET, REGISTRY_SCHEMA, REGISTRY_CLASS).
            example: MAPPING_SET
          children:
            type: array
            description: A list of child artifacts derived from the parent.
            items:
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the child artifact.
                  example: https://ns.adobe.com/cjmstage/schemas/20121c2110bb2c6a585baabe5f82994577da1f7d0628234c
                title:
                  type: string
                  description: The display title of the child artifact.
                  example: Dean Dataset 1 - adhoc schema - 1618950408870
                type:
                  type: string
                  description: The artifact type of the child object.
                  example: REGISTRY_SCHEMA
    CheckImportPermissionsResponse:
      type: object
      properties:
        packageID:
          type: string
          description: The ID of the package being validated.
          example: b7bda68eb1214c86824f1d7204616e51
        targetSandboxName:
          type: string
          description: The name of the sandbox where the package is intended to be imported or validated.
          example: acme-sandbox
        permissionResponse:
          type: array
          description: List of permission evaluations per artifact.
          items:
            type: object
            properties:
              artifactID:
                type: string
                description: The ID of the artifact being evaluated.
                example: 4aca57b6-8b83-450b-a460-e8a07ca79a44
              requiredPermissions:
                type: object
                description: Full set of permissions required for the artifact.
                properties:
                  resources:
                    type: array
                    items:
                      type: object
                      properties:
                        palmResourceType:
                          type: string
                          description: The type of resource the permission applies to.
                          example: Segment
                        resourcePermissions:
                          type: array
                          items:
                            type: string
                          description: List of required actions for this resource type.
                          example: [read, write, delete]
              missingPermissions:
                type: object
                description: The required permissions that are not currently granted.
                properties:
                  resources:
                    type: array
                    items:
                      type: object
                      properties:
                        palmResourceType:
                          type: string
                          description: The resource type with missing permissions.
                          example: Dataset
                        resourcePermissions:
                          type: array
                          items:
                            type: string
                          description: List of missing permission actions.
                          example: [read]
              artifactType:
                type: string
                description: The artifact type.
                example: PROFILE_SEGMENT
              creationAllowed:
                type: boolean
                description: Indicates whether the artifact can be created in the target sandbox based on current permissions.
                example: true
    ListJobsResponse:
      type: object
      description: A paginated list of export/import jobs.
      properties:
        totalElements:
          type: integer
          description: Total number of job records available.
          example: 42
        currentPage:
          type: integer
          description: The current page index.
          example: 0
        totalPages:
          type: integer
          description: The total number of pages available.
          example: 9
        hasPreviousPage:
          type: boolean
          description: Indicates whether a previous page exists.
          example: false
        hasNextPage:
          type: boolean
          description: Indicates whether a next page is available.
          example: true
        data:
          type: array
          description: List of job records on the current page.
          items:
            type: object
            properties:
              id:
                type: string
                description: The unique ID of the job.
                example: 3c1b92cf47a246d7bfbe6fd507c5d543
              name:
                type: string
                description: The name of the job or package.
                example: acme
              updated:
                type: integer
                format: int64
                description: The timestamp of the last update.
                example: 1685973675401
              created:
                type: integer
                format: int64
                description: The timestamp of job creation.
                example: 1685973675401
              jobType:
                type: string
                description: The type of job.
                example: NEW
              packageType:
                type: string
                description: The package type being processed.
                example: PARTIAL
              description:
                type: string
                description: Description of the job or package.
                example: Acme Business Group
              jobStatus:
                type: string
                description: The current status of the job.
                example: SUCCESS
              visibility:
                type: string
                description: The visibility scope of the package.
                example: TENANT
              sourceSandBox:
                type: string
                description: The name of the sandbox the job was exported from.
                example: acme-sandbox
              targetSandbox:
                type: string
                description: The name of the sandbox where the job is targeted.
                example: poc
              createdBy:
                type: string
                description: The identifier of the user who created the job.
                example: "{CREATED_BY}"
    ShareRequestPayload:
      type: object
      required:
        - targetIMSOrgIds
        - sourceIMSDetails
      properties:
        targetIMSOrgIds:
          type: array
          description: A list of organization IDs with which to establish sharing.
          items:
            type: string
            example: acme@AdobeOrg
        sourceIMSDetails:
          type: object
          description: The organization ID initiating the sharing.
          required:
            - id
            - name
          properties:
            id:
              type: string
              description: The organization ID of the source.
              example: acme@AdobeOrg
            name:
              type: string
              description: The display name or alias for the source organization.
              example: acme_org
    ShareRequestResponse:
      type: object
      properties:
        successfulRequests:
          type: object
          description: A map of organization IDs to successfully created relationships.
          additionalProperties:
            type: object
            properties:
              id:
                type: string
                description: The unique ID of the relationship.
                example: "{ID}"
              version:
                type: integer
                description: Version number of the relationship.
                example: 0
              createdDate:
                type: integer
                format: int64
                description: Timestamp when the relationship was created.
                example: 1724938816798
              modifiedDate:
                type: integer
                format: int64
                description: Timestamp when the relationship was last modified.
                example: 1724938816798
              createdBy:
                type: string
                description: The user ID that created the relationship.
                example: "{CREATED_BY}"
              modifiedBy:
                type: string
                description: The user ID that last modified the relationship.
                example: "{MODIFIED_BY}"
              sourceIMSOrgId:
                type: string
                description: The organization initiating the relationship.
                example: "{ORG_ID}"
              targetIMSOrgId:
                type: string
                description: The organization receiving the relationship request.
                example: "{TARGET_ID}"
              sourceRegion:
                type: string
                description: The region of the source organization.
                example: va6
              sourceIMSOrgName:
                type: string
                description: The name of the source organization.
                example: "{SOURCE_NAME}"
              status:
                type: string
                description: The current status of the relationship.
                example: APPROVAL_PENDING
              createdByName:
                type: string
                description: Display name of the user who created the relationship.
                example: "{CREATED_BY}"
              modifiedByName:
                type: string
                description: Display name of the user who last modified the relationship.
                example: "{MODIFIED_BY}"
              modifiedByIMSOrgId:
                type: string
                description: Organization ID of the last user who modified the relationship.
                example: "{ORG_ID}"
              statusHistory:
                type: string
                description: A serialized JSON array representing the status history.
                example: '[{"actionTakenBy":"acme@98ff67fa661fdf6549420b.e","actionTakenByName":"{NAME}","actionTakenByImsOrgID":"{ORG_ID}","action":"INITIATED","actionTimeStamp":1724938816885}]'
              linkingId:
                type: string
                description: ID that links this relationship to another workflow or package.
                example: "{LINKIND_ID}"
        failedRequests:
          type: object
          description: A map of organizatiion IDs to any failed relationship attempts.
          additionalProperties:
            type: object
            description: Reserved for future error structure.
            example: {}
  parameters:
    authorization:
      name: Authorization
      in: header
      description: "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
      required: true
      schema:
        type: string
    x-gw-ims-org-id:
      name: x-gw-ims-org-id
      in: header
      description: "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
      required: true
      schema:
        type: string
    x-api-key:
      name: x-api-key
      in: header
      description: "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
      required: true
      schema:
        type: string
    x-sandbox-name:
      name: x-sandbox-name
      in: header
      description: "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information."
      required: true
      schema:
        type: string
    content-type:
      name: Content-Type
      in: header
      description: The type of content being sent in the body of the request. This value should be `application/json`.
      required: true
      schema:
        type: string
    accept:
      name: Accept
      in: header
      description: The type of content that should be accepted. This value should be `application/json`.
      required: true
      schema:
        type: string
    x-user-token:
      name: x-user-token
      in: header
      description: "The access token for the current user. If present, this token is instead of the token in the Authorization header to lookup sandboxes."
      schema:
        type: string
    orderBy:
      name: orderBy
      in: query
      description: "Parameter used to identify a property to order listed responses by, including sort direction (\"asc:\" for ascending, \"desc:\" for descending). For example, \"orderBy=asc:created,updated\"."
      schema:
        type: string
    property:
      name: property
      in: query
      description: "Regex used to filter objects in the response. For example: \"\
        property=name==test.\""
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: The maximum number of records to be returned in the response. The default limit is 20.
      schema:
        type: integer
    start:
      name: limit
      in: query
      description: The start of where a sub-setted list of items should begin.
      schema:
        type: integer        
    targetSandbox:
      name: targetSandbox
      in: query
      description: Represents the sandbox name where you want to import your artifacts.
      required: true
      schema:
        type: string        
    jobType:
      name: jobType
      in: query
      description: The type of job. This value can be `NEW`, `RESUME`, or `ROLLBACK`.
      schema:
        type: string
        enum: 
        - NEW
        - RESUME 
        - ROLLBACK
    jobStatus:
      name: jobStatus
      in: query
      description: The status of the job. This value can be `PENDING`, `IN_PROGRESS`, `SUCCESS`, `FAILED`, or `CANCELLED`.
      schema:
        type: string
        enum:
          - PENDING
          - IN_PROGRESS
          - SUCCESS
          - FAILED
          - CANCELLED
    requestType:
      name: requestType
      in: query
      description: The type of request. This value can be `EXPORT`, `IMPORT`, or `COPY`.
      schema:
        type: string
        enum:
          - EXPORT
          - IMPORT
          - COPY
    packageType:
      name: packageType
      in: query
      description: The type of package. This value can be `PARTIAL` or `FULL`.
      schema:
        type: string
        enum:
          - PARTIAL
          - FULL
    status:
      name: status
      in: query
      description: The status of the package. This value can be `DRAFT`, `PUBLISHED`, `PUBLISH_IN_PROGRESS`, or `PUBLISH_FAILED`.
      schema:
        type: string
        enum:
          - DRAFT
          - PUBLISHED
          - PUBLISH_IN_PROGRESS
          - PUBLISH_FAILED
    expiryPeriod:
      name: expiryPeriod
      in: query
      description: "This user-specified time period defines the package expiration date (in days) from the time the package was published. This value should not be negative. If no value is specified, the default will be calculated as 90 (days) from the date of publishing."
      schema:
        type: integer
    sandboxName:
      name: sandboxName
      in: path
      description: "The name of a sandbox, used as an identifier."
      required: true
      schema:
        type: string
    packageID:
      name: packageID
      in: path
      description: "The ID of a package, used as an identifier."
      required: true
      schema:
        type: string